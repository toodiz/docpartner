-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Hôte : 127.0.0.1
-- Généré le : mar. 30 juil. 2024 à 17:24
-- Version du serveur : 10.4.32-MariaDB
-- Version de PHP : 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de données : `api_docs`
--

-- --------------------------------------------------------

--
-- Structure de la table `chemin`
--

CREATE TABLE `chemin` (
  `id` int(11) NOT NULL,
  `path` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Déchargement des données de la table `chemin`
--

INSERT INTO `chemin` (`id`, `path`) VALUES
(1, 'pages/docs/sms/smsp1.md'),
(2, 'pages/docs/sms/smsp2.md'),
(5, 'pages/docs/sms/smsp1.en.md'),
(6, 'pages/docs/sms/smsp1.es.md'),
(7, 'pages/docs/sms/smsp1.it.md'),
(8, 'pages/docs/sms/smsp1.pt.md'),
(9, 'pages/docs/sms/smsp2.en.md'),
(10, 'pages/docs/sms/smsp2.es.md'),
(11, 'pages/docs/sms/smsp2.it.md'),
(12, 'pages/docs/sms/smsp2.pt.md'),
(13, 'pages/docs/sms/envoyer-des-sms/envois_smsp1.md'),
(14, 'pages/docs/sms/envoyer-des-sms/envois_smsp1.en.md'),
(15, 'pages/docs/sms/envoyer-des-sms/envois_smsp4.md'),
(16, 'pages/docs/sms/envoyer-des-sms/envois_smsp4.en.md'),
(17, 'pages/docs/sms/envoyer-des-sms/envois_smsp2.md'),
(18, 'pages/docs/sms/envoyer-des-sms/envois_smsp2.en.md'),
(19, 'pages/docs/sms/envoyer-des-sms/envois_smsp3.md'),
(20, 'pages/docs/sms/envoyer-des-sms/envois_smsp3.en.md'),
(21, 'pages/docs/sms/envoyer-des-sms/envois_smsp5.md'),
(22, 'pages/docs/sms/envoyer-des-sms/envois_smsp5.en.md'),
(23, 'pages/docs/sms/envoyer-des-sms/envois_smsp6.md'),
(24, 'pages/docs/sms/envoyer-des-sms/envois_smsp6.en.md'),
(25, 'pages/docs/sms/status-et-statistiques/statusp1.md'),
(26, 'pages/docs/sms/status-et-statistiques/statusp1.en.md'),
(27, 'pages/docs/sms/status-et-statistiques/statusp2.md'),
(28, 'pages/docs/sms/status-et-statistiques/statusp2.en.md'),
(29, 'pages/docs/sms/status-et-statistiques/statusp3.md'),
(30, 'pages/docs/sms/status-et-statistiques/statusp3.en.md'),
(31, 'pages/docs/sms/status-et-statistiques/statusp4.md'),
(32, 'pages/docs/sms/status-et-statistiques/statusp4.en.md'),
(33, 'pages/docs/sms/status-et-statistiques/statusp5.md'),
(34, 'pages/docs/sms/status-et-statistiques/statusp5.en.md'),
(36, 'pages/docs/sms/gestion-des-contacts/gestion_contactp1.md'),
(37, 'pages/docs/sms/gestion-des-contacts/gestion_contactp1.en.md'),
(38, 'pages/docs/sms/gestion-des-contacts/gestion_contactp2.md'),
(39, 'pages/docs/sms/gestion-des-contacts/gestion_contactp2.en.md'),
(40, 'pages/docs/sms/gestion-des-contacts/gestion_contactp3.md'),
(41, 'pages/docs/sms/gestion-des-contacts/gestion_contactp3.en.md'),
(42, 'pages/docs/sms/gestion-des-contacts/gestion_contactp4.md'),
(43, 'pages/docs/sms/gestion-des-contacts/gestion_contactp4.en.md'),
(44, 'pages/docs/sms/gestion-des-contacts/gestion_contactp5.md'),
(45, 'pages/docs/sms/gestion-des-contacts/gestion_contactp5.en.md'),
(46, 'pages/docs/sms/gestion-des-contacts/gestion_contactp6.md'),
(47, 'pages/docs/sms/gestion-des-contacts/gestion_contactp6.en.md'),
(48, 'pages/docs/sms/gestion-des-contacts/gestion_contactp7.md'),
(49, 'pages/docs/sms/gestion-des-contacts/gestion_contactp7.en.md'),
(50, 'pages/docs/sms/gestion-des-contacts/gestion_contactp8.md'),
(51, 'pages/docs/sms/gestion-des-contacts/gestion_contactp8.en.md'),
(52, 'pages/docs/sms/gestion-des-contacts/gestion_contactp9.md'),
(53, 'pages/docs/sms/gestion-des-contacts/gestion_contactp9.en.md'),
(54, 'pages/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep1.md'),
(55, 'pages/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep1.en.md'),
(56, 'pages/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep2.md'),
(57, 'pages/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep2.en.md'),
(58, 'pages/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep3.md'),
(59, 'pages/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep3.en.md'),
(60, 'pages/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep4.md'),
(61, 'pages/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep4.en.md'),
(62, 'pages/docs/sms/sous-comptes/sous_comptep1.md'),
(63, 'pages/docs/sms/sous-comptes/sous_comptep1.en.md'),
(64, 'pages/docs/sms/sous-comptes/sous_comptep2.md'),
(65, 'pages/docs/sms/sous-comptes/sous_comptep2.en.md'),
(66, 'pages/docs/sms/sous-comptes/sous_comptep3.md'),
(67, 'pages/docs/sms/sous-comptes/sous_comptep3.en.md'),
(68, 'pages/docs/sms/sous-comptes/sous_comptep4.md'),
(69, 'pages/docs/sms/sous-comptes/sous_comptep4.en.md'),
(70, 'pages/docs/sms/sous-comptes/sous_comptep5.md'),
(71, 'pages/docs/sms/sous-comptes/sous_comptep5.en.md'),
(73, 'pages/docs/sms/sous-comptes/sous_comptep6.md'),
(74, 'pages/docs/sms/sous-comptes/sous_comptep6.en.md'),
(75, 'pages/docs/sms/smsp3.md'),
(76, 'pages/docs/sms/smsp3.en.md'),
(77, 'pages/docs/sms/smsp4.md'),
(78, 'pages/docs/sms/smsp4.en.md'),
(79, 'pages/docs/voix/voixp1.md'),
(80, 'pages/docs/voix/voixp1.en.md'),
(81, 'pages/docs/voix/voixp2.md'),
(82, 'pages/docs/voix/voixp2.en.md'),
(83, 'pages/docs/voix/message-vocal/message_vocalp1.md'),
(84, 'pages/docs/voix/message-vocal/message_vocalp1.en.md'),
(85, 'pages/docs/voix/message-vocal/message_vocalp2.md'),
(86, 'pages/docs/voix/message-vocal/message_vocalp2.en.md'),
(87, 'pages/docs/voix/message-vocal/message_vocalp3.md'),
(88, 'pages/docs/voix/message-vocal/message_vocalp3.en.md'),
(89, 'pages/docs/voix/message-vocal/message_vocalp4.md'),
(90, 'pages/docs/voix/message-vocal/message_vocalp4.en.md');

-- --------------------------------------------------------

--
-- Structure de la table `erreur_controlecode`
--

CREATE TABLE `erreur_controlecode` (
  `id` int(11) NOT NULL,
  `textcode` text NOT NULL,
  `langue` varchar(50) NOT NULL,
  `id_chemin` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Déchargement des données de la table `erreur_controlecode`
--

INSERT INTO `erreur_controlecode` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(1, '## Code de contrôle\n\n| _  | Réponse |\n| :---------------: |:---------------|\n|10 | Clé API incorrecte |\n|200 | Tout s’est bien passé ! |\n', 'fr', 2),
(2, '\n## Status Codes\n\n| Code | Response |\n| :---------------: |:---------------|\n|10 | Incorrect API Key |\n|200 | Successful request ! |', 'en', 9),
(3, '\n##Código de control\n| _  | Respuesta |\n| :---------------: |:---------------|\n|10 | 	Clave de API no válido |\n|200 | ¡Todo paso bien! |\n', 'es', 10),
(4, '## Codice di controllo\r\n\r\n| _  | Rispondi a |\r\n| :---------------: |:---------------|\r\n|10 | 	Chiave API errata |\r\n|200 | È andato tutto bene! ! |\r\n\r\n', 'it', 11),
(6, '## Código de controle\n\n| _  | Resposta |\n| :---------------: |:---------------|\n|10 | 	Chave de API inválida |\n|200 | Tudo correu bem! |\n\n', 'pt', 12),
(7, '\n## Erreurs\nExemple de message d’erreur:\n\n### JSON\n```json\n{\n    \"success\": false,\n    \"code\":9,\n    \"errors\": [{\n        \"elementId\": \"children[message].data\",\n        \"message\": \"Le message est requis\"\n    }, {\n        \"elementId\": \"children[phoneNumbers].data\",\n        \"message\": \"Ce numero de telephone n\'est pas valide (922264)\"\n    }, {\n        \"elementId\": \"children[sender].data\",\n        \"message\": \"L\'emetteur ne peut pas etre plus long que 11 caracteres\"\n    }, {\n        \"elementId\": \"children[scheduledDeliveryDate].data\",\n        \"message\": \"La date (21/11/2014 u00e0 :) est anterieure a la date actuelle.\"\n    }, {\n        \"elementId\": \"children[minute].data\",\n        \"message\": \"La minute est requise\"\n    }, {\n        \"elementId\": \"children[time].data\",\n        \"message\": \"L\'heure est requise\"\n    }]\n}\n```\n### XML\n```xml\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n <result>\n          <entry>false</entry>\n          <entry>9</entry>\n          <entry>\n                <entry>\n                  <entry>children[message].data</entry>\n                  <entry>Le message est requis</entry>\n                </entry>\n                <entry>\n                   <entry>children[phoneNumbers].data</entry>\n                   <entry>Ce numéro de téléphone n\'est pas valide (922264)</entry>\n                </entry>\n                <entry>\n                    <entry>children[sender].data</entry>\n                    <entry>L\'émetteur ne peut pas être plus long que 11 caractères</entry>\n                </entry>\n                <entry>\n                    <entry>children[scheduledDeliveryDate].data</entry>\n                    <entry>La date (21/11/2014 à :) est anterieure à la date actuelle. Si vous\n                     souhaitez l\'envoyer maintenant vous devez sélectionner [Envoi immédiat]</entry>\n                </entry>\n                <entry>\n                    <entry>children[minute].data</entry>\n                    <entry>La minute est requise</entry>\n                </entry>\n                <entry>\n                    <entry>children[time].data</entry>\n                    <entry>L\'heure est requise</entry>\n                </entry>\n      </entry>\n</result>\n  ```\n## Code de contrôle\n\n| _  | Code erreurs |\n| :---------------: |:---------------|\n|1 | La Clé API est requise |\n|2 | 	Le numéro de téléphone est requis |\n|9 | Au moins une contrainte n’a pas été respectée lors de l’envoi :<br> L’émetteur ne peut pas être plus long que 11 caractères.<br>Numéro de téléphone non valide.<br> Si **scheduledDeliveryDate** est défini:<ul><li>La date (dd/mm/yyyy) est antérieure à la date actuelle.</li><li>La minute est requise.</li><li>L’heure est requise..</li></ul>|\n|10 | Clé API incorrecte |\n|11 | Manque de crédits |\n\n## Liste des caractères remplacés\nConsulter la table des caractéres remplacés : <a href=\"/docs/sms/envoyer-des-sms/envois_smsp4\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\"> 📒 Voir table</a> <br> <br>\n', 'fr', 13),
(8, '\n## Errors\nExample of an error message:\n\n### JSON\n```json\n{\n    \"success\": false,\n    \"code\": 9,\n    \"errors\": [{\n        \"elementId\": \"children[message].data\",\n        \"message\": \"The message is required\"\n    }, {\n        \"elementId\": \"children[phoneNumbers].data\",\n        \"message\": \"This phone number is not valid (922264)\"\n    }, {\n        \"elementId\": \"children[sender].data\",\n        \"message\": \"The sender cannot be longer than 11 characters\"\n    }, {\n        \"elementId\": \"children[scheduledDeliveryDate].data\",\n        \"message\": \"The date (21/11/2014 at :) is earlier than the current date.\"\n    }, {\n        \"elementId\": \"children[minute].data\",\n        \"message\": \"The minute is required\"\n    }, {\n        \"elementId\": \"children[time].data\",\n        \"message\": \"The time is required\"\n    }]\n}\n```\n### XML\n```xml\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n <result>\n          <entry>false</entry>\n          <entry>9</entry>\n          <entry>\n                <entry>\n                  <entry>children[message].data</entry>\n                  <entry>The message is required</entry>\n                </entry>\n                <entry>\n                   <entry>children[phoneNumbers].data</entry>\n                   <entry>This phone number is not valid (922264)</entry>\n                </entry>\n                <entry>\n                    <entry>children[sender].data</entry>\n                    <entry>The sender cannot be longer than 11 characters</entry>\n                </entry>\n                <entry>\n                    <entry>children[scheduledDeliveryDate].data</entry>\n                    <entry>The date (21/11/2014 at :) is earlier than the current date. If you\n                     want to send it now, you must select [Send immediately]</entry>\n                </entry>\n                <entry>\n                    <entry>children[minute].data</entry>\n                    <entry>The minute is required</entry>\n                </entry>\n                <entry>\n                    <entry>children[time].data</entry>\n                    <entry>The time is required</entry>\n                </entry>\n      </entry>\n</result>\n  ```\n\n## Control Codes\n\n| _  | Code erreurs |\n| :---------------: |:---------------|\n|1 | 	The API Key is required |\n|2 | 	The phone number is required |\n|9 | At least one constraint was not respected during sending :<br> L’émetteur ne peut pas être plus long que 11 caractères.<br>Numéro de téléphone non valide.<br> Si **scheduledDeliveryDate** est défini:<ul><li>La date (dd/mm/yyyy) est antérieure à la date actuelle.</li><li>La minute est requise.</li><li>L’heure est requise..</li></ul>|\n|10 | Clé API incorrecte |\n|11 | Manque de crédits |\n\n## List of Replaced Characters\n\nConsult the table of replaced characters : <a href=\"/docs/sms/envoyer-des-sms/envois_smsp4\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\"> 📒 View table</a>', 'en', 14),
(9, '\n## Erreurs\nExemple de message d’erreur:\n\n### JSON\n```json\n{\n    \"success\": false,\n    \"code\":9,\n    \"error\": [{\n        \"elementId\": \"children[message].data\",\n        \"message\": \"Le message est requis\"\n    }, {\n        \"elementId\": \"children[phoneNumber].data\",\n        \"message\": \"Ce numero de telephone n\'est pas valide (922264)\"\n    }, {\n        \"elementId\": \"children[sender].data\",\n        \"message\": \"L\'emetteur ne peut pas etre plus long que 11 caracteres\"\n    }, {\n        \"elementId\": \"children[scheduledDeliveryDate].data\",\n        \"message\": \"La date (21/11/2014 u00e0 :) est anterieure a la date actuelle.\"\n    }, {\n        \"elementId\": \"children[minute].data\",\n        \"message\": \"La minute est requise\"\n    }, {\n        \"elementId\": \"children[time].data\",\n        \"message\": \"L\'heure est requise\"\n    }]\n}\n```\n### XML\n```xml\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n <result>\n          <entry>false</entry>\n          <entry>9</entry>\n          <entry>\n                <entry>\n                  <entry>children[message].data</entry>\n                  <entry>Le message est requis</entry>\n                </entry>\n                <entry>\n                   <entry>children[phoneNumbers].data</entry>\n                   <entry>Ce numéro de téléphone n\'est pas valide (922264)</entry>\n                </entry>\n                <entry>\n                    <entry>children[sender].data</entry>\n                    <entry>L\'émetteur ne peut pas être plus long que 11 caractères</entry>\n                </entry>\n                <entry>\n                    <entry>children[scheduledDeliveryDate].data</entry>\n                    <entry>La date (21/11/2014 à :) est anterieure à la date actuelle. Si vous\n                     souhaitez l\'envoyer maintenant vous devez sélectionner [Envoi immédiat]</entry>\n                </entry>\n                <entry>\n                    <entry>children[minute].data</entry>\n                    <entry>La minute est requise</entry>\n                </entry>\n                <entry>\n                    <entry>children[time].data</entry>\n                    <entry>L\'heure est requise</entry>\n                </entry>\n      </entry>\n</result>\n```\n## Code de contrôle\n\n| _  | Code erreurs |\n| :---------------: |:---------------|\n|1 | La Clé API est requise |\n|2 | 	Le numéro de téléphone est requis |\n|9 | Au moins une contrainte n’a pas été respectée lors de l’envoi :<br> L’émetteur ne peut pas être plus long que 11 caractères.<br>Numéro de téléphone non valide.<br> Si **scheduledDeliveryDate** est défini:<ul><li>La date (dd/mm/yyyy) est antérieure à la date actuelle.</li><li>La minute est requise.</li><li>L’heure est requise..</li></ul>|\n|10 | Clé API incorrecte |\n|11 | Manque de crédits |\n\n## Liste des caractères remplacés\nConsulter la table des caractéres remplacés <a href=\"/docs/sms/envoyer-des-sms/envois_smsp4\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\"> 📒 Voir table</a> <br> <br>\n', 'fr', 17),
(10, '\n## Errors\nExample of an error message:\n\n### JSON\n```json\n{\n    \"success\": false,\n    \"code\": 9,\n    \"errors\": [{\n        \"elementId\": \"children[message].data\",\n        \"message\": \"The message is required\"\n    }, {\n        \"elementId\": \"children[phoneNumbers].data\",\n        \"message\": \"This phone number is not valid (922264)\"\n    }, {\n        \"elementId\": \"children[sender].data\",\n        \"message\": \"The sender cannot be longer than 11 characters\"\n    }, {\n        \"elementId\": \"children[scheduledDeliveryDate].data\",\n        \"message\": \"The date (21/11/2014 at :) is earlier than the current date.\"\n    }, {\n        \"elementId\": \"children[minute].data\",\n        \"message\": \"The minute is required\"\n    }, {\n        \"elementId\": \"children[time].data\",\n        \"message\": \"The time is required\"\n    }]\n}\n```\n### XML\n```xml\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n <result>\n          <entry>false</entry>\n          <entry>9</entry>\n          <entry>\n                <entry>\n                  <entry>children[message].data</entry>\n                  <entry>The message is required</entry>\n                </entry>\n                <entry>\n                   <entry>children[phoneNumbers].data</entry>\n                   <entry>This phone number is not valid (922264)</entry>\n                </entry>\n                <entry>\n                    <entry>children[sender].data</entry>\n                    <entry>The sender cannot be longer than 11 characters</entry>\n                </entry>\n                <entry>\n                    <entry>children[scheduledDeliveryDate].data</entry>\n                    <entry>The date (21/11/2014 at :) is earlier than the current date. If you\n                     want to send it now, you must select [Send immediately]</entry>\n                </entry>\n                <entry>\n                    <entry>children[minute].data</entry>\n                    <entry>The minute is required</entry>\n                </entry>\n                <entry>\n                    <entry>children[time].data</entry>\n                    <entry>The time is required</entry>\n                </entry>\n      </entry>\n</result>\n  ```\n\n## Control Codes\n\n| _  | Code erreurs |\n| :---------------: |:---------------|\n|1 | 	The API Key is required |\n|2 | 	The phone number is required |\n|9 | At least one constraint was not respected during sending :<br> L’émetteur ne peut pas être plus long que 11 caractères.<br>Numéro de téléphone non valide.<br> Si **scheduledDeliveryDate** est défini:<ul><li>La date (dd/mm/yyyy) est antérieure à la date actuelle.</li><li>La minute est requise.</li><li>L’heure est requise..</li></ul>|\n|10 | Clé API incorrecte |\n|11 | Manque de crédits |\n\n## List of Replaced Characters\n\nConsult the table of replaced characters : <a href=\"/docs/sms/envoyer-des-sms/envois_smsp4\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\"> 📒 View table</a>\n\n\n', 'en', 18),
(11, '\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\":9,\r\n    \"error\": [{\r\n        \"elementId\": \"children[message].data\",\r\n        \"message\": \"Le message est requis\"\r\n    }, {\r\n        \"elementId\": \"children[phoneNumber].data\",\r\n        \"message\": \"Ce numero de telephone n\'est pas valide (922264)\"\r\n    }, {\r\n        \"elementId\": \"children[sender].data\",\r\n        \"message\": \"L\'emetteur ne peut pas etre plus long que 11 caracteres\"\r\n    }, {\r\n        \"elementId\": \"children[scheduledDeliveryDate].data\",\r\n        \"message\": \"La date (21/11/2014 u00e0 :) est anterieure a la date actuelle.\"\r\n    }, {\r\n        \"elementId\": \"children[minute].data\",\r\n        \"message\": \"La minute est requise\"\r\n    }, {\r\n        \"elementId\": \"children[time].data\",\r\n        \"message\": \"L\'heure est requise\"\r\n    }]\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|2 | 	Le numéro de téléphone est requis |\r\n|9 | Au moins une contrainte n’a pas été respectée lors de l’envoi :<br> L’émetteur ne peut pas être plus long que 11 caractères.<br>Numéro de téléphone non valide.<br> Si **scheduledDeliveryDate** est défini:<ul><li>La date (dd/mm/yyyy) est antérieure à la date actuelle.</li><li>La minute est requise.</li><li>L’heure est requise..</li></ul>|\r\n|10 | Clé API incorrecte |\r\n|11 | Manque de crédits |\r\n\r\n', 'fr', 21),
(12, '\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\":9,\r\n    \"error\": [{\r\n        \"elementId\": \"children[message].data\",\r\n        \"message\": \"Le message est requis\"\r\n    }, {\r\n        \"elementId\": \"children[phoneNumber].data\",\r\n        \"message\": \"Ce numero de telephone n\'est pas valide (922264)\"\r\n    }, {\r\n        \"elementId\": \"children[sender].data\",\r\n        \"message\": \"L\'emetteur ne peut pas etre plus long que 11 caracteres\"\r\n    }, {\r\n        \"elementId\": \"children[scheduledDeliveryDate].data\",\r\n        \"message\": \"La date (21/11/2014 u00e0 :) est anterieure a la date actuelle.\"\r\n    }, {\r\n        \"elementId\": \"children[minute].data\",\r\n        \"message\": \"La minute est requise\"\r\n    }, {\r\n        \"elementId\": \"children[time].data\",\r\n        \"message\": \"L\'heure est requise\"\r\n    }]\r\n}\r\n```\r\n\r\n## Control Codes\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | 	The API Key is required |\r\n|2 | 	The phone number is required |\r\n|9 | At least one constraint was not respected during sending :<br> L’émetteur ne peut pas être plus long que 11 caractères.<br>Numéro de téléphone non valide.<br> Si **scheduledDeliveryDate** est défini:<ul><li>La date (dd/mm/yyyy) est antérieure à la date actuelle.</li><li>La minute est requise.</li><li>L’heure est requise..</li></ul>|\r\n|10 | Clé API incorrecte |\r\n|11 | Manque de crédits |\r\n', 'en', 22),
(13, '\r\n\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|3 | L’ID du message est requis |\r\n|4 | Message introuvable|\r\n|5 | L’envoi du SMS a déjà été annulé |\r\n|6 | Vous ne pouvez pas annuler l’envoi d’un SMS moins de 5 minutes avant son envoi |\r\n|7 | 	Vous ne pouvez pas annuler un SMS déjà envoyé |\r\n|10 | Clé API incorrecte |\r\n|200 |Tout s’est bien passé ! |\r\n\r\n', 'fr', 23),
(14, '\r\n\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Incorrect API Key\"\r\n}\r\n```\r\n\r\n## Control Codes\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | API Key is required|\r\n|3 | Message ID is required|\r\n|4 | Message not found|\r\n|5 | SMS sending has already been cancelled |\r\n|6 | You cannot cancel an SMS sending less than 5 minutes before its scheduled time |\r\n|7 | 	You cannot cancel an SMS that has already been sent |\r\n|10 | Incorrect API Key|\r\n|200 |Everything went well! |\r\n\r\n', 'en', 24),
(15, '\r\n\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|2 | Le numéro de téléphone est requis|\r\n|3 | L’ID du message est requis |\r\n|4 | Message introuvable|\r\n|10 | Clé API incorrecte |\r\n|200 |Tout s’est bien passé ! |\r\n\r\n', 'fr', 25),
(16, '\n\n## Errors\nExample of an error message:\n\n### JSON\n```json\n{\n    \"success\": false,\n    \"code\": 10,\n    \"message\": \"Clé API incorrecte\"\n}\n```\n\n## Control Codes\n\n| _  | Error Codes |\n| :---------------: |:---------------|\n| 1 | API Key is required |\n| 2 | Phone number is required |\n| 3 | Message ID is required |\n| 4 | Message not found |\n| 10 | Incorrect API Key |\n| 200 | Everything went well! |\n\n', 'en', 26),
(17, '\r\n\r\n\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|3 | L’ID du message est requis |\r\n|4 | Message introuvable|\r\n|10 | Clé API incorrecte |\r\n|200 |Tout s’est bien passé ! |\r\n', 'fr', 29),
(18, '\r\n\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n\r\n## Control Codes\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 1 | API Key is required |\r\n| 3 | Message ID is required |\r\n| 4 | Message not found |\r\n| 10 | Incorrect API Key |\r\n| 200 | Everything went well! |\r\n\r\n', 'en', 30),
(19, '\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|4 | Message introuvable|\r\n|10 | Clé API incorrecte |\r\n\r\n', 'fr', 27),
(20, '\n\n## Errors\nExample of an error message:\n\n### JSON\n```json\n{\n    \"success\": false,\n    \"code\": 10,\n    \"message\": \"Clé API incorrecte\"\n}\n```\n\n## Control Codes\n\n| _  | Error Codes |\n| :---------------: |:---------------|\n| 1 | API Key is required |\n| 4 | Message not found |\n| 200 | Everything went well! |\n\n', 'en', 28),
(21, '\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|3 | 	L’ID du message est requis |\r\n|4 | Message introuvable|\r\n|10 | Clé API incorrecte |\r\n|200 | 	Tout s’est bien passé ! |\r\n\r\n', 'fr', 31),
(22, '\r\n\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Incorrect API Key\"\r\n}\r\n```\r\n\r\n## Control Codes\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 1 | API Key is required |\r\n| 3 | Message ID is required |\r\n| 4 | Message not found |\r\n| 10 | Incorrect API Key |\r\n| 200 | Everything went well! |\r\n\r\n', 'en', 32),
(23, '\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|10 | Clé API incorrecte |\r\n|200 | 	Tout s’est bien passé ! |\r\n\r\n', 'fr', 33),
(24, '\r\n\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Incorrect API Key\"\r\n}\r\n```\r\n\r\n## Control Codes\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 1 | API Key is required |\r\n| 10 | Incorrect API Key |\r\n| 200 | Everything went well! |\r\n\r\n', 'en', 34),
(25, '\r\n## Erreurs\r\nExemple de message d’erreur :\r\n\r\n``` json\r\n{   \r\n{ \r\n\"success\": false, \r\n\"code\": 10, \r\n\"message\": \"Clef API incorrecte\" \r\n}\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | 	name est requis |\r\n|2 | 	La Clé API est requise |\r\n<br>\r\n\r\n', 'fr', 36),
(26, '\r\n ## Errors\r\nExample of an error message:\r\n ``` json\r\n{   \r\n{ \r\n\"success\": false, \r\n\"code\": 10, \r\n\"message\": \"Clef API incorrecte\" \r\n}\r\n}\r\n```\r\n ## Control Code\r\n | _  | Error Codes |\r\n| :---------------: |:---------------|\r\n|1 | 	name is required |\r\n|2 | 	API Key is required |\r\n<br>\r\n ', 'en', 37),
(27, '\r\n## Erreurs\r\nExemple de message d’erreur :\r\n\r\n``` json\r\n{   \r\n{ \r\n\"success\": false, \r\n\"code\": 10, \r\n\"message\": \"Clef API incorrecte\" \r\n}\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | 	groupId est requis |\r\n|2 | 	Contact infos sont requises |\r\n|10 | La Clé API est requise |\r\n|15 | Le numéro est déjà dans le groupe |\r\n<br>\r\n\r\n', 'fr', 38),
(28, '\r\n## Errors\r\nError message example:\r\n ``` json\r\n{ \r\n\"success\": false, \r\n\"code\": 10, \r\n\"message\": \"Incorrect API key\" \r\n}\r\n\r\n```\r\n \r\n ## Control Code\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n|1 | groupId is required |\r\n|2 | Contact info is required |\r\n|10 | API key is required |\r\n|15 | The number is already in the group |\r\n\r\n <br>\r\n', 'en', 39),
(29, '\n## Erreurs\nExemple de message d’erreur :\n\n``` json\n{\n\"success\": false,\n\"code\": 10,\n\"message\": \"Clef API incorrecte\"\n}\n```\n\n## Code de contrôle\n\n| _  | Code erreurs |\n| :---------------: |:---------------|\n|1 | 	groupId est requis |\n|10 | La Clé API est requise |\n|404 |Le groupe n’existe pas |\n<br>\n\n', 'fr', 40),
(30, '\r\n## Errors\r\nError message example:\r\n ``` json\r\n{ \r\n  \"success\": false, \r\n  \"code\": 10, \r\n  \"message\": \"Incorrect API key\" \r\n}\r\n\r\n```\r\n \r\n ## Control Code\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n|1 | groupId is required |\r\n|10 | API key is required |\r\n|404 | Group does not exist |\r\n\r\n <br>\r\n', 'en', 41),
(31, '\r\n## Erreurs\r\nExemple de message d’erreur :\r\n\r\n``` json\r\n{   \r\n{ \r\n\"success\": false, \r\n\"code\": 10, \r\n\"message\": \"Clef API incorrecte\" \r\n}\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | 	groupId est requis |\r\n|2 | 	Contact infos sont requises |\r\n|10 | La Clé API est requise |\r\n|15 | Le numéro est déjà dans le groupe |\r\n<br>\r\n\r\n', 'fr', 44),
(32, '\r\n## Errors\r\nError message example:\r\n ``` json\r\n{ \r\n\"success\": false, \r\n\"code\": 10, \r\n\"message\": \"Incorrect API key\" \r\n}\r\n\r\n```\r\n \r\n ## Control Code\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n|1 | groupId is required |\r\n|2 | Contact info is required |\r\n|10 | API key is required |\r\n|15 | The number is already in the group |\r\n\r\n <br>\r\n', 'en', 45),
(33, '\n## Erreurs\nExemple de message d’erreur :\n\n``` json\n{   \n\"success\": false, \n\"code\": 10, \n\"message\": \"Clef API incorrecte\" \n}\n```\n\n## Code de contrôle\n\n| _  | Code erreurs |\n| :---------------: |:---------------|\n|1 | 	groupId est requis |\n|10 | La Clé API est requise |\n|404 | Le groupe n’existe pas |\n<br>\n\n', 'fr', 46),
(34, '\n## Errors\nError message example:\n ``` json\n{ \n\"success\": false, \n\"code\": 10, \n\"message\": \"Incorrect API key\" \n}\n\n```\n \n ## Control Code\n\n| _  | Error Codes |\n| :---------------: |:---------------|\n|1 | groupId is required |\n|10 | API key is required |\n|404 | The group does not exist |\n\n <br>\n', 'en', 47),
(35, '\r\n## Erreurs\r\nExemple de message d’erreur :\r\n\r\n``` json\r\n{   \r\n{ \r\n\"success\": false, \r\n\"code\": 10, \r\n\"message\": \"Clef API incorrecte\" \r\n}\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|10 | La Clé API est requise |\r\n\r\n<br>\r\n\r\n', 'fr', 48),
(36, '\r\n## Errors\r\nError message example:\r\n ``` json\r\n{ \r\n\"success\": false, \r\n\"code\": 10, \r\n\"message\": \"Incorrect API key\" \r\n}\r\n\r\n```\r\n \r\n ## Control Code\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n|10 | API key is required |\r\n\r\n <br>\r\n', 'en', 49),
(37, '\r\n## Erreurs\r\nExemple de message d’erreur :\r\n\r\n``` json\r\n{\r\n  \"success\": false,\r\n  \"code\": 10,\r\n  \"message\": \"Clef API incorrecte\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | contactId est requis |\r\n|10 | La Clé API est requise |\r\n|404 | Le contact n’existe pas |\r\n\r\n<br>\r\n\r\n', 'fr', 52),
(38, '\r\n## Errors\r\nError message example:\r\n ``` json\r\n{ \r\n\"success\": false, \r\n\"code\": 10, \r\n\"message\": \"Incorrect API key\" \r\n}\r\n\r\n```\r\n \r\n ## Control Code\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n|1 | 	contactId is required |\r\n|10 | API key is required |\r\n|404 | 	The contact does not exist |\r\n\r\n <br>\r\n', 'en', 53),
(39, '\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n  \"success\": false,\r\n  \"code\": 10,\r\n  \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|10 | Clé API incorrecte |\r\n|200 | 	Tout s’est bien passé ! |\r\n\r\n', 'fr', 54),
(40, '\r\n\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Incorrect API Key\"\r\n}\r\n```\r\n## Control Codes\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 1 | API Key is required |\r\n| 10 | Incorrect API Key |\r\n| 200 | Everything went well! |\r\n\r\n', 'en', 55),
(41, '\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n  \"success\": false,\r\n  \"code\": 10,\r\n  \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|2 | Le numéro de téléphone est requis|\r\n|3 | L’ID du message est requis |\r\n|9 | Le numéro de téléphone est invalide|\r\n|10 | Clé API incorrecte |\r\n|200 |Tout s’est bien passé ! |\r\n\r\n\r\n', 'fr', 56),
(43, '\r\n\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Incorrect API Key\"\r\n}\r\n```\r\n## Control Codes\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 1 | API Key is required |\r\n| 2 | Phone number is required |\r\n| 3 | Message ID is required |\r\n| 9 | The phone number is invalid. |\r\n| 10 | Incorrect API Key |\r\n| 200 | Everything went well! |\r\n\r\n', 'en', 57),
(44, '\n## Erreurs\nExemple de message d’erreur:\n\n### JSON\n```json\n{\n  \"success\": false,\n  \"code\": 10,\n  \"message\": \"Clé API incorrecte\"\n}\n```\n## Code de contrôle\n\n| _  | Code erreurs |\n| :---------------: |:---------------|\n|1 | La Clé API est requise |\n|2 | Le numéro de téléphone est requis|\n|3 | L’ID du numéro est requis |\n|4 | L’ID du numéro introuvable|\n|10 | Clé API incorrecte |\n|200 |Tout s’est bien passé ! |\n\n', 'fr', 58),
(45, '\n\n## Errors\nExample of an error message:\n\n### JSON\n```json\n{\n    \"success\": false,\n    \"code\": 10,\n    \"message\": \"Incorrect API Key\"\n}\n```\n## Control Codes\n\n| _  | Error Codes |\n| :---------------: |:---------------|\n| 1 | API Key is required |\n| 2 | Phone number is required |\n| 3 | L’ID number is required |\n| 4 | L’ID number not found. |\n| 10 | Incorrect API Key |\n| 200 | Everything went well! |\n\n', 'en', 59),
(46, '\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|2 | Vous n’avez pas l’authorisation|\r\n|3 | isBuyer est requis |\r\n|4 | Le type est requis (simple ou advanced)|\r\n|5 | Le type de sous-compte n’existe pas (simple ou advanced)|\r\n|6 | L’email est requis|\r\n|7 | Un compte existe déjà avec cet email|\r\n|8 | creditToAttribute doit être supérieurr à 0|\r\n|9 | La balance doit être supérieur à 0 |\r\n|200 |Tout s’est bien passé ! |\r\n\r\n', 'fr', 64),
(47, '\r\n\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Incorrect API Key\"\r\n}\r\n```\r\n## Control Codes\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 1 | API Key is required |\r\n|2 | You are not authorized|\r\n|3 | isBuyer is required |\r\n|4 | Type is required (simple or advanced)|\r\n|5 | Sub-account type does not exist (simple or advanced)|\r\n|6 | Email is required|\r\n|7 | An account already exists with this email|\r\n|8 | creditToAttribute must be greater than 0|\r\n|9 | Balance must be greater than 0|\r\n| 200 | Everything went well! |\r\n\r\n', 'en', 65),
(48, '\r\n## Erreurs\r\nExemple de message d’erreur :\r\n\r\n``` json\r\n{\r\n\"success\": false,\r\n\"code\": 10,\r\n\"message\": \"Clef API incorrecte\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | token est requis |\r\n|10 | La Clé API est requise |\r\n|404 | Le sous-compte n’existe pas |\r\n\r\n<br>\r\n\r\n', 'fr', 66),
(49, '\r\n## Errors\r\nError message example:\r\n ``` json\r\n{ \r\n\"success\": false, \r\n\"code\": 10, \r\n\"message\": \"Incorrect API key\" \r\n}\r\n```\r\n \r\n ## Control Code\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n|1 | 	token is required |\r\n|10 | API key is required |\r\n|404 | Sub-account does not exist |\r\n\r\n <br>\r\n', 'en', 67),
(50, '\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|10 | Clé API incorrecte|\r\n|200 |Tout s’est bien passé ! |\r\n', 'fr', 68),
(51, '\r\n\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Incorrect API Key\"\r\n}\r\n```\r\n## Control Codes\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 1 | API Key is required |\r\n|10 | 	Invalid API key|\r\n| 200 | Everything went well! |\r\n\r\n', 'en', 69),
(52, '\r\n## Erreurs\r\nExemple de message d’erreur:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Clé API incorrecte\"\r\n}\r\n```\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|1 | La Clé API est requise |\r\n|2 | Le crédit est requis|\r\n|3 | L’identifiant du sous-compte est requis |\r\n|4 | Vous n’avez pas l’authorisation |\r\n|5 | Le crédit à attribuer doit être supérieur à 0|\r\n|6 | La balance doit être supérieur à 0|\r\n|7 | 	Le sous-compte n’exsite pas|\r\n|8 | Crédits insufisant|\r\n|10 | Clé API incorrecte |\r\n|200 |Tout s’est bien passé ! |\r\n\r\n', 'fr', 70),
(53, '\r\n\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Incorrect API Key\"\r\n}\r\n```\r\n## Control Codes\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 1 | API Key is required |\r\n|2 | Credit is required|\r\n|3 | The identifier of the sub-account is required |\r\n|4 | You do not have the permission|\r\n|5 | Credit to attribute must be greater than 0|\r\n|6 | The balance must be greater than 0|\r\n|7 | 	The sub-account does not exist|\r\n|8 | Insufficient credit|\r\n|9 | Invalid API key|\r\n| 200 | Everything went well! |\r\n\r\n', 'en', 71),
(54, '\r\n\r\n## Errors\r\nExample of an error message:\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": false,\r\n    \"code\": 10,\r\n    \"message\": \"Incorrect API Key\"\r\n}\r\n```\r\n## Control Codes\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 1 | API Key is required |\r\n|2 | Credit is required|\r\n|3 | The identifier of the sub-account is required |\r\n|4 | You do not have the permission|\r\n|5 | Credit to attribute must be greater than 0|\r\n|6 | The balance must be greater than 0|\r\n|7 | 	The sub-account does not exist|\r\n|8 | Insufficient credit|\r\n|9 | Invalid API key|\r\n| 200 | Everything went well! |\r\n\r\n', 'en', 74),
(55, '\r\n## Erreurs\r\nExemple de message d’erreur :\r\n\r\n``` json\r\n{\r\n    \"success\": false,\r\n    \"code\": 5,\r\n    \"message\": \"email is not valid\"\r\n}\r\n```\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n| 10   | La Clé API est requise |\r\n| 1    | name est requis |\r\n| 5    | Le numéro virtuel est requis |\r\n| 6    | Le type est requis |\r\n| 7    | Le type n’est pas valide |\r\n| 8    | param est requis |\r\n| 9    | L’email n’est pas valide |\r\n| 12   | Le numéro de transfert n’est pas valide |\r\n| 13   | Le numéro virtuel n’existe pas |\r\n| 14   | Le transfert d’appel n’est pas activé |\r\n| 15   | Le numéro est désactivé |\r\n| 16   | Le transfert d’appel est déjà activé |\r\n| 17   | La messagerie est déjà activée |\r\n| 18   | Le transfert d’appel est déjà désactivé |\r\n\r\n<br>\r\n\r\n', 'fr', 75),
(56, '\r\n## Errors\r\nError message example:\r\n ``` json\r\n{\r\n    \"success\": false,\r\n    \"code\": 5,\r\n    \"message\": \"email is not valid\"\r\n}\r\n```\r\n \r\n ## Control Code\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 10   | The API key is required |\r\n| 1    | Name is required |\r\n| 5    | The virtual number is required |\r\n| 6    | The type is required |\r\n| 7    | The type is not valid |\r\n| 8    | Parameter is required |\r\n| 9    | The email is not valid |\r\n| 12   | The transfer number is not valid |\r\n| 13   | The virtual number does not exist |\r\n| 14   | Call forwarding is not enabled |\r\n| 15   | The number is disabled |\r\n| 16   | Call forwarding is already enabled |\r\n| 17   | Voicemail is already enabled |\r\n| 18   | Call forwarding is already disabled |\r\n\r\n <br>\r\n', 'en', 76);
INSERT INTO `erreur_controlecode` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(57, '\r\n## Envoi de SMS\r\n\r\n992 Sender non autorisé\r\n\r\n| Codes | Message                                                                                      |\r\n|:-------:|------------------------|\r\n| 1     | La clé API est requise                                                                       |\r\n| 2     | Le champ phoneNumbers est requis                                                             |\r\n| 4     | message introuvable                                                                           |\r\n| 10    | Clef API incorrecte                                                                           |\r\n| 11    | Crédit insuffisant                                                                            |\r\n| 13    | Aucun prix par défaut n’a été trouvé pour les numéros suivant                               |\r\n| 14    | Le numéro est dans la liste des STOP SMS                                                     |\r\n| 15    | Le numéro est déjà présent dans la liste                                                     |\r\n| 20    | Compte désactivé                                                                              |\r\n| 22    | SMS Marketing: L’heure d’envoi n’est pas valide, elle doit être comprise entre 8h et 22h.  |\r\n| 23    | SMS Marketing: La date […] n’est pas valide, L’envoi des sms n’est pas possible le dimanche et jours fériés. |\r\n| 30    | Compte bloqué                                                                                 |\r\n| 40    | L’accès à l’API est refusé                                                                    |\r\n| 42    | Le nombre de caractères pour un sms Low Cost est 160 caractères                             |\r\n| 43    | Le message est requis                                                                         |\r\n| 44    | L’émetteur est invalide                                                                       |\r\n| 45    | La date est requise                                                                          |\r\n| 46    | L’heure est requise                                                                           |\r\n| 47    | Le chiffre des minutes est invalide                                                           |\r\n| 48    | Les minutes doivent-être comprise entre 5 et 55 dans un interval de 5 minutes               |\r\n| 49    | La date est invalide                                                                          |\r\n| 50    | Le nombre de numéros autorisés est de 500 maxi                                               |\r\n| 51    | La gamme lowcost n’est pas éligible                                                          |\r\n| 52    | Le nombre de SMS concaténés ne peut excéder 10 SMS                                           |\r\n| 55    | Aucun numéro à envoyer                                                                        |\r\n| 90    | Le JSON est malformé: erreur de syntaxe                                                      |\r\n| 96    | L’IP n’est pas autorisée                                                                      |\r\n| 500   | Problème lors de l’ajout du sms dans la file d’attente                                       |\r\n\r\n## Annulation des SMS\r\n\r\n| Codes | Message                                                                                      |\r\n|:-------:|----------------------------------------------------------------------------------------------|\r\n| 2     | Le champ phoneNumber est requis                                                               |\r\n| 3     | Le champ MessageId est requis                                                                 |\r\n| 4     | Ce message est introuvable                                                                     |\r\n| 5     | La liste des numéros est vide                                                                  |\r\n| 6     | Le format n’est pas correct                                                                    |\r\n| 9     | Ne semble pas être un numéro de mobile                                                         |\r\n| 50    | Le nombre de numéros autorisés est de 500 maxi                                                 |\r\n| 96    | L’IP n’est pas autorisée                                                                        |\r\n\r\n## Récupération des statuts\r\n\r\n| Codes | Message                                                                                      |\r\n|:-------:|----------------------------------------------------------------------------------------------|\r\n| 2     | Le champ phoneNumber est requis                                                               |\r\n| 3     | Le champ MessageId est requis                                                                 |\r\n| 4     | Ce message est introuvable                                                                     |\r\n| 5     | La liste des numéros est vide                                                                  |\r\n| 6     | Le format n’est pas correct                                                                    |\r\n| 9     | Ne semble pas être un numéro de mobile                                                         |\r\n| 50    | Le nombre de numéros autorisés est de 500 maxi                                                 |\r\n| 96    | L’IP n’est pas autorisée                                                                        |\r\n\r\n## Liste des statuts\r\n\r\n| Codes        | Message                                                                                      |\r\n|--------------|----------------------------------------------------------------------------------------------|\r\n| delivered    | Le SMS a été délivré                                                                         |\r\n| not delivered | Le SMS n’a pas été délivré                                                                   |\r\n| waiting      | Le SMS a été envoyé, en attente chez l’opérateur                                             |\r\n| ko           | Le SMS n’a pas été envoyé, un problème est survenu veuillez contacter le SAV                 |\r\n\r\n\r\n## Codes erreurs des statuts\r\n\r\n| Statuts SMS | Description |\r\n|:-------------:|-------------|\r\n| <mark style=\"background-color: #a8d3fb;\">DELIVRD</mark> | Le message a été traité et livré avec succès. |\r\n| <mark style=\"background-color: #a8d3fb;\">PENDING</mark> | Le message a été traité et envoyé à l\'instance suivante. Le rapport de livraison n\'a pas encore été reçu et est attendu, le statut est toujours en attente. |\r\n| <mark style=\"background-color: #a8d3fb;\">UNDELIV</mark> | Le message a été envoyé à l\'opérateur, mais n\'a pas pu être livré, car un accusé de réception avec le statut « UNDELIV » été annulé par l\'opérateur. |\r\n| <mark style=\"background-color: #a8d3fb;\">ACCEPTD</mark> | Le SMS a été accepté et sera envoyé. |\r\n| <mark style=\"background-color: #a8d3fb;\">UNKNOWN</mark> | Une erreur inconnue s\'est produite. |\r\n| <mark style=\"background-color: #a8d3fb;\">ENROUTE</mark> | Le message est en route. |\r\n| <mark style=\"background-color: #a8d3fb;\">EXPIRED</mark> | Le message a été envoyé et a expiré en raison d\'un dépassement de sa période de validité (notre plate-forme par défaut est de 48 heures), ou l\'opérateur a renvoyé EXPIRED comme statut final. |\r\n| <mark style=\"background-color: #a8d3fb;\">REJECTD</mark> | Le message a été envoyé, mais il a été rejeté par l\'opérateur et a renvoyé REJECTD comme statut final |\r\n\r\n\r\n\r\n## Vérification des numéros\r\n\r\n| Codes | Message                                                           |\r\n|:-------:|-------------------------------------------------------------------|\r\n| 2     | Le champ phoneNumber est requis                                   |\r\n| 11    | Crédit insuffisant                                                |\r\n| 13    | Aucun prix par défaut n\'a été trouvé vers cette destination       |\r\n| 14    | Le numéro est dans la liste des STOP SMS                          |\r\n| 19    | Les numéros doivent-être séparés par une virgule                  |\r\n| 50    | Le nombre de numéros autorisés est de 500 maxi                    |\r\n| 55    | Aucun numéro à envoyer                                            |\r\n| 96    | L\'IP n\'est pas autorisée                                          |\r\n\r\n## Location\r\n\r\n| Codes | Message                                                                       |\r\n|:-------:|-------------------------------------------------------------------------------|\r\n| 3     | Le paramètre parameters est requis                                            |\r\n| 4     | Le paramètre op est requis                                                    |\r\n| 5     | Le paramètre urlNotification n\'est pas une URL valide                         |\r\n| 6     | Cette opération n\'est pas autorisé                                            |\r\n| 7     | Le paramètre sexe est requis                                                  |\r\n| 8     | Le paramètre sexe doit être uniquement m,h or f                               |\r\n| 9     | Le paramètre minAge est requis                                                |\r\n| 11    | Crédit insuffisant                                                            |\r\n| 12    | Le paramètre minAge doit être supérieur à 17                                  |\r\n| 13    | Le paramètre maxAge est requis                                                |\r\n| 14    | Le paramètre maxAge doit être inférieur à 99                                  |\r\n| 15    | Le paramètre interest doit être supérieur à 0                                 |\r\n| 16    | Le paramètre interest ne peut pas être vide                                   |\r\n| 17    | Le paramètre subInterest ne doit pas être vide                                |\r\n| 18    | Le paramètre subInterest doit être supérieur à 0                              |\r\n| 19    | Les paramètres interest ou subInterest sont requis                            |\r\n| 22    | Le paramètre category ne doit pas être vide                                   |\r\n| 23    | Le paramètre category doit être supérieur à 0                                 |\r\n| 24    | Les paramètres Type est requis                                                |\r\n| 25    | Le paramètre Localite est requis                                              |\r\n| 26    | Le paramètre Volume est requis                                                |\r\n| 27    | Le volume souhaité ne peut pas être supérieur au volume disponible            |\r\n| 28    | Le paramètre DesiredVolume ne peux pas être supérieur au volume total         |\r\n| 31    | Le paramètre token est requis                                                 |\r\n| 32    | La demande de location est introuvable                                        |\r\n| 33    | Le fichier de location est introuvable                                        |\r\n| 34    | Le fichier de location a déjà été utilisé                                     |\r\n| 35    | Le fichier de location est en cours de téléchargement                         |\r\n| 36    | La location du fichier a échoué                                               |\r\n| 61    | La requête semble invalide et n\'a retourné aucun résultat                     |\r\n| 96    | L\'IP n\'est pas autorisée                                                      |\r\n\r\n## Sous-compte\r\n\r\n| Codes | Message                                                    |\r\n|:-------:|-----------------------------------------------------------|\r\n| 2     | Vous n\'êtes pas autorisé à créer des sous-comptes         |\r\n| 3     | Le champ Credit est requis                                |\r\n| 4     | Le champ tokenSubaccount est requis                       |\r\n| 5     | Le champ credit doit être supérieur à 0                   |\r\n| 6     | Le sous-compte est introuvable                            |\r\n| 7     | Crédit insuffisant pour le sous-compte                    |\r\n| 11    | Crédit insuffisant                                        |\r\n| 96    | L\'IP n\'est pas autorisée                                  |\r\n\r\n\r\n## HLR\r\n\r\n### Code des status: PENDING (statusGrpId: 1)\r\n\r\nLe message a été traité et envoyé à l\'opérateur mobile.\r\n\r\n| statusId | Status | Description |\r\n|:----------:|:--------:|-------------|\r\n| 3 | <mark style=\"background-color: #a8d3fb;\">PENDING_WAITING_DELIVERY</mark> | Le message a été traité et envoyé. Le rapport de livraison n\'a pas encore été reçu et est attendu, donc le statut est toujours en attente. |\r\n| 7 | <mark style=\"background-color: #a8d3fb;\">PENDING_ENROUTE</mark> | Le message a été traité et envoyé à l\'opérateur mobile. |\r\n| 26 | <mark style=\"background-color: #a8d3fb;\">PENDING_ACCEPTED</mark> | Le message a été accepté et traité, et est prêt à être envoyé à l\'opérateur. |\r\n\r\n### UNDELIVERABLE (statusGrpId: 2)\r\n\r\nLe message n\'a pas été délivré.\r\n\r\n| statusId | Status | Description |\r\n|:----------:|:--------:|-------------|\r\n| 4 | <mark style=\"background-color: #a8d3fb;\">UNDELIVERABLE_REJECTED_OPERATOR</mark> | Un message a été envoyé à l\'opérateur, un rapport de livraison avec le statut \"REJECTED\" a été retourné. |\r\n| 9 | <mark style=\"background-color: #a8d3fb;\">UNDELIVERABLE_NOT_DELIVERED</mark> | Le message a été envoyé à l\'opérateur, mais n\'a pas pu être livré, un rapport de livraison avec le statut \"UNDELIVERED\" a été renvoyé par l\'opérateur. |\r\n\r\n### DELIVERED (statusGrpId: 3)\r\n\r\nLe message a été traité et délivré avec succès.\r\n\r\n| statusId | Status | Description |\r\n|:----------:|:--------:|-------------|\r\n| 2 | <mark style=\"background-color: #a8d3fb;\">DELIVERED_TO_OPERATOR</mark> | Le message a été envoyé et livré avec succès à l\'opérateur. |\r\n| 5 | <mark style=\"background-color: #a8d3fb;\">DELIVERED_TO_HANDSET</mark> | Le message a été traité et remis au destinataire avec succès. |\r\n\r\n### EXPIRED (statusGrpId: 4)\r\n\r\nLe message a été envoyé et a expiré soit parce qu\'il était en attente au-delà de sa période de validité (notre plate-forme est configurée par défaut sur 48 heures), soit parce que le rapport de livraison de l\'opérateur a rétabli le statut \"EXPIRED\" comme statut final.\r\n\r\n| statusId | Status | Description |\r\n|:----------:|:--------:|-------------|\r\n| 15 | <mark style=\"background-color: #a8d3fb;\">EXPIRED_EXPIRED</mark> | Le message a été reçu et envoyé à l\'opérateur. Toutefois, il est resté en attente jusqu\'à l\'expiration de la période de validité ou jusqu\'à ce que l\'opérateur ait renvoyé le statut EXPIRED. |\r\n| 29 | <mark style=\"background-color: #a8d3fb;\">EXPIRED_DLR_UNKNOWN</mark> | Le message a été reçu et transmis à l\'opérateur pour livraison. Toutefois, le rapport de livraison de l\'opérateur n\'a pas été formaté correctement ou n\'a pas été reconnu comme valable. |\r\n\r\n### REJECTED (statusGrpId: 5)\r\n\r\nLe message a été reçu mais a été rejeté l\'opérateur.\r\n\r\n| statusId | Status | Description |\r\n|:----------:|:--------:|-------------|\r\n| 6 | <mark style=\"background-color: #a8d3fb;\">REJECTED_NETWORK</mark> | Le message a été reçu, mais le réseau est hors de notre couverture. |\r\n| 8 | <mark style=\"background-color: #a8d3fb;\">REJECTED_PREFIX_MISSING</mark> | Le message a été reçu mais a été rejeté car le numéro n\'est pas reconnu en raison d\'un préfixe ou d\'une longueur de numéro incorrecte. Ces informations sont différentes pour chaque réseau et sont régulièrement mises à jour. |\r\n| 10 | <mark style=\"background-color: #a8d3fb;\">REJECTED_DND</mark> | Le message a été reçu et rejeté parce que l\'utilisateur est abonné aux services DND (Ne pas déranger), ce qui désactive tout trafic de service vers son numéro. |\r\n| 11 | <mark style=\"background-color: #a8d3fb;\">REJECTED_SOURCE</mark> | Votre compte est configuré pour n\'accepter que les ID d\'expéditeur enregistrés alors que l\'ID d\'expéditeur défini dans la demande n\'a pas été enregistré sur votre compte. |\r\n| 21 | <mark style=\"background-color: #a8d3fb;\">REJECTED_SYSTEM_ERROR</mark> | La demande a été rejetée en raison d\'une erreur de système, veuillez réessayer la soumission ou contacter notre équipe de support technique pour plus de détails. |\r\n| 52 | <mark style=\"background-color: #a8d3fb;\">REJECTED_DESTINATION</mark> | La demande a été reçue, mais la destination n\'est pas valide – le préfixe du numéro n\'est pas correct car il ne correspond à un préfixe valide d\'aucun opérateur de téléphonie mobile. La longueur du numéro est également prise en considération pour vérifier la validité du numéro. |\r\n\r\n## Code des erreurs (HLR)\r\n\r\n### OK (errorGrpId: 0)\r\n\r\nLa demande a été traitée avec succès.\r\n\r\n| errorId | Permanent | Error | Description |\r\n|---------|-----------|-------|-------------|\r\n| 0 | false | <mark style=\"background-color: #a8d3fb;\">NO_ERROR</mark> | Aucune description d\'erreur n\'est fournie. Généralement renvoyé pour livraison réussie ou lorsque le code d\'erreur n\'a pas été renvoyé par l\'opérateur. |\r\n\r\n### HANDSET_ERRORS (errorGrpId: 1)\r\n\r\nLa demande n\'a pas été complétée en raison de problèmes liés au téléphone portable.\r\n\r\n| errorId | Permanent | Error | Description |\r\n|:---------:|:-----------:|:-------:|-------------|\r\n| 1 | true | <mark style=\"background-color: #a8d3fb;\">EC_UNKNOWN_SUBSCRIBER</mark> | Le numéro n\'existe pas ou n\'a pas été attribué à un abonné actif dans la base de données des utilisateurs de l\'opérateur. |\r\n| 5 | false | <mark style=\"background-color: #a8d3fb;\">EC_UNIDENTIFIED_SUBSCRIBER</mark> | Abonné non identifié |\r\n| 6 | false | <mark style=\"background-color: #a8d3fb;\">EC_ABSENT_SUBSCRIBER_SM</mark> | L\'abonné est détecté comme étant indisponible, car il n\'y a pas eu de réponse à la radiomessagerie du combiné. Cela est souvent dû au fait que le combiné est éteint ou se trouve dans une zone de faible signal. S\'applique à la version 3 du protocole MAP. |\r\n| 7 | false | <mark style=\"background-color: #a8d3fb;\">EC_UNKNOWN_EQUIPMENT</mark> | L\'appareil mobile n\'a pas été reconnu par l\'EIR (Equipment Identity Register), lors de la vérification de l\'appareil au niveau du protocole MAP sur l\'infrastructure de l\'opérateur. |\r\n| 8 | false | <mark style=\"background-color: #a8d3fb;\">EC_ROAMING_NOT_ALLOWED</mark> | L\'abonné est actuellement en itinérance dans un autre pays ou dans l\'infrastructure d\'un autre opérateur – la fourniture de l\'itinérance n\'est pas garantie en raison de l\'absence d\'accords d\'itinérance entre de nombreux opérateurs différents. |\r\n| 9 | true | <mark style=\"background-color: #a8d3fb;\">EC_ILLEGAL_SUBSCRIBER</mark> | Abonné illégal |\r\n| 11 | true | <mark style=\"background-color: #a8d3fb;\">EC_TELESERVICE_NOT_PROVISIONED</mark> | Le service mobile de l\'abonné a été suspendu par l\'opérateur. |\r\n| 12 | true | <mark style=\"background-color: #a8d3fb;\">EC_ILLEGAL_EQUIPMENT</mark> | Équipement illégal |\r\n| 13 | false | <mark style=\"background-color: #a8d3fb;\">EC_CALL_BARRED</mark> | Le message est rejeté en raison de l\'interdiction du service de messagerie, le blocage est fixé par l\'opérateur ou l\'abonné pour le numéro. |\r\n| 27 | false | <mark style=\"background-color: #a8d3fb;\">EC_ABSENT_SUBSCRIBER</mark> | L\'abonné est hors ligne dans le réseau, comme le confirme la réponse du combiné à la radiomessagerie. Cela est souvent dû au fait que le combiné est éteint. |\r\n| 31 | false | <mark style=\"background-color: #a8d3fb;\">EC_SUBSCRIBER_BUSY_FOR_MT_SMS</mark> | L\'abonné est occupé pour Mt SMS |\r\n| 32 | false | <mark style=\"background-color: #a8d3fb;\">EC_SM_DELIVERY_FAILURE</mark> | Échec de la livraison |\r\n| 33 | false | <mark style=\"background-color: #a8d3fb;\">EC_MESSAGE_WAITING_LIST_FULL</mark> | Liste d\'attente des messages complète |\r\n| 34 | false | <mark style=\"background-color: #a8d3fb;\">EC_SYSTEM_FAILURE</mark> | Défaillance du système |\r\n| 35 | false | <mark style=\"background-color: #a8d3fb;\">EC_DATA_MISSING</mark> | Données manquantes |\r\n| 36 | false | <mark style=\"background-color: #a8d3fb;\">EC_UNEXPECTED_DATA_VALUE</mark> | Valeur inattendue des données |\r\n| 255 | false | <mark style=\"background-color: #a8d3fb;\">EC_UNKNOWN_ERROR</mark> | Erreur inconnue |\r\n| 256 | false | <mark style=\"background-color: #a8d3fb;\">EC_SM_DF_MEMORYCAPACITYEXCEEDED</mark> | Il y a eu une erreur d\'équipement de l\'abonné mobile, alors que la mémoire du combiné a été dépassée. |\r\n| 257 | false | <mark style=\"background-color: #a8d3fb;\">EC_SM_DF_EQUIPMENTPROTOCOLERROR</mark> | Il y a eu une erreur dans l\'équipement de l\'abonné mobile. |\r\n| 258 | false | <mark style=\"background-color: #a8d3fb;\">EC_SM_DF_EQUIPMENTNOTSM_EQUIPPED</mark> | Il y a eu une erreur dans l\'équipement de l\'abonné mobile. |\r\n| 259 | false | <mark style=\"background-color: #a8d3fb;\">EC_SM_DF_UNKNOWNSERVICECENTRE</mark> | Il y a eu une erreur dans l\'équipement de l\'abonné mobile. |\r\n| 260 | false | <mark style=\"background-color: #a8d3fb;\">EC_SM_DF_SC_CONGESTION</mark> | Il y a eu une erreur dans l\'équipement de l\'abonné mobile. |\r\n| 261 | false | <mark style=\"background-color: #a8d3fb;\">EC_SM_DF_INVALIDSME_ADDRESS</mark> | Il y a eu une erreur dans l\'équipement de l\'abonné mobile. |\r\n| 262 | false | <mark style=\"background-color: #a8d3fb;\">EC_SM_DF_SUBSCRIBERNOTSC_SUBSCRIBER</mark> | Il y a eu une erreur dans l\'équipement de l\'abonné mobile. |\r\n| 500 | false | <mark style=\"background-color: #a8d3fb;\">EC_PROVIDER_GENERAL_ERROR</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 502 | false | <mark style=\"background-color: #a8d3fb;\">EC_NO_RESPONSE</mark> | Le message a été traité et transmis avec succès à l\'opérateur, mais l\'opérateur n\'a pas répondu à la demande de soumission du message, ou l\'erreur a été annulée par l\'opérateur. L\'erreur s\'applique également à des erreurs similaires au niveau du réseau SS7. |\r\n| 503 | false | <mark style=\"background-color: #a8d3fb;\">EC_SERVICE_COMPLETION_FAILURE</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 504 | false | <mark style=\"background-color: #a8d3fb;\">EC_UNEXPECTED_RESPONSE_FROM_PEER</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 507 | false | <mark style=\"background-color: #a8d3fb;\">EC_MISTYPED_PARAMETER</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 508 | false | <mark style=\"background-color: #a8d3fb;\">EC_NOT_SUPPORTED_SERVICE</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 509 | false | <mark style=\"background-color: #a8d3fb;\">EC_DUPLICATED_INVOKE_ID</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 1024 | false | <mark style=\"background-color: #a8d3fb;\">EC_OR_APPCONTEXTNOTSUPPORTED</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 1025 | false | <mark style=\"background-color: #a8d3fb;\">EC_OR_INVALIDDESTINATIONREFERENCE</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 1026 | false | <mark style=\"background-color: #a8d3fb;\">EC_OR_INVALIDORIGINATINGREFERENCE</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 1027 | false | <mark style=\"background-color: #a8d3fb;\">EC_OR_ENCAPSULATEDAC_NOTSUPPORTED</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 1028 | false | <mark style=\"background-color: #a8d3fb;\">EC_OR_TRANSPORTPROTECTIONNOTADEQUATE</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 1029 | false | <mark style=\"background-color: #a8d3fb;\">EC_OR_NOREASONGIVEN</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 1030 | false | <mark style=\"background-color: #a8d3fb;\">EC_OR_POTENTIALVERSIONINCOMPATIBILITY</mark> | Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d\'opérateur ou des paramètres incompatibles entre deux composants de réseau. |\r\n| 1031 | false | <mark style=\"background-color: #a8d3fb;\">EC_OR_REMOTENODENOTREACHABLE</mark> | L\'abonné mobile n\'était pas joignable en raison d\'une erreur de protocole de l\'opérateur de réseau. |\r\n| 1152 | false | <mark style=\"background-color: #a8d3fb;\">EC_NNR_NOTRANSLATIONFORANADDRESSOFSUCHNATURE</mark> | L\'abonné mobile n\'était pas joignable en raison d\'une erreur de protocole de l\'opérateur de réseau. |\r\n| 1153 | false | <mark style=\"background-color: #a8d3fb;\">EC_NNR_NOTRANSLATIONFORTHISSPECIFICADDRESS</mark> | Pas de traduction pour cette adresse spécifique. |\r\n| 1154 | false | <mark style=\"background-color: #a8d3fb;\">EC_NNR_SUBSYSTEMCONGESTION</mark> | L\'abonné mobile n\'était pas joignable en raison d\'une erreur de protocole de l\'opérateur de réseau. |\r\n| 1155 | false | <mark style=\"background-color: #a8d3fb;\">EC_NNR_SUBSYSTEMFAILURE</mark> | L\'abonné mobile n\'était pas joignable en raison d\'une erreur de protocole de l\'opérateur de réseau. |\r\n| 1156 | false | <mark style=\"background-color: #a8d3fb;\">EC_NNR_UNEQUIPPEDUSER</mark> | L\'abonné mobile n\'était pas joignable en raison d\'une erreur de protocole de l\'opérateur de réseau. |\r\n| 1157 | false | <mark style=\"background-color: #a8d3fb;\">EC_NNR_MTPFAILURE</mark> | L\'abonné mobile n\'était pas joignable en raison d\'une erreur de protocole de l\'opérateur de réseau. |\r\n| 1158 | false | <mark style=\"background-color: #a8d3fb;\">EC_NNR_NETWORKCONGESTION</mark> | L\'abonné mobile n\'était pas joignable en raison d\'une erreur de protocole de l\'opérateur de réseau. |\r\n\r\n### USER_ERRORS (errorGrpId: 2)\r\n\r\nUne erreur d\'utilisateur s\'est produite.\r\n\r\n| errorId | Permanent | Error | Description |\r\n|:---------:|:-----------:|:-------:|-------------|\r\n| 2049 | true | <mark style=\"background-color: #a8d3fb;\">EC_IMSI_BLACKLISTED</mark> | IMSI sur liste noire. |\r\n| 2052 | true | <mark style=\"background-color: #a8d3fb;\">EC_BLACKLISTED_DESTINATIONADDRESS</mark> | Le numéro de destination a été mis sur liste noire soit à la demande de l\'opérateur, soit sur votre compte via les portails web SMSPartner – veuillez supprimer la liste noire sur votre compte via portal.infobip.com ou contactez le support pour plus d\'informations. |\r\n| 2053 | true | <mark style=\"background-color: #a8d3fb;\">EC_BLACKLISTED_SENDERADDRESS</mark> | Le numéro de l\'expéditeur a été mis sur liste noire soit à la demande de l\'opérateur, soit sur votre compte via les portails web SMSPartner – veuillez supprimer la liste noire sur votre compte via portal.infobip.com ou contactez le support pour plus d\'informations. |\r\n| 2053 | true | <mark style=\"background-color: #a8d3fb;\">EC_SOURCE_ADDRESS_BLACKLISTED</mark> | L\'adresse source est sur la liste noire du compte SMSPartner. |\r\n| 4096 | true | <mark style=\"background-color: #a8d3fb;\">EC_INVALID_PDU_FORMAT</mark> | Format PDU non valide. |\r\n| 4100 | true | <mark style=\"background-color: #a8d3fb;\">EC_MESSAGE_CANCELED</mark> | La demande a été reçue, mais n\'a pas été envoyée à l\'instance suivante pendant sa période de validité, et est expirée avec le code d\'erreur approprié EC_MESSAGE_CANCELED, ou le même code d\'erreur a été renvoyé par l\'opérateur. |\r\n| 4101 | true | <mark style=\"background-color: #a8d3fb;\">EC_VALIDITYEXPIRED</mark> | Le message a été envoyé à l\'instance suivante, et n\'a pas été délivré dans la période de validité du message, il est donc expiré avec le code d\'erreur approprié EC_VALIDITYEXPIRED ou le code d\'erreur a été renvoyé par l\'opérateur. |\r\n| 4102 | true | <mark style=\"background-color: #a8d3fb;\">EC_NOTSUBMITTEDTOSMPPCHANNEL</mark> | Ne peut pas être transférée via le SMPP en raison de l\'absence de conectivité du SMPP. |\r\n| 4103 | true | <mark style=\"background-color: #a8d3fb;\">EC_DESTINATION_FLOODING</mark> | En ce qui concerne le statut REJECTED_FLOODING_FILTER, le message est rejeté en raison du nombre de messages envoyés à un seul numéro. |\r\n| 4104 | true | <mark style=\"background-color: #a8d3fb;\">EC_DESTINATION_TXT_FLOODING</mark> | En ce qui concerne le statut REJECTED_FLOODING_FILTER, le message est rejeté en raison du nombre de messages identiques envoyés à un seul numéro. |\r\n\r\n### OPERATOR_ERRORS (errorGrpId: 3)\r\n\r\nLa demande n\'a pas été complétée en raison de problèmes liés à l\'opérateur.\r\n\r\n| errorId | Permanent | Error | Description |\r\n|:---------:|:-----------:|:-------:|-------------|\r\n| 10 | true | <mark style=\"background-color: #a8d3fb;\">EC_BEARER_SERVICE_NOT_PROVISIONED</mark> | Service au porteur non fourni. |\r\n| 20 | false | <mark style=\"background-color: #a8d3fb;\">EC_SS_INCOMPATIBILITY</mark> | Incompatibilité SS. |\r\n| 51 | true | <mark style=\"background-color: #a8d3fb;\">EC_RESOURCE_LIMITATION</mark> | Indique que l\'opération MAP invoquée n\'a pas pu être terminée en raison de la congestion du réseau – il s\'agit d\'une erreur de congestion du réseau SS7 au niveau du protocole MAP. |\r\n| 71 | false | <mark style=\"background-color: #a8d3fb;\">EC_UNKNOWN_ALPHABET</mark> | Alphabet inconnu. |\r\n| 501 | false | <mark style=\"background-color: #a8d3fb;\">EC_INVALID_RESPONSE_RECEIVED</mark> | Réception d\'une réponse non valable. |\r\n| 2048 | false | <mark style=\"background-color: #a8d3fb;\">EC_TIME_OUT</mark> | Time Out. |\r\n| 2050 | true | <mark style=\"background-color: #a8d3fb;\">EC_DEST_ADDRESS_BLACKLISTED</mark> | Le numéro a été trouvé sur la liste noire du DND (Do Not Disturb) fournie par l\'opérateur, ou le même code d\'erreur a été retourné par l\'opérateur. |\r\n\r\n## Envoi de messages vocaux / VMS\r\n\r\n| Codes                      | Message                                      |\r\n|:----------------------------:|----------------------------------------------|\r\n| PHONE_NUMBER_REQUIRED      | Le numéro de téléphone est requis            |\r\n| PHONE_NUMBER_SIZE_ERROR    | Le nombre de numéros est supérieur à 500     |\r\n| TOKEN_AUDIO_REQUIRED       | Le token de l’audio est requis               |\r\n| NOTIFY_URL_INVALID         | L’url de notification est invalide           |\r\n| SENDER_NOT_AUTHORIZED      | Le sender n’est pas autorisé                 |\r\n| SENDER_INVALID             | Le sender est invalide                       |\r\n| AUDIO_FILE_NOT_FOUND       | Le fichier audio est introuvable             |\r\n| DESTINATION_INVALID        | Le numéro de téléphone n’est pas autorisé    |\r\n| NOT_CREDIT                 | Crédit insuffisant                           |\r\n\r\n## Envoi de Mail\r\n\r\n| Codes | Message                                                      |\r\n|:-------:|--------------------------------------------------------------|\r\n| 1     | La clé API est requise                                       |\r\n| 2     | Le contenu du mail est requis                                |\r\n| 3     | La clé API est requise                                       |\r\n| 4     | Le sender email est requis                                   |\r\n| 5     | Le sender name ne peut-être vide                             |\r\n| 8     | L’URL de la pièce jointe est requise                         |\r\n| 9     | L’extension de la pièce jointe n’est pas autorisée           |\r\n| 10    | Clef API incorrecte                                          |\r\n| 11    | Crédit insuffisant                                           |\r\n| 14    | Le mail est dans la liste des désinscriptions                |\r\n| 15    | Le mail est déjà dans la liste d’envoi                       |\r\n| 16    | Le nom de la pièce jointe ne peut-être vide                  |\r\n| 17    | Nombre de destinataires maximum dépassé                      |\r\n| 18    | L’email du destinataire est requis                           |\r\n| 19    | L’email du destinataire semble invalide                      |\r\n| 20    | Compte désactivé                                             |\r\n| 21    | Le nom du destinataire ne peut-être vide                     |\r\n| 22    | La liste des destinataires est requise                       |\r\n| 23    | L’email du destinataire en réponse est requis                |\r\n| 24    | L’email du destinataire en réponse semble invalide           |\r\n| 25    | Le nom du destinataire en réponse ne peut-être vide          |\r\n| 30    | Compte bloqué                                                |\r\n| 40    | L’accès à l’API est refusé                                   |\r\n| 45    | La date est requise                                          |\r\n| 46    | L’heure est requise                                          |\r\n| 47    | Le chiffre des minutes est invalide                          |\r\n| 48    | Les minutes doivent-être comprises entre 5 et 55 dans un intervalle de 5 minutes |\r\n| 49    | La date est invalide                                         |\r\n| 50    | Le nombre de mails autorisés est de 500 maxi                 |\r\n| 55    | Aucun prix par défaut n’a été trouvé                         |\r\n| 90    | Le JSON est malformé: erreur de syntaxe                      |\r\n| 96    | L’IP n’est pas autorisée                                     |\r\n| 429   | Trop de requêtes effectuées en une minute (limite : 2000 requêtes / minute / Adresse IP) |\r\n| 500   | Problème lors de l’ajout du mail dans la file d’attente      |\r\n', 'fr', 77);
INSERT INTO `erreur_controlecode` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(58, '\r\n## Sending SMS\r\n\r\n992 Unauthorized sender\r\n\r\n| Codes | Message                                                                                      |\r\n|:-----:|----------------------------------------------------------------------------------------------|\r\n| 1     | The API key is required                                                                      |\r\n| 2     | The phoneNumbers field is required                                                            |\r\n| 4     | message not found                                                                             |\r\n| 10    | Incorrect API key                                                                             |\r\n| 11    | Insufficient credit                                                                           |\r\n| 13    | No default price was found for the following numbers                                          |\r\n| 14    | The number is in the STOP SMS list                                                            |\r\n| 15    | The number is already present in the list                                                     |\r\n| 20    | Account disabled                                                                              |\r\n| 22    | SMS Marketing: The sending time is not valid; it must be between 8 AM and 10 PM.           |\r\n| 23    | SMS Marketing: The date [...] is not valid; sending SMS is not possible on Sundays and holidays. |\r\n| 30    | Account blocked                                                                                |\r\n| 40    | Access to the API is denied                                                                    |\r\n| 42    | The number of characters for a Low Cost SMS is 160 characters                               |\r\n| 43    | The message is required                                                                        |\r\n| 44    | The sender is invalid                                                                          |\r\n| 45    | The date is required                                                                          |\r\n| 46    | The time is required                                                                          |\r\n| 47    | The minutes digit is invalid                                                                   |\r\n| 48    | Minutes must be between 5 and 55 in intervals of 5 minutes                                   |\r\n| 49    | The date is invalid                                                                            |\r\n| 50    | The number of allowed numbers is a maximum of 500                                             |\r\n| 51    | The low-cost range is not eligible                                                             |\r\n| 52    | The number of concatenated SMS cannot exceed 10 SMS                                           |\r\n| 55    | No number to send                                                                              |\r\n| 90    | The JSON is malformed: syntax error                                                           |\r\n| 96    | The IP is not authorized                                                                       |\r\n| 500   | Problem adding the SMS to the queue                                                            |\r\n\r\n## SMS Cancellation\r\n\r\n| Codes | Message                                                                                      |\r\n|:-----:|----------------------------------------------------------------------------------------------|\r\n| 2     | The phoneNumber field is required                                                             |\r\n| 3     | The MessageId field is required                                                                |\r\n| 4     | This message is not found                                                                      |\r\n| 5     | The list of numbers is empty                                                                    |\r\n| 6     | The format is not correct                                                                      |\r\n| 9     | Does not appear to be a mobile number                                                          |\r\n| 50    | The number of allowed numbers is a maximum of 500                                             |\r\n| 96    | The IP is not authorized                                                                       |\r\n\r\n## Status Retrieval\r\n\r\n| Codes | Message                                                                                      |\r\n|:-----:|----------------------------------------------------------------------------------------------|\r\n| 2     | The phoneNumber field is required                                                             |\r\n| 3     | The MessageId field is required                                                                |\r\n| 4     | This message is not found                                                                      |\r\n| 5     | The list of numbers is empty                                                                    |\r\n| 6     | The format is not correct                                                                      |\r\n| 9     | Does not appear to be a mobile number                                                          |\r\n| 50    | The number of allowed numbers is a maximum of 500                                             |\r\n| 96    | The IP is not authorized                                                                       |\r\n\r\n## Status List\r\n\r\n| Codes        | Message                                                                                      |\r\n|--------------|----------------------------------------------------------------------------------------------|\r\n| delivered    | The SMS has been delivered                                                                    |\r\n| not delivered | The SMS has not been delivered                                                                |\r\n| waiting      | The SMS has been sent, awaiting at the operator                                               |\r\n| ko           | The SMS was not sent, a problem occurred, please contact customer service                    |\r\n\r\n## Status Error Codes\r\n\r\n### SMS Status\r\n\r\n| Codes        | Description                                                                                  |\r\n|--------------|----------------------------------------------------------------------------------------------|\r\n| DELIVRD      | The message has been processed and delivered successfully.                                   |\r\n| PENDING      | The message has been processed and sent to the next instance. The delivery report has not yet been received and is awaited, the status is still pending. |\r\n| UNDELIV      | The message has been sent to the operator, but could not be delivered, as a receipt with the status \"UNDELIV\" was canceled by the operator. |\r\n| ACCEPTD      | The SMS has been accepted and will be sent.                                                 |\r\n| UNKNOWN      | An unknown error occurred.                                                                   |\r\n| ENROUTE      | The message is en route.                                                                     |\r\n| EXPIRED      | The message has been sent and has expired due to exceeding its validity period (our default platform is 48 hours), or the operator returned EXPIRED as the final status. |\r\n| REJECTD      | The message has been sent, but it was rejected by the operator and returned REJECTD as the final status. |\r\n\r\n## Number Verification\r\n\r\n| Codes | Message                                                                                      |\r\n|:-----:|----------------------------------------------------------------------------------------------|\r\n| 2     | The phoneNumber field is required                                                             |\r\n| 11    | Insufficient credit                                                                           |\r\n| 13    | No default price has been found for this destination                                          |\r\n| 14    | The number is in the STOP SMS list                                                            |\r\n| 19    | The numbers must be separated by a comma                                                      |\r\n| 50    | The number of allowed numbers is a maximum of 500                                             |\r\n| 55    | No number to send                                                                              |\r\n\r\n## Location\r\n\r\n| Codes | Message                                                                                      |\r\n|:-----:|----------------------------------------------------------------------------------------------|\r\n| 3     | The parameters field is required                                                               |\r\n| 4     | The op parameter is required                                                                   |\r\n| 5     | The urlNotification parameter is not a valid URL                                             |\r\n| 6     | This operation is not authorized                                                               |\r\n| 7     | The sex parameter is required                                                                   |\r\n| 8     | The sex parameter must be only m, h, or f                                                    |\r\n| 9     | The minAge parameter is required                                                               |\r\n| 11    | Insufficient credit                                                                           |\r\n| 12    | The minAge parameter must be greater than 17                                                 |\r\n| 13    | The maxAge parameter is required                                                               |\r\n| 14    | The maxAge parameter must be less than 99                                                    |\r\n| 15    | The interest parameter must be greater than 0                                                |\r\n| 16    | The interest parameter cannot be empty                                                         |\r\n| 17    | The subInterest parameter must not be empty                                                   |\r\n| 18    | The subInterest parameter must be greater than 0                                             |\r\n| 19    | The interest or subInterest parameters are required                                           |\r\n| 22    | The category parameter must not be empty                                                      |\r\n| 23    | The category parameter must be greater than 0                                                |\r\n| 24    | The Type parameters are required                                                               |\r\n| 25    | The Localite parameter is required                                                             |\r\n| 26    | The Volume parameter is required                                                               |\r\n| 27    | The desired volume cannot exceed the available volume                                         |\r\n| 28    | The DesiredVolume parameter cannot exceed the total volume                                     |\r\n| 31    | The token parameter is required                                                                 |\r\n| 32    | The rental request is not found                                                                |\r\n| 33    | The rental file is not found                                                                    |\r\n| 34    | The rental file has already been used                                                          |\r\n| 35    | The rental file is being downloaded                                                             |\r\n| 36    | The rental of the file has failed                                                               |\r\n| 61    | The request seems invalid and returned no results                                              |\r\n| 96    | The IP is not authorized                                                                        |\r\n\r\n## Sub-account\r\n\r\n| Codes | Message                                                                                      |\r\n|:-----:|----------------------------------------------------------------------------------------------|\r\n| 2     | You are not authorized to create sub-accounts                                               |\r\n| 3     | The Credit field is required                                                                  |\r\n| 4     | The tokenSubaccount field is required                                                         |\r\n| 5     | The credit field must be greater than 0                                                      |\r\n| 6     | The sub-account is not found                                                                  |\r\n| 7     | Insufficient credit for the sub-account                                                      |\r\n| 11    | Insufficient credit                                                                           |\r\n| 96    | The IP is not authorized                                                                       |\r\n\r\n## HLR\r\n\r\n### Code Status: PENDING (statusGrpId: 1)\r\n\r\nThe message has been processed and sent to the mobile operator.\r\n\r\n| statusId | Status                           | Description                                                                                      |\r\n|:--------:|:--------------------------------:|--------------------------------------------------------------------------------------------------|\r\n| 3        | PENDING_WAITING_DELIVERY         | The message has been processed and sent. The delivery report has not yet been received and is awaited, so the status is still pending. |\r\n| 7        | PENDING_ENROUTE                  | The message has been processed and sent to the mobile operator.                                   |\r\n| 26       | PENDING_ACCEPTED                 | The message has been accepted and processed, and is ready to be sent to the operator.            |\r\n\r\n### UNDELIVERABLE (statusGrpId: 2)\r\n\r\nThe message has not been delivered.\r\n\r\n| statusId | Status                           | Description                                                                                      |\r\n|:--------:|:--------------------------------:|--------------------------------------------------------------------------------------------------|\r\n| 4        | UNDELIVERABLE_REJECTED_OPERATOR  | A message has been sent to the operator, a delivery report with the status \"REJECTED\" has been returned. |\r\n| 9        | UNDELIVERABLE_NOT_DELIVERED      | The message has been sent to the operator, but could not be delivered, a delivery report with the status \"UNDELIVERED\" has been returned by the operator. |\r\n\r\n### DELIVERED (statusGrpId: 3)\r\n\r\nThe message has been processed and delivered successfully.\r\n\r\n| statusId | Status                           | Description                                                                                      |\r\n|:--------:|:--------------------------------:|--------------------------------------------------------------------------------------------------|\r\n| 2        | DELIVERED_TO_OPERATOR            | The message has been sent and delivered successfully to the operator.                          |\r\n| 5        | DELIVERED_TO_HANDSET             | The message has been processed and successfully delivered to the recipient.                     |\r\n\r\n### EXPIRED (statusGrpId: 4)\r\n\r\nThe message has been sent and has expired either because it was pending beyond its validity period (our platform is configured by default for 48 hours), or because the operator\'s delivery report restored the status \"EXPIRED\" as the final status.\r\n\r\n| statusId | Status                           | Description                                                                                      |\r\n|:--------:|:--------------------------------:|--------------------------------------------------------------------------------------------------|\r\n| 15       | EXPIRED_EXPIRED                  | The message has been received and sent to the operator. However, it remained pending until the validity period expired or until the operator returned the status EXPIRED. |\r\n| 29       | EXPIRED_DLR_UNKNOWN              | The message has been received and transmitted to the operator for delivery. However, the operator\'s delivery report has not been formatted correctly or has not been recognized as valid. |\r\n\r\n### REJECTED (statusGrpId: 5)\r\n\r\nThe message has been received but has been rejected by the operator.\r\n\r\n| statusId | Status                           | Description                                                                                      |\r\n|:--------:|:--------------------------------:|--------------------------------------------------------------------------------------------------|\r\n| 6        | REJECTED_NETWORK                 | The message has been received, but the network is out of our coverage.                         |\r\n| 8        | REJECTED_PREFIX_MISSING          | The message has been received but has been rejected because the number is not recognized due to a prefix or incorrect number length. This information varies for each network and is regularly updated. |\r\n| 10       | REJECTED_DND                     | The message has been received and rejected because the user is subscribed to DND services (Do Not Disturb), which disables any service traffic to their number. |\r\n| 11       | REJECTED_SOURCE                  | Your account is configured to accept only registered sender IDs while the sender ID defined in the request has not been registered on your account. |\r\n| 21       | REJECTED_SYSTEM_ERROR            | The request has been rejected due to a system error, please try resubmitting or contact our technical support team for more details. |\r\n| 52       | REJECTED_DESTINATION             | The request has been received, but the destination is not valid – the number prefix is incorrect as it does not match a valid prefix of any mobile operator. The number length is also taken into consideration to verify the validity of the number. |\r\n\r\n## Error Codes (HLR)\r\n\r\n### OK (errorGrpId: 0)\r\n\r\nThe request has been processed successfully.\r\n\r\n| errorId | Permanent | Error      | Description                                                                                      |\r\n|---------|-----------|------------|--------------------------------------------------------------------------------------------------|\r\n| 0       | false     | NO_ERROR   | No error description is provided. Generally returned for successful delivery or when the error code has not been returned by the operator. |\r\n\r\n### HANDSET_ERRORS (errorGrpId: 1)\r\n\r\nThe request has not been completed due to issues related to the mobile phone.\r\n\r\n| errorId | Permanent | Error                          | Description                                                                                      |\r\n|---------|-----------|--------------------------------|--------------------------------------------------------------------------------------------------|\r\n| 1       | true      | EC_UNKNOWN_SUBSCRIBER          | The number does not exist or has not been assigned to an active subscriber in the operator\'s user database. |\r\n| 5       | false     | EC_UNIDENTIFIED_SUBSCRIBER     | Unidentified subscriber                                                                          |\r\n| 6       | false     | EC_ABSENT_SUBSCRIBER_SM        | The subscriber is detected as being unavailable, as there has been no response to the device\'s radiomessaging. This is often due to the device being turned off or located in a low signal area. Applies to version 3 of the MAP protocol. |\r\n| 7       | false     | EC_UNKNOWN_EQUIPMENT            | The mobile device has not been recognized by the EIR (Equipment Identity Register) during the device check at the MAP protocol level on the operator\'s infrastructure. |\r\n| 8       | false     | EC_ROAMING_NOT_ALLOWED          | The subscriber is currently roaming in another country or in another operator\'s infrastructure – roaming provision is not guaranteed due to the absence of roaming agreements between many different operators. |\r\n| 9       | true      | EC_ILLEGAL_SUBSCRIBER          | Illegal subscriber                                                                              |\r\n| 11      | true      | EC_TELESERVICE_NOT_PROVISIONED  | The subscriber\'s mobile service has been suspended by the operator.                             |\r\n| 12      | true      | EC_ILLEGAL_EQUIPMENT            | Illegal equipment                                                                                |\r\n| 13      | false     | EC_CALL_BARRED                  | The message is rejected due to messaging service prohibition, the blocking is set by the operator or the subscriber for the number. |\r\n| 27      | false     | EC_ABSENT_SUBSCRIBER            | The subscriber is offline in the network, as confirmed by the device\'s response to the radiomessaging. This is often due to the device being turned off. |\r\n| 31      | false     | EC_SUBSCRIBER_BUSY_FOR_MT_SMS   | The subscriber is busy for MT SMS                                                               |\r\n| 32      | false     | EC_SM_DELIVERY_FAILURE          | Delivery failure                                                                                |\r\n| 33      | false     | EC_MESSAGE_WAITING_LIST_FULL    | Message waiting list full                                                                       |\r\n| 34      | false     | EC_SYSTEM_FAILURE                | System failure                                                                                  |\r\n| 35      | false     | EC_DATA_MISSING                  | Missing data                                                                                   |\r\n| 36      | false     | EC_UNEXPECTED_DATA_VALUE         | Unexpected data value                                                                           |\r\n| 255     | false     | EC_UNKNOWN_ERROR                 | Unknown error                                                                                   |\r\n| 256     | false     | EC_SM_DF_MEMORYCAPACITYEXCEEDED | There was a mobile subscriber equipment error, while the device memory has been exceeded.      |\r\n| 257     | false     | EC_SM_DF_EQUIPMENTPROTOCOLERROR  | There was an error in the mobile subscriber equipment.                                         |\r\n| 258     | false     | EC_SM_DF_EQUIPMENTNOTSM_EQUIPPED | There was an error in the mobile subscriber equipment.                                         |\r\n| 259     | false     | EC_SM_DF_UNKNOWNSERVICECENTRE    | There was an error in the mobile subscriber equipment.                                         |\r\n| 260     | false     | EC_SM_DF_SC_CONGESTION           | There was an error in the mobile subscriber equipment.                                         |\r\n| 261     | false     | EC_SM_DF_INVALIDSME_ADDRESS      | There was an error in the mobile subscriber equipment.                                         |\r\n| 262     | false     | EC_SM_DF_SUBSCRIBERNOTSC_SUBSCRIBER | There was an error in the mobile subscriber equipment.                                         |\r\n| 500     | false     | EC_PROVIDER_GENERAL_ERROR         | General network protocol error, caused by operator network protocol version or incompatible settings between two network components. |\r\n| 502     | false     | EC_NO_RESPONSE                    | The message has been processed and successfully transmitted to the operator, but the operator did not respond to the message submission request, or the error was canceled by the operator. The error also applies to similar errors at the SS7 network level. |\r\n| 503     | false     | EC_SERVICE_COMPLETION_FAILURE      | General network protocol error, caused by operator network protocol version or incompatible settings between two network components. |\r\n| 504     | false     | EC_UNEXPECTED_RESPONSE_FROM_PEER   | General network protocol error, caused by operator network protocol version or incompatible settings between two network components. |\r\n| 507     | false     | EC_MISTYPED_PARAMETER              | General network protocol error, caused by operator network protocol version or incompatible settings between two network components. |\r\n| 508     | false     | | 509 | false | EC_DUPLICATED_INVOKE_ID | General network protocol error, caused by operator network protocol versions or incompatible parameters between two network components. |\r\n| 1024 | false | EC_OR_APPCONTEXTNOTSUPPORTED | General network protocol error, caused by operator network protocol versions or incompatible parameters between two network components. |\r\n| 1025 | false | EC_OR_INVALIDDESTINATIONREFERENCE | General network protocol error, caused by operator network protocol versions or incompatible parameters between two network components. |\r\n| 1026 | false | EC_OR_INVALIDORIGINATINGREFERENCE | General network protocol error, caused by operator network protocol versions or incompatible parameters between two network components. |\r\n| 1027 | false | EC_OR_ENCAPSULATEDAC_NOTSUPPORTED | General network protocol error, caused by operator network protocol versions or incompatible parameters between two network components. |\r\n| 1028 | false | EC_OR_TRANSPORTPROTECTIONNOTADEQUATE | General network protocol error, caused by operator network protocol versions or incompatible parameters between two network components. |\r\n| 1029 | false | EC_OR_NOREASONGIVEN | General network protocol error, caused by operator network protocol versions or incompatible parameters between two network components. |\r\n| 1030 | false | EC_OR_POTENTIALVERSIONINCOMPATIBILITY | General network protocol error, caused by operator network protocol versions or incompatible parameters between two network components. |\r\n| 1031 | false | EC_OR_REMOTENODENOTREACHABLE | The mobile subscriber was not reachable due to a network operator protocol error. |\r\n| 1152 | false | EC_NNR_NOTRANSLATIONFORANADDRESSOFSUCHNATURE | The mobile subscriber was not reachable due to a network operator protocol error. |\r\n| 1153 | false | EC_NNR_NOTRANSLATIONFORTHISSPECIFICADDRESS | No translation for this specific address. |\r\n| 1154 | false | EC_NNR_SUBSYSTEMCONGESTION | The mobile subscriber was not reachable due to a network operator protocol error. |\r\n| 1155 | false | EC_NNR_SUBSYSTEMFAILURE | The mobile subscriber was not reachable due to a network operator protocol error. |\r\n| 1156 | false | EC_NNR_UNEQUIPPEDUSER | The mobile subscriber was not reachable due to a network operator protocol error. |\r\n| 1157 | false | EC_NNR_MTPFAILURE | The mobile subscriber was not reachable due to a network operator protocol error. |\r\n| 1158 | false | EC_NNR_NETWORKCONGESTION | The mobile subscriber was not reachable due to a network operator protocol error. |\r\n\r\n### USER_ERRORS (errorGrpId: 2)\r\n\r\nAn user error has occurred.\r\n\r\n| errorId | Permanent | Error | Description |\r\n|:---------:|:-----------:|:-------:|-------------|\r\n| 2049 | true | EC_IMSI_BLACKLISTED | IMSI is blacklisted. |\r\n| 2052 | true | EC_BLACKLISTED_DESTINATIONADDRESS | The destination number has been blacklisted either at the request of the operator or on your account via the SMSPartner web portals – please remove the blacklist from your account via portal.infobip.com or contact support for more information. |\r\n| 2053 | true | EC_BLACKLISTED_SENDERADDRESS | The sender number has been blacklisted either at the request of the operator or on your account via the SMSPartner web portals – please remove the blacklist from your account via portal.infobip.com or contact support for more information. |\r\n| 2053 | true | EC_SOURCE_ADDRESS_BLACKLISTED | The source address is blacklisted on the SMSPartner account. |\r\n| 4096 | true | EC_INVALID_PDU_FORMAT | Invalid PDU format. |\r\n| 4100 | true | EC_MESSAGE_CANCELED | The request has been received, but has not been sent to the next instance during its validity period, and has expired with the appropriate error code EC_MESSAGE_CANCELED, or the same error code has been returned by the operator. |\r\n| 4101 | true | EC_VALIDITYEXPIRED | The message has been sent to the next instance, and has not been delivered within the message validity period, it has therefore expired with the appropriate error code EC_VALIDITYEXPIRED or the error code has been returned by the operator. |\r\n| 4102 | true | EC_NOTSUBMITTEDTOSMPPCHANNEL | Cannot be transferred via SMPP due to lack of SMPP connectivity. |\r\n| 4103 | true | EC_DESTINATION_FLOODING | Regarding the REJECTED_FLOODING_FILTER status, the message is rejected due to the number of messages sent to a single number. |\r\n| 4104 | true | EC_DESTINATION_TXT_FLOODING | Regarding the REJECTED_FLOODING_FILTER status, the message is rejected due to the number of identical messages sent to a single number. |\r\n\r\n### OPERATOR_ERRORS (errorGrpId: 3)\r\n\r\nThe request has not been completed due to operator-related issues.\r\n\r\n| errorId | Permanent | Error | Description |\r\n|:---------:|:-----------:|:-------:|-------------|\r\n| 10 | true | EC_BEARER_SERVICE_NOT_PROVISIONED | Bearer service not provided. |\r\n| 20 | false | EC_SS_INCOMPATIBILITY | SS incompatibility. |\r\n| 51 | true | EC_RESOURCE_LIMITATION | Indicates that the invoked MAP operation could not be completed due to network congestion – this is a network congestion error at the SS7 level in the MAP protocol. |\r\n| 71 | false | EC_UNKNOWN_ALPHABET | Unknown alphabet. |\r\n| 501 | false | EC_INVALID_RESPONSE_RECEIVED | Received an invalid response. |\r\n| 2048 | false | EC_TIME_OUT | Time Out. |\r\n| 2050 | true | EC_DEST_ADDRESS_BLACKLISTED | The number has been found on the DND (Do Not Disturb) blacklist provided by the operator, or the same error code has been returned by the operator. |\r\n\r\n## Sending Voice Messages / VMS\r\n\r\n| Codes                      | Message                                      |\r\n|:----------------------------:|----------------------------------------------|\r\n| PHONE_NUMBER_REQUIRED      | The phone number is required                  |\r\n| PHONE_NUMBER_SIZE_ERROR    | The number of phone numbers exceeds 500       |\r\n| TOKEN_AUDIO_REQUIRED       | The audio token is required                    |\r\n| NOTIFY_URL_INVALID         | The notification URL is invalid                |\r\n| SENDER_NOT_AUTHORIZED      | The sender is not authorized                   |\r\n| SENDER_INVALID             | The sender is invalid                          |\r\n| AUDIO_FILE_NOT_FOUND       | The audio file is not found                    |\r\n| DESTINATION_INVALID        | The phone number is not authorized             |\r\n| NOT_CREDIT                 | Insufficient credit                            |\r\n\r\n## Sending Mail\r\n\r\n| Codes | Message                                                      |\r\n|:-------:|--------------------------------------------------------------|\r\n| 1     | The API key is required                                       |\r\n| 2     | The content of the mail is required                          |\r\n| 3     | The API key is required                                       |\r\n| 4     | The sender email is required                                  |\r\n| 5     | The sender name cannot be empty                              |\r\n| 8     | The URL of the attachment is required                        |\r\n| 9     | The attachment extension is not allowed                      |\r\n| 10    | Incorrect API key                                            |\r\n| 11    | Insufficient credit                                          |\r\n| 14    | The mail is in the unsubscribe list                          |\r\n| 15    | The mail is already in the sending list                      |\r\n| 16    | The name of the attachment cannot be empty                   |\r\n| 17    | Maximum number of recipients exceeded                         |\r\n| 18    | The recipient\'s email is required                            |\r\n| 19    | The recipient\'s email seems invalid                          |\r\n| 20    | Account disabled                                             |\r\n| 21    | The recipient\'s name cannot be empty                        |\r\n| 22    | The recipient list is required                               |\r\n| 23    | The recipient\'s reply email is required                     |\r\n| 24    | The recipient\'s reply email seems invalid                   |\r\n| 25    | The recipient\'s reply name cannot be empty                  |\r\n| 30    | Account blocked                                             |\r\n| 40    | Access to the API is denied                                  |\r\n| 45    | The date is required                                         |\r\n| 46    | The time is required                                         |\r\n| 47    | The minutes digit is invalid                                 |\r\n| 48    | Minutes must be between 5 and 55 in intervals of 5 minutes  |\r\n| 49    | The date is invalid                                         |\r\n| 50    | The number of allowed mails is a maximum of 500             |\r\n| 55    | No default price has been found                              |\r\n| 90    | The JSON is malformed: syntax error                          |\r\n| 96    | The IP is not authorized                                     |\r\n| 429   | Too many requests made in one minute (limit: 2000 requests / minute / IP Address) |\r\n| 500   | Problem adding the mail to the queue                         |\r\n', 'en', 78),
(59, '\r\n\r\n## Code de contrôle\r\n\r\n| _  | Code erreurs |\r\n| :---------------: |:---------------|\r\n|10 | Clé API incorrecte |\r\n|200 |Tout s’est bien passé ! |\r\n\r\n', 'fr', 81),
(60, '\r\n\r\n## Control Codes\r\n\r\n| _  | Error Codes |\r\n| :---------------: |:---------------|\r\n| 10 | Invalid API key |\r\n| 200 | Everything went well! |\r\n\r\n', 'en', 82);

-- --------------------------------------------------------

--
-- Structure de la table `introduction`
--

CREATE TABLE `introduction` (
  `id` int(11) NOT NULL,
  `textcode` text NOT NULL,
  `langue` varchar(50) NOT NULL,
  `id_chemin` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Déchargement des données de la table `introduction`
--

INSERT INTO `introduction` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(1, '---\ntitle: Introduction \nlang: fr\ndescription: Page d\'introduction à l\'API SMS Partner.\n---\n\n# Introduction à l\'API SMS Partner\n\nLes envois de SMS sont effectués à partir de l\'[API SMS](https://www.smspartner.fr/api-sms/) de SMS Partner. Depuis le site, vous avez un accès immédiat à notre API gratuite : elle vous permet d’intégrer facilement nos services de SMS à votre site web, logiciel ou application CRM en PHP, ASP, .NET, Java ou tout autre langage.\n', 'fr', 1),
(3, '---\ntitle: Crédits\ndescription: Page 2 Crédits.\n---\n\n# Introduction à l\'API SMS Partner\n\nCette requête est utilisée pour récupérer votre crédit disponible de SMS, ainsi que le nombre de SMS en instance de départ.', 'fr', 2),
(5, '---\ntitle: Introduction \nlang: en\ndescription: Page d\'introduction à l\'API SMS Partner.\nslug: page-01\n---\n\n# Introduction to SMS Partner’s API\n\nSMS messages are sent from the [SMS Partner](https://www.smspartner.fr/api-sms/) platform. From the site, you have immediate access to our free API: it allows you to easily integrate our SMS services into your website, software or CRM application in PHP, ASP, .NET, Java or any other language.\n', 'en', 5),
(6, '---\ntitle: Introducción\nlang: es\ndescription: Page d\'introduction à l\'API SMS Partner.\n---\n\n# Introducción a la API de SMS Partner\n\nLos envíos de SMS se realizan desde [la plataforma SMS Partner](https://www.smspartner.fr/api-sms/) de SMS Partner.. Desde el sitio, usted tiene acceso inmediato a nuestra API gratuita, la cual le permitirá integrar fácilmente nuestros servicios de SMS a su sitio web, software o aplicación de CRM en PHP, ASP, .NET, Java o cualquier otro lenguaje.\n', 'es', 6),
(7, '---\r\ntitle: Introduzione\r\nlang: it\r\ndescription: Pagina introduttiva dell\'API SMS Partner.\r\n---\r\n\r\n# Introduzione all\'API SMS Partner\r\n\r\nGli SMS sono inviati tramite [PartnerSMS](https://www.smspartner.fr/api-sms/) di SMS Partner. Dal sito, hai accesso immediato alla nostra API gratuita: ti permette di integrare facilmente i nostri servizi di SMS nel tuo sito web, software o applicazione CRM in PHP, ASP, .NET, Java o qualsiasi altro linguaggio.', 'it', 7),
(8, '---\ntitle: Introdução\nlang: pt\ndescription: Página de introdução à API SMS Partner.\n---\n\n# Introdução à API SMS Partner\n\nOs envios de SMS são feitos através da [API SMS](https://www.smspartner.fr/api-sms/) da SMS Partner. A partir do site, você tem acesso imediato à nossa API gratuita: ela permite integrar facilmente nossos serviços de SMS ao seu site, software ou aplicação CRM em PHP, ASP, .NET, Java ou qualquer outro idioma.\n\n', 'pt', 8),
(9, '---\r\ntitle: Credits\r\ndescription: Page 2 Credits.\r\n---\r\n\r\n# Introduction to SMS Partner API\r\n\r\nThis endpoint is used to retrieve your available SMS credits and the number of pending SMS.\r\n\r\n', 'en', 9),
(10, '---\r\ntitle: Créditos\r\ndescription: Page 2 Créditos.\r\n---\r\n\r\n# Introducción a la API de SMS Partner\r\n\r\nEsta solicitud se utiliza para recuperar su crédito disponible de SMS y el número de SMS pendiente de inicio.\r\n', 'es', 10),
(11, '---\r\ntitle: Crediti\r\ndescription: Page 2 Crediti.\r\n---\r\n\r\n# Introduzione all\'API Partner SMS\r\n\r\nQuesta interrogazione serve a recuperare il credito SMS disponibile e il numero di messaggi SMS in attesa.\r\n', 'it', 11),
(13, '---\ntitle: créditos\ndescription: Page 2 créditos.\n---\n\n# Introdução ao Parceiro API SMS\n\nEsta consulta é usado para recuperar seu crédito SMS disponível e o número de pendente de início SMS.\n', 'pt', 12),
(14, '---\r\ntitle: Envoi unitaire\r\ndescription: >\r\n---\r\n# Envoyer des SMS\r\nCette requête est utilisée pour envoyer des SMS en temps réel ou en différé.\r\n', 'fr', 13),
(15, '---\r\ntitle: Single Send\r\ndescription: >\r\n---\r\n# Sending SMS\r\nThis request is used to send SMS in real-time or scheduled.\r\n', 'en', 14),
(16, '---\r\ntitle: Envoi par lots\r\ndescription: >\r\n---\r\n# Envoyer des SMS\r\nCette requête est utilisée pour envoyer des SMS en temps réel ou en différé...\r\n\r\n', 'fr', 17),
(17, '---\ntitle: Bulk Sending\ndescription: >\n---\n# Sending SMS\nThis request is used to send SMS in real-time or scheduled...', 'en', 18),
(18, '---\r\ntitle: Envoyer des SMS via un numéro long\r\ndescription: Envoyer des SMS via un numéro long\r\n---\r\n# Envoyer des SMS via un numéro long\r\nCette requête est utilisée pour envoyer des SMS en temps réel ou en différé avec un numéro long.\r\n', 'fr', 19),
(19, '---\r\ntitle: Send SMS via Long Number\r\ndescription: Send SMS via Long Number\r\n---\r\n# Send SMS via Long Number\r\nThis request is used to send SMS in real-time or delayed using a long number.\r\n\r\n', 'en', 20),
(20, '---\r\ntitle: Envoyer un sondage\r\ndescription: >\r\n---\r\n# Envoyer un sondage\r\nCette requête est utilisée pour envoyer un sondage en temps réel ou en différé.\r\n\r\n', 'fr', 21),
(21, '---\r\ntitle: Send a Survey\r\ndescription: >\r\n---\r\n# Send a Survey\r\nThis request is used to send a survey in real-time or scheduled.\r\n\r\n', 'en', 22),
(22, '---\r\ntitle: Annuler l’envoi d’un SMS\r\ndescription: >\r\n---\r\n# Annuler l’envoi d’un SMS différé\r\nCette requête est utilisée pour envoyer un sondage en temps réel ou en différé.\r\n\r\n\r\n', 'fr', 23),
(23, '---\ntitle: Cancel SMS Sending\ndescription: >\n---\n# Cancel Scheduled SMS Sending\nThis request is used to cancel a scheduled SMS sending.\n\n', 'en', 24),
(24, '---\r\ntitle: Statut unitaire\r\ndescription: >\r\n---\r\n# Statut de remise unitaire\r\nCette requête permet de récupérer le statut d’un SMS.\r\n\r\n<div class=\"alert alert-info\">\r\nA noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ;\r\ncependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme.\r\n    </div>\r\n\r\n', 'fr', 25),
(25, '---\r\ntitle: Individual Status\r\ndescription: >\r\n---\r\n# Individual Delivery Status\r\nThis request allows you to retrieve the status of an SMS.\r\n\r\n<div class=\"alert alert-info\">\r\nNote: delivery reports are typically received a few seconds after sending the SMS;\r\nhowever, this delay can extend up to a maximum of 48 hours depending on the operators and the load on our platform.\r\n    </div>\r\n\r\n', 'en', 26),
(26, '---\r\ntitle: Statut par message\r\ndescription: >\r\n---\r\n# Statut par ID\r\nCette requête permet de récupérer les statuts de plusieurs SMS à partir d’un ID.\r\n\r\n<div class=\"alert alert-info\">\r\nA noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ; cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme.\r\n    </div>\r\n\r\n\r\n\r\n', 'fr', 29),
(27, '---\r\ntitle: Status by Message\r\ndescription: >\r\n---\r\n# Status by ID\r\nThis request allows you to retrieve the statuses of multiple SMS from an ID.\r\n\r\n<div class=\"alert alert-info\">\r\nNote: delivery reports are typically received a few seconds after sending the SMS; however, this delay can extend up to a maximum of 48 hours depending on the operators and the load on our platform.\r\n    </div>\r\n\r\n', 'en', 30),
(28, '---\r\ntitle: Statut multiple\r\ndescription: >\r\n---\r\n# Statut de remise\r\nCette requête permet de récupérer le statut de plusieurs SMS (maximum 500 numéros).\r\n\r\n<div class=\"alert alert-info\">\r\nA noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ; cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme.\r\n    </div>\r\n', 'fr', 27),
(29, '---\r\ntitle: Multiple Status\r\ndescription: >\r\n---\r\n# Delivery Status\r\nThis request allows you to retrieve the status of multiple SMS (maximum 500 numbers).\r\n\r\n<div class=\"alert alert-info\">\r\nNote: delivery reports are typically received a few seconds after sending the SMS; however, this delay can extend up to a maximum of 48 hours depending on the operators and the load on our platform.\r\n    </div>\r\n', 'en', 28),
(30, '---\r\ntitle: Statut par Tag\r\ndescription: >\r\n---\r\n# Statut par Tag\r\nCette requête permet de récupérer les statuts de plusieurs SMS à partir d’un Tag.\r\n<div class=\"alert alert-info\">\r\nA noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ; cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme. </div>\r\n', 'fr', 31),
(32, '---\r\ntitle: Status by Tag\r\ndescription: >\r\n---\r\n# Status by Tag\r\nThis request allows you to retrieve the statuses of multiple SMS using a Tag.\r\n<div class=\"alert alert-info\">\r\nNote: delivery reports are typically received a few seconds after sending the SMS; however, this delay can extend up to a maximum of 48 hours depending on the operators and the load on our platform. </div>\r\n', 'en', 32),
(33, '---\r\ntitle: Statistique des envois\r\ndescription: >\r\n---\r\n# Statistique des envois\r\nCette requête est utilisée pour récupérer les statistiques des envois sur une période précise. Elle permet de récupérer le nombre de SMS envoyés et le cout associé à ces envoiS.\r\n', 'fr', 33),
(34, '---\r\ntitle: Sending Statistics\r\ndescription: >\r\n---\r\n# Sending Statistics\r\nThis request is used to retrieve sending statistics for a specific period. It allows you to get the number of SMS sent and the associated cost of these sends.\r\n', 'en', 34),
(35, '---\r\ntitle: Ajouter un groupe\r\ndescription: >\r\n---\r\n# Ajouter un groupe\r\n', 'fr', 36),
(36, '---\r\ntitle: Add a group\r\ndescription: >\r\n---\r\n# Add a group\r\n', 'en', 37),
(37, '---\r\ntitle: Ajouter un contact\r\ndescription: >\r\n---\r\n# Ajouter un contact\r\n', 'fr', 38),
(38, '---\r\ntitle: Add a contact\r\ndescription: >\r\n---\r\n# Add a contact\r\n', 'en', 39),
(39, '---\ntitle: Supprimer un groupe de contact\ndescription: >\n---\n# Supprimer un groupe de contact\n', 'fr', 40),
(40, '---\r\ntitle: Delete a contact group\r\ndescription: >\r\n---\r\n# Delete a contact group\r\n', 'en', 41),
(41, '---\r\ntitle: Ajouter un lot de contacts\r\ndescription: >\r\n---\r\n# Ajouter un lot de contacts\r\n', 'fr', 42),
(42, '---\r\ntitle: Add a batch of contacts\r\ndescription: >\r\n---\r\n# Add a batch of contacts\r\n', 'en', 43),
(43, '---\r\ntitle: Modifier un contact\r\ndescription: >\r\n---\r\n# Modifier un contact\r\n', 'fr', 44),
(44, '---\r\ntitle: Modify a contact\r\ndescription: >\r\n---\r\n# Modify a contact\r\n', 'en', 45),
(45, '---\r\ntitle: Supprimer un contact\r\ndescription: >\r\n---\r\n# Supprimer un contact\r\n', 'fr', 46),
(46, '---\r\ntitle: Delete a contact\r\ndescription: >\r\n---\r\n# Delete a contact\r\n', 'en', 47),
(47, '---\r\ntitle: Obtenir la liste des groupes\r\ndescription: >\r\n---\r\n# Obtenir la liste des groupes de contacts\r\n', 'fr', 48),
(48, '---\r\ntitle: Get the list of groups\r\ndescription: >\r\n---\r\n# Get the list of contact groups\r\n', 'en', 49),
(49, '---\r\ntitle: Obtenir le détail d’un contact\r\ndescription: >\r\n---\r\n# Obtenir le détail d’un contact\r\n', 'fr', 52),
(50, '---\r\ntitle: Get contact details\r\ndescription: >\r\n---\r\n# Get contact details\r\n', 'en', 53),
(51, '---\r\ntitle: Liste des stops\r\ndescription: >\r\n---\r\n# Liste des stops\r\nCette requête permet de récupérer la liste des numéros qui ont envoyé un stop.\r\n  \r\n   <div class=\"alert alert-info\">\r\n   A noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ; cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme.\r\n    </div>\r\n\r\n', 'fr', 54),
(52, '---\r\ntitle: List of stops\r\ndescription: >\r\n---\r\n# List of stops\r\nThis request allows you to retrieve the list of numbers that have sent a stop.\r\n  \r\n   <div class=\"alert alert-info\">\r\n   Note: The reports are received on average a few seconds after the SMS is sent; however, this delay can extend up to a maximum of 48 hours depending on the operators and the load on our platform.\r\n    </div>\r\n\r\n', 'en', 55),
(53, '---\r\ntitle: Ajouter un stop SMS\r\ndescription: >\r\n---\r\n# Ajouter un numéro à la liste des stops\r\nCette requête permet d’ajouter un numéro à la liste des stops.\r\n  \r\n   <div class=\"alert alert-info\">\r\nA noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ; cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme.    </div>\r\n\r\n', 'fr', 56),
(54, '---\r\ntitle: Add a stop SMS\r\ndescription: >\r\n---\r\n# Add a number to the stop list\r\nThis request allows you to add a number to the stop list.\r\n  \r\n   <div class=\"alert alert-info\">\r\nNote: The reports are received on average a few seconds after the SMS is sent; however, this delay can extend up to a maximum of 48 hours depending on the operators and the load on our platform.\r\n    </div>\r\n\r\n', 'en', 57),
(55, '---\r\ntitle: Supprimer un numéro\r\ndescription: >\r\n---\r\n# Supprimer un numéro de la liste des stops\r\nCette requête permet de supprimer un numéro à la liste des stops.\r\n  \r\n', 'fr', 58),
(56, '---\r\ntitle: Remove a number\r\ndescription: >\r\n---\r\n# Remove a number from the stop list\r\nThis request allows you to remove a number from the stop list.\r\n  \r\n', 'en', 59),
(57, '---\ntitle: Gestion des réponses\ndescription: >\n---\n', 'fr', 60),
(58, '---\r\ntitle: Response Management\r\ndescription: >\r\n---\r\n\r\n', 'en', 61),
(60, '---\r\ntitle: Activation\r\ndescription: >\r\n---\r\n# Activation et création des sous-comptes\r\n## Demande d’activation des sous-comptes\r\n> SMS Partner vous donne la possibilité de créer des sous-comptes. Ainsi vous pouvez gérer un nombre illimité de sous-compte à partir de votre compte principal.\r\n\r\n**Activation des sous-comptes**\r\n\r\nPour activer cette fonctionnalité, il suffit de contacter notre [équipe technique.](https://www.smspartner.fr/contact).\r\n\r\n## Création des sous-comptes\r\n> Pour créer des sous-compte à partir de votre compte maitre, il y a deux solutions possibles.\r\n\r\n* Par l’API SMS : voir  [la page création de sous-compte](sous_comptep2.md).\r\n\r\n* Par fichier Excel: à partir du fichier à télécharger: Fichier modèle [Fichier modéle](https://view.officeapps.live.com/op/view.aspx?src=https%3A%2F%2Fmy.smspartner.fr%2Fsubaccount_model.xls&wdOrigin=BROWSELINK). <br> Il vous suffit de nous le renvoyer pour que nous l’intégrions à votre compte.\r\n* Par inscription manuelle: en créant manuellement les sous comptes depuis [la plateforme SMSPartner](https://my.smspartner.fr/connexion).\r\n\r\n\r\n\r\n', 'fr', 62),
(61, '---\r\ntitle: Activation\r\ndescription: >\r\n---\r\n# Activation and creation of sub-accounts\r\n## Request for sub-account activation\r\n> SMS Partner gives you the ability to create sub-accounts. This way, you can manage an unlimited number of sub-accounts from your main account.\r\n\r\n**Sub-account activation**\r\n\r\nTo activate this feature, simply contact our [technical team.](https://www.smspartner.fr/contact).\r\n\r\n## Creation of sub-accounts\r\n> There are two possible solutions to create sub-accounts from your master account.\r\n\r\n* Through the SMS API: see [the sub-account creation page](sous_comptep2.md).\r\n\r\n* Via Excel file: using the downloadable file: Template file [Template file](https://view.officeapps.live.com/op/view.aspx?src=https%3A%2F%2Fmy.smspartner.fr%2Fsubaccount_model.xls&wdOrigin=BROWSELINK). <br> You just need to send it back to us for us to integrate it into your account.\r\n* By manual registration: by manually creating sub-accounts from [the SMSPartner platform](https://my.smspartner.fr/connexion).\r\n\r\n\r\n\r\n', 'en', 63),
(62, '---\r\ntitle: Création de sous-compte\r\ndescription: >\r\n---\r\n# Création de sous-compte\r\n', 'fr', 64),
(63, '---\r\ntitle: Sub-account Creation\r\ndescription: >\r\n---\r\n# Sub-account Creation\r\n', 'en', 65),
(64, '---\r\ntitle: Supprimer un sous-compte\r\ndescription: >\r\n---\r\n# Supprimer un sous-compte\r\n', 'fr', 66),
(65, '---\r\ntitle: Delete a sub-account\r\ndescription: >\r\n---\r\n# Delete a sub-account\r\n', 'en', 67),
(66, '---\r\ntitle: Liste des sous-comptes\r\ndescription: >\r\n---\r\n# Récupération des sous comptes\r\n> Pour récupérer, les informations des sous comptes, il y a deux méthodes : <li> Par la plateforme: </li>  En vous rendant sur votre [tableau de bord](https://my.smspartner.fr/connexion).ou vous aurez accès à l’ensemble des sous comptes associés à votre compte. <br> <li> Par l’API: </li> En effectuant une requête sur l’url ci-dessous.\r\n', 'fr', 68),
(67, '---\r\ntitle: List of sub-accounts\r\ndescription: >\r\n---\r\n# Retrieving sub-accounts\r\n> To retrieve sub-account information, there are two methods: <li> Through the platform: </li> By going to your [dashboard](https://my.smspartner.fr/connexion) where you will have access to all sub-accounts associated with your account. <br> <li> Through the API: </li> By making a request to the URL below.\r\n', 'en', 69),
(68, '---\r\ntitle: Ajouter des crédits\r\ndescription: >\r\n---\r\n# Ajout de crédit\r\n> Depuis votre compte, il vous est possible d’ajouter des crédits sur vos sous comptes. Les crédits seront débités de votre compte principal.\r\n', 'fr', 70),
(69, '---\r\ntitle: Add Credits\r\ndescription: >\r\n---\r\n# Adding Credit\r\n> From your account, you can add credits to your sub-accounts. The credits will be debited from your main account.\r\n', 'en', 71),
(70, '---\r\ntitle: Supprimer des crédits\r\ndescription: >\r\n---\r\n# Suppression de crédit\r\n> Depuis votre compte, il vous est possible de supprimer des crédits de vos sous comptes. Les crédits seront ajoutés à votre compte principal.\r\n', 'fr', 73),
(71, '---\r\ntitle: Remove Credits\r\ndescription: >\r\n---\r\n# Removing Credit\r\n> From your account, you can remove credits from your sub-accounts. The credits will be added to your main account.\r\n', 'en', 74),
(72, '---\r\ntitle: Gérer le transfert d’appel\r\ndescription: >\r\n---\r\n# Transfert d’appel\r\n', 'fr', 75),
(73, '---\r\ntitle: Manage Call Forwarding\r\ndescription: >\r\n---\r\n# Call Forwarding\r\n', 'en', 76),
(74, '---\r\ntitle: Code d’erreurs\r\ndescription: >\r\n---\r\n# Codes erreurs API\r\nVous trouverez ci dessous, les codes erreurs pour l’API SMS :\r\n\r\n* Envoi de SMS\r\n* Annulation des SMS\r\n* Récupération des statuts\r\n* Liste des statuts\r\n* Codes erreurs des statuts\r\n* Vérification des numéros\r\n* Location\r\n* Sous-compte\r\n* Envoi de messages vocaux / VMS\r\n* Envoi des mails\r\n \r\n', 'fr', 77),
(75, '---\r\ntitle: Error Codes\r\ndescription: >\r\n---\r\n# API Error Codes\r\nBelow you will find the error codes for the SMS API:\r\n\r\n* Sending SMS\r\n* SMS Cancellation\r\n* Status Retrieval\r\n* Status List\r\n* Status Error Codes\r\n* Number Verification\r\n* Location\r\n* Sub-account\r\n* Sending Voice Messages / VMS\r\n* Sending Emails\r\n\r\n\r\n', 'en', 78),
(76, '---\r\ntitle: Introduction\r\ndescription: >\r\n---\r\n# Introduction à l’API VOICE Partner\r\n\r\n\r\nL’API permet d’effectuer des envois de [SMS Vocaux](sms-vocaux/sms_vocauxp1.md ) ou d’effectuer des [dépôts de messages directement sur répondeur.](message-vocal/message_vocalp3.md) Ces fonctionnalités sont proposées à partir de la plateforme [Voice Partner](https://www.voicepartner.fr/). Depuis le site, vous avez un accès immédiat à notre API gratuite : elle vous permet d’intégrer facilement nos services de voix à votre site web, logiciel ou application CRM.\r\n\r\n', 'fr', 79),
(77, '---\r\ntitle: Introduction\r\ndescription: >\r\n---\r\n# Introduction to the VOICE Partner API\r\n\r\n\r\nThe API allows for the sending of [Voice SMS](sms-vocaux/sms_vocauxp1.md) or for making [deposits of messages directly on the answering machine.](message-vocal/message_vocalp3.md) These features are offered through the [Voice Partner](https://www.voicepartner.fr/) platform. From the website, you have immediate access to our free API: it allows you to easily integrate our voice services into your website, software, or CRM application.\r\n\r\n', 'en', 80),
(78, '---\r\ntitle: Crédits voix\r\ndescription: >\r\n---\r\n# Crédits voix\r\nCette requête est utilisée pour récupérer votre crédit disponible de messages vocaux, dépôt de messages.\r\n\r\nLimite: 5 requêtes par minute\r\n', 'fr', 81),
(79, '---\r\ntitle: Voice Credits\r\ndescription: >\r\n---\r\n# Voice Credits\r\nThis request is used to retrieve your available credit for voice messages, message deposits.\r\n\r\nLimit: 5 requests per minute\r\n', 'en', 82);

-- --------------------------------------------------------

--
-- Structure de la table `parametre`
--

CREATE TABLE `parametre` (
  `id` int(11) NOT NULL,
  `textcode` text NOT NULL,
  `langue` varchar(50) NOT NULL,
  `id_chemin` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Déchargement des données de la table `parametre`
--

INSERT INTO `parametre` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(1, '## Paramètres\r\n\r\nChaque demande d\'API prend en charge au minimum les paramètres suivants :\r\n\r\n| Paramètre | Description |\r\n|:-----------|:-------------|\r\n| `apiKey`  | Clé API de votre compte. Vous l\'obtenez dans votre [compte SMS Partner](https://my.smspartner.fr/connexion). |\r\n\r\n### Paramètres optionnels\r\n\r\n| Paramètre | Description |\r\n|:-----------|:-------------|\r\n| `_format` | Format de la réponse. Vous avez le choix entre `json` et `xml`. Par défaut, le format de réponse est `json`. Exemple : `https://api.smspartner.fr/v1/me?apiKey=YOUR_API_KEY&_format=json` |\r\n\r\n| __format_ | _Content-Type_ |\r\n| :--------------- |:---------------|\r\n| json  | application/json |\r\n| xml | application/xml |\r\n', 'fr', 1),
(2, '## Paramètres\n\nChaque demande d\'API prend en charge les paramètres suivants :\n\n| Paramètre  | Description |\n| :--------------- |:---------------|\n| **apiKey** | Clé API de votre compte. Vous l\'obtenez dans votre compte SMS Partner. |\n\n### Paramètres optionnels\n\n| Paramètre  | Description |\n| :--------------- |:---------------|\n| **_format** | Format de la réponse. Vous pouvez choisir entre JSON ou XML. Par défaut, le format de réponse est JSON. |', 'fr', 2),
(5, '## Parameters\n\nEach API request supports at least the following parameters:\n\n| Parameters | Description |\n|:-----------|:-------------|\n| `apiKey`  | CAPI Key of your account. You get it in your  [SMS Partner account.](https://my.smspartner.fr/connexion). |\n\n### Optional parameters\n\n| Paramèters | Description |\n|:-----------|:-------------|\n| `_format` | Format of the response. You can choose between `json` and `xml`. By default, the response format is `json`. Example : `https://api.smspartner.fr/v1/me?apiKey=YOUR_API_KEY&_format=json` |\n\n\n| __format_ | _Content-Type_ |\n| :--------------- |:---------------|\n| json  | application/json |\n| xml | application/xml |', 'en', 5),
(6, '## Configuraciones\n\nCada solicitud de API es compatible con al menos los siguientes parámetros :\n\n| Parámetro | Descripción |\n|:-----------|:-------------|\n| `apiKey`  |  Clave de API de su cuenta. Usted lo consigue en su  [Cuenta de SMS Partner](https://my.smspartner.fr/connexion). |\n\n### Ajustes opcionales\n\n| Parámetro | Descripción |\n|:-----------|:-------------|\n| `_format` | Formato de la respuesta. Usted tiene la posibilidad de elegir entre `json` y `xml`. Por defecto, el formato de respuesta es  `json`. Ejemplo : `https://api.smspartner.fr/v1/me?apiKey=YOUR_API_KEY&_format=json` |\n\n\n| __format_ | _Content-Type_ |\n| :--------------- |:---------------|\n| json  | application/json |\n| xml | application/xml |', 'es', 6),
(7, '## Impostazioni\n\nOgni richiesta API supporta almeno i seguenti parametri:\n\n| Parametro | Descrizione |\n|:-----------|:-------------|\n| `apiKey`  | Chiave API del tuo account. Puoi ottenerla nel tuo [account SMS Partner](https://my.smspartner.fr/connexion). |\n\n### Parametri opzionali\n\n| Parametro | Descrizione |\n|:-----------|:-------------|\n| `_format` | Formato della risposta. Hai la scelta tra `json` e `xml`. Di default, il formato di risposta è `json`. Esempio: `https://api.smspartner.fr/v1/me?apiKey=YOUR_API_KEY&_format=json` |\n\n| __format_ | _Content-Type_ |\n| :--------------- |:---------------|\n| json  | application/json |\n| xml | application/xml |', 'it', 7),
(8, '## Configurações\n\nCada solicitação da API suporta pelo menos os seguintes parâmetros:\n\n| Parâmetro | Descrição |\n|:-----------|:-------------|\n| `apiKey`  | Chave API da sua conta. Você pode obtê-la na sua [conta da SMS Partner](https://my.smspartner.fr/connexion). |\n\n### Parâmetros opcionais\n\n| Parâmetro | Descrição |\n|:-----------|:-------------|\n| `_format` | Formato da resposta. Você pode escolher entre `json` e `xml`. Por padrão, o formato de resposta é `json`. Exemplo: `https://api.smspartner.fr/v1/me?apiKey=YOUR_API_KEY&_format=json` |\n\n| __formato_ | _Content-Type_ |\n| :--------------- |:---------------|\n| json  | application/json |\n| xml | application/xml |', 'pt', 8),
(9, '## Parameters\r\n\r\nEach API request supports the following parameters:\r\n\r\n| Parameter  | Description |\r\n| :--------------- |:---------------|\r\n| **apiKey** | Your account\'s API key obtained from SMS Partner dashboard. |\r\n\r\n### Optional Parameters\r\n\r\n| Parameter  | Description |\r\n| :--------------- |:---------------|\r\n| **_format** | Response format. Choose between JSON or XML. JSON is the default format. |\r\n', 'en', 9),
(10, '## Configuraciones\n\nCada solicitud de API es compatible con los siguientes parámetros :\n\n| Parámetro | Descripción |\n| :--------------- |:---------------|\n| **apiKey** | **Clave de API de su cuenta. Usted lo consigue en su Cuenta de SMS Partner.**|\n\n### Ajustes opcionales\n\n| Parámetro | Descripción |\n| :--------------- |:---------------|\n| **_format** | Formato de la respuesta. Se puede elegir entre JSON o XML. Por defecto, el formato de respuesta es JSON. |\n', 'es', 10),
(11, '## Impostazioni\r\n\r\nOgni richiesta API supporta i seguenti parametri :\r\n\r\n| Parametro | Descrizione |\r\n| :--------------- |:---------------|\r\n| **apiKey** | Chiave API per il tuo account. Lo ricevi nel tuo account PartnerSMS.|\r\n\r\n### Paramètres optionnels\r\n\r\n| Parametro | Descrizione |\r\n| :--------------- |:---------------|\r\n| **_format** | Formato della risposta. È possibile scegliere tra json o xml. Per impostazione predefinita, il formato di risposta è JSON.|\r\n', 'it', 11),
(13, '### Configurações\r\n\r\nCada solicitação de API suporta os seguintes parâmetros :\r\n\r\n| Parâmetro | Descrição |\r\n| :--------------- |:---------------|\r\n| **apiKey** | Chave de API da sua conta. Você obtê-lo em seu parceiro de conta SMS. |\r\n\r\n### Configurações opcionais\r\n\r\n| Parâmetro | Descrição |\r\n| :--------------- |:---------------|\r\n| **_formato** | Formato de resposta. Você pode escolher entre json ou xml. Por padrão, o formato de resposta é JSON.. |\r\n\r\n', 'pt', 12),
(14, '## Paramètres\r\n\r\n   <div class=\"alert alert-info\">\r\n        La plateforme n\'envoie pas de SMS commerciaux entre <strong> 20h et 8h en semaine et les dimanches et jours fériés </strong>(restriction légale). Si un message SMS est envoyé, le message est <strong>en pause jusqu\'au prochain jour ouvrable à 8h </strong>. Ne vous envoyez pas de SMS commerciaux? contactez-nous pour désactiver cette restriction : <a href=\"mailto:help@smspartner.fr\">help@smspartner.fr</a>\r\n    </div>\r\n           \r\n| Paramètre       | Description |\r\n|-----------------|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **phoneNumbers** | Numéros de téléphone des destinataires. Pour l\'envoi de plusieurs SMS les numéros doivent être séparés par des virgules. **La limite d\'envoi sur une seule requête est de 500 numéros.** <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul> |\r\n| **message**     | Contenu du SMS. **160 caractères** maximum par SMS (au-delà, il vous sera décompté un SMS supplémentaire par tranche de 153 caractères). <br>Attention, certains caractères spéciaux et accents sont remplacés lors de l\'envoi : <a href=\"#\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">Voir la liste</a> <br>Le caractère ” doit obligatoirement être échappé (”) pour que le texte du SMS soit valide. Dans le cas contraire une erreur 400 sera retournée. <br>Le tag `:br:` permet de faire un saut de ligne. **Attention le saut de ligne compte pour deux caractères.** <br>**La mention STOP SMS est obligatoire pour les SMS à caractères commerciaux (voir le paramètre `isStopSms` ci-dessous).** <br>Si c\'est un compte marketing la mention STOP SMS est ajoutée automatiquement. |\r\n\r\n## Paramètres optionnels\r\n\r\n| Paramètre               | Description |\r\n|-------------------------|-------------|\r\n| **gamme**               | Gamme du SMS, sa valeur doit être : <ul><li>1 pour les SMS Premium</li><li>2 pour les SMS Low Cost</li></ul> ⚠️ Si ce paramètre est omis, les SMS seront envoyés dans la gamme Premium |\r\n| **sender**              | Nom d’émetteur du message. Si l’émetteur est laissé vide, vos SMS seront acheminés avec un shortcode opérateur en guise d’expéditeur (exemple : 36xxx). <br>⚠️ Le nombre de caractères pour le nom de l\'émetteur est compris **entre 3 et 11 inclus** et ne doit pas comporter de caractères spéciaux. <br>Certains modèles de téléphone n\'interprètent pas les caractères spéciaux dans le nom d\'émetteur. |\r\n| **tag**                 | Chaîne de caractères de 20 caractères maximum sans espace(s) et vous permettant de tagger vos envois. |\r\n| **scheduledDeliveryDate** | Date d\'envoi du SMS, au format `dd/MM/yyyy`, à définir uniquement si vous souhaitez que les SMS soient envoyés en différé. |\r\n| **time**                | Heure d\'envoi du SMS (format 0-24), obligatoire si `scheduledDeliveryDate` est définie. |\r\n| **minute**              | Minute d\'envoi du SMS (format 0-55, par intervalle de cinq minutes), obligatoire si `scheduledDeliveryDate` est définie. |\r\n| **urlResponse**         | URL de retour des Réponses (ex: https://www.monurlderesponse). |\r\n| **urlDlr**              | URL de retour des Accusé de réception (ex: https://www.monurldlr). |\r\n| **isStopSms**           | Gamme Premium : 1 pour ajouter la mention STOP à la fin du SMS (obligatoire pour les SMS commerciaux).<br> ⚠️ Gamme ÉCO : Ce paramètre n’est pas applicable pour cette gamme, il est nécessaire d\'ajouter manuellement la mention NoPub=STOP pour les SMS commerciaux. |\r\n| **isUnicode**           | Si 1 : Active le mode Unicode, le nombre de caractères maximum par SMS sera de 70. <br>**Important :** le SMS unicode doit être activé sur votre compte par un administrateur pour que les envois soient disponibles. Merci de prendre contact avec le service technique pour l’activation de cette fonctionnalité.<br> [Voir la liste](https://www.smspartner.fr/blog/liste-complete-des-emoticones-a-copier-coller). |\r\n| **sandbox**             | Pour tester l’envoi de SMS, vous pouvez utiliser le paramètre `sandbox:` **1** pour activer le mode bac à sable. ⚠️ Aucun SMS ne sera envoyé, et il n’y aura aucun débit sur votre compte. Ces SMS seront supprimés de vos listes d’envois automatiquement tous les jours.|\r\n| **_format**             | Format de la réponse. Vous pouvez choisir entre `JSON` ou `XML`. Par défaut, le format de réponse est `JSON` |\r\n\r\n\r\n    ', 'fr', 13),
(15, '## Parameters\r\n\r\n   <div class=\"alert alert-info\">\r\n        The platform does not send commercial SMS between <strong>8 PM and 8 AM on weekdays and on Sundays and public holidays</strong> (legal restriction). If an SMS message is sent, the message is <strong>paused until the next business day at 8 AM</strong>. Not sending commercial SMS? Contact us to disable this restriction: <a href=\"mailto:help@smspartner.fr\">help@smspartner.fr</a>\r\n    </div>\r\n           \r\n| Parameter       | Description |\r\n|-----------------|-------------| \r\n| **apiKey**      | API key of your account. You will obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **phoneNumbers** | Phone numbers of recipients. For sending multiple SMS, numbers must be separated by commas. **The sending limit on a single request is 500 numbers.** <ul><li>In national format (0600000000) and international format (+33600000000) for French numbers.</li><li>In international format (+496xxxxxxxx) for numbers outside France.</li></ul> |\r\n| **message**     | SMS content. **160 characters** maximum per SMS (beyond that, you will be charged an additional SMS per 153 characters). <br>Attention, some special characters and accents are replaced during sending: <a href=\"#\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">See the list</a> <br>The character \" must be escaped (\") for the SMS text to be valid. Otherwise, a 400 error will be returned. <br>The `:br:` tag allows for a line break. **Attention, the line break counts as two characters.** <br>**The STOP SMS mention is mandatory for commercial SMS (see the `isStopSms` parameter below).** <br>If it\'s a marketing account, the STOP SMS mention is added automatically. |\r\n\r\n## Optional Parameters\r\n\r\n| Parameter               | Description |\r\n|-------------------------|-------------|\r\n| **range**               | SMS range, its value must be: <ul><li>1 for Premium SMS</li><li>2 for Low Cost SMS</li></ul> ⚠️ If this parameter is omitted, SMS will be sent in the Premium range |\r\n| **sender**              | Name of the message sender. If the sender is left empty, your SMS will be sent with an operator shortcode as the sender (e.g., 36xxx). <br>⚠️ The number of characters for the sender name is **between 3 and 11 inclusive** and must not contain special characters. <br>Some phone models do not interpret special characters in the sender name. |\r\n| **tag**                 | String of up to 20 characters without spaces, allowing you to tag your sends. |\r\n| **scheduledDeliveryDate** | SMS sending date, in the format `dd/MM/yyyy`, to be defined only if you want the SMS to be sent later. |\r\n| **time**                | SMS sending time (format 0-24), mandatory if `scheduledDeliveryDate` is defined. |\r\n| **minute**              | SMS sending minute (format 0-55, in five-minute intervals), mandatory if `scheduledDeliveryDate` is defined. |\r\n| **urlResponse**         | Response URL (e.g., https://www.myresponseurl). |\r\n| **urlDlr**              | Delivery Receipt URL (e.g., https://www.mydlrurl). |\r\n| **isStopSms**           | Premium range: 1 to add the STOP mention at the end of the SMS (mandatory for commercial SMS).<br> ⚠️ ECO range: This parameter is not applicable for this range, you need to manually add the NoPub=STOP mention for commercial SMS. |\r\n| **isUnicode**           | If 1: Activates Unicode mode, the maximum number of characters per SMS will be 70. <br>**Important:** Unicode SMS must be activated on your account by an administrator for sending to be available. Please contact technical support for the activation of this feature.<br> [See the list](https://www.smspartner.fr/blog/liste-complete-des-emoticones-a-copier-coller). |\r\n| **sandbox**             | To test SMS sending, you can use the `sandbox:` parameter **1** to activate sandbox mode. ⚠️ No SMS will be sent, and there will be no charge on your account. These SMS will be automatically deleted from your send lists every day. |\r\n| **_format**             | Response format. You can choose between `JSON` or `XML`. By default, the response format is `JSON`. |\r\n\r\n\r\n    ', 'en', 14),
(16, '## Paramètres\n\n   <div class=\"alert alert-info\">\n        La plateforme n\\\'envoie pas de SMS commerciaux entre <strong> 20h et 8h en semaine et les dimanches et jours fériés </strong>(restriction légale). Si un message SMS est envoyé, le message est <strong>en pause jusqu\\\'au prochain jour ouvrable à 8h </strong>. Ne vous envoyez pas de SMS commerciaux? contactez-nous pour désactiver cette restriction : <a href=\"mailto:help@smspartner.fr\">help@smspartner.fr</a>\n    </div>\n           \n| Paramètre       | Description |\n|:-----------------:|-------------| \n| **apiKey**      | Clé API de votre compte. Vous l\\\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\n| **SMSList** | **phoneNumber:** <br> Numéros de téléphone des destinataires. Pour l\\\'envoi de plusieurs SMS les numéros doivent être séparés par des virgules. **La limite d\\\'envoi sur une seule requête est de 500 numéros.** <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul>**message** <br> Contenu du SMS. **160 caractères** maximum par SMS (au-delà, il vous sera décompté un SMS supplémentaire par tranche de 153 caractères). <br>Attention, certains caractères spéciaux et accents sont remplacés lors de l\\\'envoi : <a href=\"#\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">Voir la liste</a> <br> <br>Le caractère ” doit obligatoirement être échappé (”) pour que le texte du SMS soit valide. Dans le cas contraire une erreur 400 sera retournée. <br>Le tag `:br:` permet de faire un saut de ligne. **Attention le saut de ligne compte pour deux caractères.** <br>**La mention STOP SMS est obligatoire pour les SMS à caractères commerciaux (voir le paramètre `isStopSms` ci-dessous).** <br>Si c\\\'est un compte marketing la mention STOP SMS est ajoutée automatiquement. |\n\n## Paramètres optionnels\n\n| Paramètre               | Description |\n|:-------------------------:|-------------|\n| **gamme**               | Gamme du SMS, sa valeur doit être : <ul><li>1 pour les SMS Premium</li><li>2 pour les SMS Low Cost</li></ul> ⚠️ Si ce paramètre est omis, les SMS seront envoyés dans la gamme Premium |\n| **sender**              | Nom d’émetteur du message. Si l’émetteur est laissé vide, vos SMS seront acheminés avec un shortcode opérateur en guise d’expéditeur (exemple : 36xxx). <br>⚠️ Le nombre de caractères pour le nom de l\\\'émetteur est compris **entre 3 et 11 inclus** et ne doit pas comporter de caractères spéciaux. <br>Certains modèles de téléphone n\\\'interprètent pas les caractères spéciaux dans le nom d\\\'émetteur. |\n| **tag**                 | Chaîne de caractères de 20 caractères maximum sans espace(s) et vous permettant de tagger vos envois. |\n| **scheduledDeliveryDate** | Date d\\\'envoi du SMS, au format `dd/MM/yyyy`, à définir uniquement si vous souhaitez que les SMS soient envoyés en différé. |\n| **time**                | Heure d\\\'envoi du SMS (format 0-24), obligatoire si `scheduledDeliveryDate` est définie. |\n| **minute**              | Minute d\\\'envoi du SMS (format 0-55, par intervalle de cinq minutes), obligatoire si `scheduledDeliveryDate` est définie. |\n| **urlResponse**         | URL de retour des Réponses (ex: https://www.monurlderesponse). |\n| **urlDlr**              | URL de retour des Accusé de réception (ex: https://www.monurldlr). |\n| **isStopSms**           | Gamme Premium : 1 pour ajouter la mention STOP à la fin du SMS (obligatoire pour les SMS commerciaux).<br> ⚠️ Gamme ÉCO : Ce paramètre n’est pas applicable pour cette gamme, il est nécessaire d\\\'ajouter manuellement la mention NoPub=STOP pour les SMS commerciaux. |\n| **isUnicode**           | Si 1 : Active le mode Unicode, le nombre de caractères maximum par SMS sera de 70. <br>**Important :** le SMS unicode doit être activé sur votre compte par un administrateur pour que les envois soient disponibles. Merci de prendre contact avec le service technique pour l’activation de cette fonctionnalité. <br> [Voir la liste](https://www.smspartner.fr/blog/liste-complete-des-emoticones-a-copier-coller). |\n| **sandbox**             | Pour tester l’envoi de SMS, vous pouvez utiliser le paramètre `sandbox:` **1** pour activer le mode bac à sable. ⚠️ Aucun SMS ne sera envoyé, et il n’y aura aucun débit sur votre compte. Ces SMS seront supprimés de vos listes d’envois automatiquement tous les jours.|\n| **_format**             | Format de la réponse. Vous pouvez choisir entre `JSON` ou `XML`. Par défaut, le format de réponse est `JSON` |\n', 'fr', 17),
(17, '## Parameters\n\n   <div class=\"alert alert-info\">\n        The platform does not send commercial SMS between <strong>8 PM and 8 AM on weekdays and on Sundays and public holidays</strong> (legal restriction). If an SMS message is sent, the message is <strong>paused until the next business day at 8 AM</strong>. Not sending commercial SMS? Contact us to disable this restriction: <a href=\"mailto:help@smspartner.fr\">help@smspartner.fr</a>\n    </div>\n           \n| Parameter       | Description |\n|:-----------------:|-------------| \n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\n| **SMSList** | **phoneNumber:** <br> Phone numbers of recipients. For sending multiple SMS, numbers should be separated by commas. **The sending limit on a single request is 500 numbers.** <ul><li>In national format (0600000000) and international format (+33600000000) for French numbers.</li><li>In international format (+496xxxxxxxx) for numbers outside France.</li></ul>**message** <br> SMS content. Maximum of **160 characters** per SMS (beyond that, you will be charged an additional SMS per 153 characters). <br>Attention, some special characters and accents are replaced during sending: <a href=\"#\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">View the list</a> <br> <br>The character \" must be escaped (\") for the SMS text to be valid. Otherwise, a 400 error will be returned. <br>The `:br:` tag allows for a line break. **Attention, the line break counts as two characters.** <br>**The STOP SMS mention is mandatory for commercial SMS (see the `isStopSms` parameter below).** <br>If it\'s a marketing account, the STOP SMS mention is added automatically. |\n\n## Optional Parameters\n\n| Parameter               | Description |\n|:-------------------------:|-------------|\n| **gamme**               | SMS range, its value must be: <ul><li>1 for Premium SMS</li><li>2 for Low Cost SMS</li></ul> ⚠️ If this parameter is omitted, SMS will be sent in the Premium range |\n| **sender**              | Sender name of the message. If the sender is left empty, your SMS will be routed with an operator shortcode as the sender (example: 36xxx). <br>⚠️ The number of characters for the sender name is **between 3 and 11 inclusive** and must not contain special characters. <br>Some phone models do not interpret special characters in the sender name. |\n| **tag**                 | String of maximum 20 characters without space(s) allowing you to tag your sendings. |\n| **scheduledDeliveryDate** | SMS sending date, in `dd/MM/yyyy` format, to be defined only if you want the SMS to be sent at a later time. |\n| **time**                | SMS sending time (0-24 format), mandatory if `scheduledDeliveryDate` is defined. |\n| **minute**              | SMS sending minute (0-55 format, in five-minute intervals), mandatory if `scheduledDeliveryDate` is defined. |\n| **urlResponse**         | Response return URL (e.g., https://www.myresponseurl.com). |\n| **urlDlr**              | Delivery receipt return URL (e.g., https://www.mydlrurl.com). |\n| **isStopSms**           | Premium range: 1 to add the STOP mention at the end of the SMS (mandatory for commercial SMS).<br> ⚠️ ECO range: This parameter is not applicable for this range, it is necessary to manually add the NoPub=STOP mention for commercial SMS. |\n| **isUnicode**           | If 1: Activates Unicode mode, the maximum number of characters per SMS will be 70. <br>**Important:** Unicode SMS must be activated on your account by an administrator for sendings to be available. Please contact the technical service for the activation of this feature. <br> [View the list](https://www.smspartner.fr/blog/liste-complete-des-emoticones-a-copier-coller). |\n| **sandbox**             | To test SMS sending, you can use the parameter `sandbox:` **1** to activate sandbox mode. ⚠️ No SMS will be sent, and there will be no debit on your account. These SMS will be automatically deleted from your sending lists every day.|\n| **_format**             | Response format. You can choose between `JSON` or `XML`. By default, the response format is `JSON` |\n\n    ', 'en', 18),
(18, '## Paramètres\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n|**to**|Numéros de téléphone du destinataire. <br> <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul>| \r\n|**from**|	Votre numéro virtuel au format internationnal ( 336xxxxxxxx )| \r\n| **message** | Contenu du SMS. **160 caractères** maximum par SMS (au-delà, il vous sera décompté un SMS supplémentaire par tranche de 153 caractères). <br>Attention, certains caractères spéciaux et accents sont remplacés lors de l\'envoi : <a href=\"#\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">Voir la liste</a> <br> <br>Le caractère ” doit obligatoirement être échappé (”) pour que le texte du SMS soit valide. Dans le cas contraire une erreur 400 sera retournée. <br>Le tag `:br:` permet de faire un saut de ligne. **Attention le saut de ligne compte pour deux caractères.** <br>**La mention STOP SMS est obligatoire pour les SMS à caractères commerciaux**. |\r\n\r\n## Paramètres optionnels\r\n\r\n| Paramètre               | Description |\r\n|:-------------------------:|-------------|\r\n| **tag**                 | Chaîne de caractères de 20 caractères maximum sans espace(s) et vous permettant de tagger vos envois. |\r\n| **urlResponse**         | URL de retour des Réponses (ex: https://www.monurlderesponse). |\r\n| **urlDlr**              | URL de retour des Accusé de réception (ex: https://www.monurldlr). |\r\n| **sandbox**             | Pour tester l’envoi de SMS, vous pouvez utiliser le paramètre `sandbox:` **1** pour activer le mode bac à sable. ⚠️ Aucun SMS ne sera envoyé, et il n’y aura aucun débit sur votre compte. <br> Ces SMS seront supprimés de vos listes d’envois automatiquement tous les jours.|\r\n| **_format**             | Format de la réponse. Vous pouvez choisir entre `JSON` ou `XML`. Par défaut, le format de réponse est `JSON` |', 'fr', 19),
(19, '## Parameters\r\n\r\n| Parameter       | Description |\r\n|:----------------:|-------------| \r\n| **apiKey**      | Your account\'s API key. You can obtain it from your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **to**          | Recipient\'s phone numbers. <br> <ul><li>In national format (0600000000) and international format (+33600000000) for French numbers.</li><li>In international format (+496xxxxxxxx) for non-French numbers.</li></ul> |\r\n| **from**        | Your virtual number in international format (336xxxxxxxx). | \r\n| **message**     | SMS content. **160 characters** maximum per SMS (beyond this, an additional SMS will be deducted for every 153 characters). <br>Note, some special characters and accents are replaced during sending: <a href=\"#\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">See the list</a> <br> <br>The character ” must be escaped (”) for the SMS text to be valid. Otherwise, a 400 error will be returned. <br>The tag `:br:` allows for a line break. **Note that the line break counts as two characters.** <br>**The mention STOP SMS is mandatory for commercial SMS.** |\r\n\r\n## Optional Parameters\r\n\r\n| Parameter               | Description |\r\n|:-----------------------:|-------------|\r\n| **tag**                 | A string of up to 20 characters without spaces, allowing you to tag your sends. |\r\n| **urlResponse**         | URL for response returns (e.g., https://www.myresponseurl). |\r\n| **urlDlr**              | URL for delivery receipt returns (e.g., https://www.mydlrurl). |\r\n| **sandbox**             | To test SMS sending, you can use the `sandbox:` parameter **1** to activate sandbox mode. ⚠️ No SMS will be sent, and there will be no charge to your account. <br> These SMS will be automatically deleted from your send lists every day. |\r\n| **_format**             | Response format. You can choose between `JSON` or `XML`. By default, the response format is `JSON`. |\r\n', 'en', 20),
(20, '## Paramètres\r\n\r\n   <div class=\"alert alert-info\">\r\n        La plateforme n\'envoie pas de SMS commerciaux entre <strong> 20h et 8h en semaine et les dimanches et jours fériés </strong>(restriction légale). Si un message SMS est envoyé, le message est <strong>en pause jusqu\'au prochain jour ouvrable à 8h </strong>. Ne vous envoyez pas de SMS commerciaux? contactez-nous pour désactiver cette restriction : <a href=\"mailto:help@smspartner.fr\">help@smspartner.fr</a>\r\n    </div>\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **phoneNumbers** | Numéros de téléphone des destinataires. Pour l\'envoi de plusieurs SMS les numéros doivent être séparés par des virgules. **La limite d\'envoi sur une seule requête est de 500 numéros.** <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul> |\r\n| **sondageIdent**      | Identifiant du sondage. |\r\n## Paramètres optionnels\r\n\r\n| Paramètre               | Description |\r\n|:-------------------------:|-------------|\r\n| **tag**                 | Chaîne de caractères de 20 caractères maximum sans espace(s) et vous permettant de tagger vos envois. |\r\n| **scheduledDeliveryDate** | Date d\'envoi du SMS, au format `dd/MM/yyyy`, à définir uniquement si vous souhaitez que les SMS soient envoyés en différé. |\r\n| **time**                | Heure d\'envoi du SMS (format 0-24), obligatoire si `scheduledDeliveryDate` est définie. |\r\n| **minute**              | Minute d\'envoi du SMS (format 0-55, par intervalle de cinq minutes), obligatoire si `scheduledDeliveryDate` est définie. |\r\n| **_format**             | Format de la réponse. Vous pouvez choisir entre `JSON` ou `XML`. Par défaut, le format de réponse est `JSON` |\r\n\r\n', 'fr', 21),
(21, '\r\n## Parameters\r\n\r\n   <div class=\"alert alert-info\">\r\n        The platform does not send commercial SMS between <strong>8 PM and 8 AM on weekdays and on Sundays and public holidays</strong> (legal restriction). If an SMS message is sent, the message is <strong>paused until the next business day at 8 AM</strong>. Not sending commercial SMS? Contact us to disable this restriction: <a href=\"mailto:help@smspartner.fr\">help@smspartner.fr</a>\r\n    </div>\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it from your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **phoneNumbers** | Phone numbers of recipients. For sending multiple SMS, numbers should be separated by commas. **The sending limit on a single request is 500 numbers.** <ul><li>In national format (0600000000) and international format (+33600000000) for French numbers.</li><li>In international format (+496xxxxxxxx) for non-French numbers.</li></ul> |\r\n| **sondageIdent**      | Survey identifier. |\r\n\r\n## Optional Parameters\r\n\r\n| Parameter               | Description |\r\n|:-------------------------:|-------------|\r\n| **tag**                 | String of maximum 20 characters without space(s) allowing you to tag your sends. |\r\n| **scheduledDeliveryDate** | SMS sending date, in `dd/MM/yyyy` format, to be defined only if you want the SMS to be sent at a later time. |\r\n| **time**                | SMS sending time (0-24 format), mandatory if `scheduledDeliveryDate` is defined. |\r\n| **minute**              | SMS sending minute (0-55 format, in five-minute intervals), mandatory if `scheduledDeliveryDate` is defined. |\r\n| **_format**             | Response format. You can choose between `JSON` or `XML`. By default, the response format is `JSON` |\r\n\r\n', 'en', 22),
(22, '## Paramètres\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **messageId** | ID du message. <br> Il se trouve dans [la réponse lors de l’envoi d’un SMS](envois_smsp1.md).|\r\n\r\n### Paramètres optionnels\r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **_format**             | Format de la réponse. Vous pouvez choisir entre `JSON` ou `XML`. Par défaut, le format de réponse est `JSON` |\r\n\r\n<div class=\"alert alert-info\">\r\n       Attention !! Il n’est pas possible d’annuler l’envoi d’un SMS<strong> moins de 5 minutes avant son envoi </strong>.\r\n    </div>\r\n\r\n', 'fr', 23),
(23, '\r\n## Parameters\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it from your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **messageId** | Message ID. <br> It can be found in [the response when sending an SMS](envois_smsp1.md).|\r\n\r\n### Optional Parameters\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **_format**             | Response format. You can choose between `JSON` or `XML`. By default, the response format is `JSON` |\r\n\r\n<div class=\"alert alert-info\">\r\n       Attention!! It is not possible to cancel an SMS sending <strong>less than 5 minutes before its scheduled time</strong>.\r\n    </div>\r\n\r\n\r\n', 'en', 24),
(24, '### Paramètres\n           \n| Paramètre       | Description |\n|:-----------------:|-------------| \n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\n| **messageId** | ID du message. <br> Il se trouve dans [la réponse lors de l’envoi d’un SMS](../envoyer-des-sms/envois_smsp1.md).|\n| **phoneNumber** | Numéro de téléphone portable du destinataire..|\n\n### Paramètres optionnels\n| Paramètre       | Description |\n|:-----------------:|-------------| \n| **_format**             | Format de la réponse. Par défaut, le format de réponse est `JSON` |\n\n', 'fr', 25),
(25, '### Parameters\n           \n| Parameter       | Description |\n|:-----------------:|-------------| \n| **apiKey**      | API key of your account. You can obtain it from your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\n| **messageId** | Message ID. <br> It can be found in [the response when sending an SMS](../envoyer-des-sms/envois_smsp1.md).|\n| **phoneNumber** | Recipient\'s mobile phone number.|\n\n### Optional Parameters\n| Parameter       | Description |\n|:-----------------:|-------------| \n| **_format**             | Response format. By default, the response format is `JSON` |\n\n', 'en', 26),
(26, '## Paramètres\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **messageId** | ID du message. <br> Il se trouve dans [la réponse lors de l’envoi d’un SMS](../envoyer-des-sms/envois_smsp1.md).|\r\n', 'fr', 29),
(27, '### Parameters\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it from your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **messageId** | Message ID. <br> It can be found in [the response when sending an SMS](../envoyer-des-sms/envois_smsp1.md).|\r\n', 'en', 30),
(28, '## Paramètres\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n|**SMSStatus_List**   | **phoneNumber:** <br> Numéros de téléphone des destinataires. <br> Ils doivent être:<br> – au format international (+336xxxxxxxx). <br> **messageId**: <br> ID du message. <br> Il se trouve dans [la réponse lors de l’envoi d’un SMS](../envoyer-des-sms/envois_smsp1.md).|\r\n<br>\r\n<div class=\"alert alert-info\">\r\nAttention !! Il n’est pas possible d’annuler l’envoi d’un SMS <strong>moins de 5 minutes avant son envoi</strong>.\r\n    </div>', 'fr', 27),
(29, '## Parameters\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it from your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n|**SMSStatus_List**   | **phoneNumber:** <br> Recipients\' phone numbers. <br> They must be:<br> – in international format (+336xxxxxxxx). <br> **messageId**: <br> Message ID. <br> It can be found in [the response when sending an SMS](../envoyer-des-sms/envois_smsp1.md).|\r\n<br>\r\n<div class=\"alert alert-info\">\r\nAttention!! It is not possible to cancel an SMS sending <strong>less than 5 minutes before its scheduled time</strong>.\r\n    </div>', 'en', 28),
(30, '## Paramètres\n\nChaque demande d’API prend en charge les paramètres suivants :\n           \n| Paramètre       | Description |\n|:-----------------:|-------------| \n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\n|**tag**   | Le tag du message.|\n', 'fr', 31),
(31, '## Parameters\n\nEach API request supports the following parameters:  \n         \n| Parameter       | Description |\n|:-----------------:|-------------| \n| **apiKey**      | API key of your account. You can obtain it from your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\n|**tag**   | The message tag.|\n', 'en', 32),
(32, '## Paramètres\r\n\r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n\r\nUne limite de 5 requêtes par minute est appliquée.\r\n          \r\n| Paramètre **interval**   | Description |\r\n|:-----------------:|-------------| \r\n| **last_month**      | Le mois précédent. |\r\n|**last_twelve_months**|Numéros de téléphone du destinataire. <br> <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul>| \r\n|**from**| 12 derniers mois| \r\n| **custom** | dans ce cas les dates de début (from) et de fin (to) sont requises. |\r\n\r\n\r\n', 'fr', 33),
(33, '## Parameters\r\n\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it from your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n\r\nA limit of 5 requests per minute is applied.\r\n          \r\n| Parameter **interval**   | Description |\r\n|:-----------------:|-------------| \r\n| **last_month**      | The previous month. |\r\n|**last_twelve_months**| Last 12 months | \r\n|**from**| Start date for custom interval | \r\n| **custom** | In this case, start date (from) and end date (to) are required. |\r\n\r\n', 'en', 34),
(34, '\r\n## Paramètres\r\n\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **name** | Nom du compte |\r\n\r\n', 'fr', 36),
(35, '\r\n## Parameters\r\n\r\nEach API request supports the following parameters:\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it from your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **name** | Group name |\r\n\r\n', 'en', 37),
(36, '\n## Paramètres\n\nChaque demande d’API prend en charge les paramètres suivants :\n           \n| Paramètre       | Description |\n|:-----------------:|-------------| \n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\n| **phoneNumber** |Numéros de téléphone du contact. <br> Pour l’envoi de plusieurs SMS les numéros doivent être séparés par des virgules. <br> Ils peuvent être :  <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul>| \n\n## Paramètres optionnels\n| Paramètre       | Description |\n|:-----------------:|-------------| \n| **firstname** | Prénom (32 caractères maximum). |\n|**lastname** 	| Nom (32 caractères maximum).| \n|**date** 	| Date au format YYYY-MM-DD. Pourra être utilisé pour des envois automatique (ex: anniversaire )| \n|**url** 	| Url , elle doit commencer par http:// ou https://| \n|**custom1** 	| Champ personnalisé 1.| \n|**custom2** 	| Champ personnalisé 2.| \n|**custom3** 	| Champ personnalisé 3.| \n|**custom4** 	| Champ personnalisé 4.| \n', 'fr', 38),
(37, '\r\n## Parameters\r\n\r\nEach API request supports the following parameters:\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You will get it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **phoneNumber** | Contact phone numbers. <br> For sending multiple SMS, numbers should be separated by commas. <br> They can be:  <ul><li>In national format (0600000000) and international (+33600000000) for French numbers.</li><li>In international format (+496xxxxxxxx), for non-French numbers.</li></ul>| \r\n\r\n## Optional Parameters\r\n\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **firstname** | First name (32 characters maximum). |\r\n|**lastname** 	| Last name (32 characters maximum).| \r\n|**date** 	| Date in YYYY-MM-DD format. Can be used for automatic sending (e.g., birthday).| \r\n|**url** 	| URL, it must start with http:// or https://| \r\n|**custom1** 	| Custom field 1.| \r\n|**custom2** 	| Custom field 2.| \r\n|**custom3** 	| Custom field 3.| \r\n|**custom4** 	| Custom field 4.| \r\n', 'en', 39),
(38, '\r\n## Paramètres\r\n\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **groupId** |Identifiant du groupe| \r\n\r\n\r\n', 'fr', 40),
(39, '\r\n## Parameters\r\n\r\nEach API request supports the following parameters:\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **groupId** |Group identifier| \r\n\r\n\r\n', 'en', 41),
(40, '\r\n## Paramètres\r\n\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **contactId** |Identifiant du contact à modifier| \r\n| **phoneNumber** |Numéros de téléphone du contact. <br> Pour l’envoi de plusieurs SMS les numéros doivent être séparés par des virgules. <br> Ils peuvent être :  <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul>| \r\n| **firstname** | Prénom (32 caractères maximum). |\r\n|**lastname** 	| Nom (32 caractères maximum).| \r\n|**date** 	| Date au format YYYY-MM-DD. Pourra être utilisé pour des envois automatique (ex: anniversaire )| \r\n|**url** 	| Url , elle doit commencer par http:// ou https://| \r\n|**custom1** 	| Champ personnalisé 1.| \r\n|**custom2** 	| Champ personnalisé 2.| \r\n|**custom3** 	| Champ personnalisé 3.| \r\n|**custom4** 	| Champ personnalisé 4.| \r\n', 'fr', 44),
(41, '\r\n## Parameters\r\n\r\nEach API request supports the following parameters:\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You will get it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **contactId** |Identifier of the contact to modify| \r\n| **phoneNumber** |Contact\'s phone numbers. <br> For sending multiple SMS, the numbers must be separated by commas. <br> They can be:  <ul><li>In national format (0600000000) and international format (+33600000000) for French numbers.</li><li>In international format (+496xxxxxxxx), for numbers outside France.</li></ul>| \r\n| **firstname** | First name (32 characters maximum). |\r\n|**lastname** 	| Last name (32 characters maximum).| \r\n|**date** 	| Date in YYYY-MM-DD format. Can be used for automatic sending (e.g., birthday)| \r\n|**url** 	| URL, it must start with http:// or https://| \r\n|**custom1** 	| Custom field 1.| \r\n|**custom2** 	| Custom field 2.| \r\n|**custom3** 	| Custom field 3.| \r\n|**custom4** 	| Custom field 4.| \r\n', 'en', 45),
(42, '\r\n## Paramètres\r\n\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **contactId** |Identifiant du contact | \r\n\r\n', 'fr', 46);
INSERT INTO `parametre` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(43, '\r\n## Parameters\r\n\r\nEach API request supports the following parameters:\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **contactId** | Contact identifier | \r\n', 'en', 47),
(44, '\r\n## Paramètres\r\n\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n\r\n\r\n', 'fr', 48),
(45, '\r\n## Parameters\r\n\r\nEach API request supports the following parameters:\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n', 'en', 49),
(46, '\r\n## Paramètres\r\n\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **apiKey**      |Identifiant du contact. |\r\n\r\n', 'fr', 52),
(47, '\r\n## Parameters\r\n\r\nEach API request supports the following parameters:\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **contactId**      | Contact identifier. |\r\n\r\n', 'en', 53),
(48, '## Paramètres\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n\r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n\r\n## Paramètres optionnels\r\n\r\n| Paramètre   | Description |\r\n|:-----------------:|-------------| \r\n| **_format**      | Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |\r\n\r\n', 'fr', 54),
(49, '## Parameters\r\nEach API request supports the following parameters:\r\n\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n\r\n## Optional Parameters\r\n\r\n| Parameter   | Description |\r\n|:-----------------:|-------------| \r\n| **_format**      | Response format. You can choose between <strong> JSON</strong> or <strong> XML </strong>. By default, the response format is <strong> JSON. </strong> |\r\n\r\n', 'en', 55),
(50, '## Paramètres\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n\r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **phoneNumber** |Numéros de mobile à ajouter. <br> Ils peuvent être :  <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul>| \r\n## Paramètres optionnels\r\n\r\n| Paramètre   | Description |\r\n|:-----------------:|-------------| \r\n| **_format**      | Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |\r\n\r\n', 'fr', 56),
(51, '## Parameters\r\nEach API request supports the following parameters:\r\n\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **phoneNumber** |Mobile numbers to add. <br> They can be:  <ul><li>In national format (0600000000) and international format (+33600000000) for French numbers.</li><li>In international format (+496xxxxxxxx), for numbers outside France.</li></ul>| \r\n## Optional Parameters\r\n\r\n| Parameter   | Description |\r\n|:-----------------:|-------------| \r\n| **_format**      | Response format. You can choose between <strong> JSON</strong> or <strong> XML </strong>. By default, the response format is <strong> JSON. </strong> |\r\n\r\n', 'en', 57),
(52, '## Paramètres\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n\r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **id** |	ID du numéro à supprimer.. <br> Il se trouve dans [la réponse lors de la récupération de la liste des stops.](../envoyer-des-sms/envois_smsp4.md).|\r\n## Paramètres optionnels\r\n\r\n| Paramètre   | Description |\r\n|:-----------------:|-------------| \r\n| **_format**      | Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |\r\n\r\n', 'fr', 58),
(53, '## Parameters\r\nEach API request supports the following parameters:\r\n\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **id** |	ID of the number to delete. <br> It can be found in [the response when retrieving the list of stops.](../envoyer-des-sms/envois_smsp4.md).|\r\n## Optional Parameters\r\n\r\n| Parameter   | Description |\r\n|:-----------------:|-------------| \r\n| **_format**      | Response format. You can choose between <strong> JSON</strong> or <strong> XML </strong>. By default, the response format is <strong> JSON. </strong> |\r\n\r\n', 'en', 59),
(54, '## Paramètres\nChaque demande d’API prend en charge les paramètres suivants :\n\n| Paramètre       | Description |\n|:-----------------:|-------------| \n| **apiKey**      | Clé API de votre compte. Vous l\\\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\n| **type** |	Type de sous-compte : ce choix est définitif, il ne sera plus possible de le modifier  <br> **simple:** <br> <ul> <li>Le sous compte ne recevra aucun email ni SMS.</li> <li> Aucun numéros de téléphone demandé. </li> <li>L’achat n’est pas permis. </li></ul>. <br> **advanced :** <ul> <li>Un email valide est demandé. </li> <li>Le processus d’inscription est identique à celui d’un compte standard. </li> <li>Un numéro de téléphone mobile sera demandé à l’inscription.</li></ul>|\n| **parameters**   | **Sous-compte advanced** <br><br> <u> **email** :</u> Email valide du titulaire du compte <br> <u> **isBuyer** :</u> Si **isBuyer=1** le sous-compte pourra acheter ces propres SMS. <br> <u>**creditToAttribute (optionnel) :** </u> Crédit en euros ajouté au sous-compte lors de la création. Ce crédit sera déduit du compte principal. <br> <u> **title (optionnel) : ** </u> Nom du sous-compte. <br> <u> **firstname (optionnel) :** </u> Prénom du titulaire du sous-compte.<br> <u> **lastname (optionnel):** </u> Nom du titulaire du sous-compte. <br> <br><br>  **Sous-compte simple** <br><br> <u> **email** :</u> Email valide du titulaire du compte <br> <u>**creditToAttribute (optionnel) :** </u> Crédit en euros ajouté au sous-compte lors de la création. Ce crédit sera déduit du compte principal. <br> <u> **title (optionnel) : ** </u>  Nom du sous-compte. <br> <u> **firstname (optionnel) :** </u><br> Prénom du titulaire du sous-compte.<br> <u> **lastname (optionnel):** </u> Nom du titulaire du sous-compte. <br> <br>  |\n\n## Paramètres optionnels\n_format : Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |\n\n\n', 'fr', 64),
(55, '## Parameters\r\nEach API request supports the following parameters:\r\n\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API Key of your account. You will get it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **type** |	Type of sub-account: this choice is final, it cannot be changed later  <br> **simple:** <br> <ul> <li>The sub-account will not receive any emails or SMS.</li> <li> No phone number required. </li> <li>Purchase is not allowed. </li></ul>. <br> **advanced :** <ul> <li>A valid email is required. </li> <li>The registration process is the same as for a standard account. </li> <li>A mobile phone number will be required upon registration.</li></ul>|\r\n| **parameters**   | **Advanced sub-account** <br><br> <u> **email** :</u> Valid email of the account holder <br> <u> **isBuyer** :</u> If **isBuyer=1** the sub-account will be able to purchase its own SMS. <br> <u>**creditToAttribute (optional) :** </u> Credit in euros added to the sub-account upon creation. This credit will be deducted from the main account. <br> <u> **title (optional) : ** </u> Name of the sub-account. <br> <u> **firstname (optional) :** </u> First name of the sub-account holder.<br> <u> **lastname (optional):** </u> Last name of the sub-account holder. <br> <br><br>  **Simple sub-account** <br><br> <u> **email** :</u> Valid email of the account holder <br> <u>**creditToAttribute (optional) :** </u> Credit in euros added to the sub-account upon creation. This credit will be deducted from the main account. <br> <u> **title (optional) : ** </u>  Name of the sub-account. <br> <u> **firstname (optional) :** </u><br> First name of the sub-account holder.<br> <u> **lastname (optional):** </u> Last name of the sub-account holder. <br> <br>  |\r\n## Optional Parameters\r\n_format : Response format. You can choose between <strong> JSON</strong> or <strong> XML </strong>. By default, the response format is <strong> JSON. </strong> |\r\n\r\n\r\n', 'en', 65),
(56, '\r\n## Paramètres\r\n\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **token**      |Identifiant du contact. |\r\n\r\n', 'fr', 66),
(57, '\r\n## Parameters\r\n\r\nEach API request supports the following parameters:\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **token**      | Contact identifier. |\r\n\r\n', 'en', 67),
(58, '## Paramètres\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n\r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **page** |		Le numéro de la page, il y a 20 résultats par page. <br> Si ce paramètre est omis, la page 1 sera retourné.|\r\n\r\n## Paramètres optionnels\r\n_format : Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |\r\n\r\n\r\n', 'fr', 68),
(59, '## Parameters\r\nEach API request supports the following parameters:\r\n\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **page** |		The page number, there are 20 results per page. <br> If this parameter is omitted, page 1 will be returned.|\r\n\r\n## Optional parameters\r\n_format : Response format. You can choose between <strong>JSON</strong> or <strong>XML</strong>. By default, the response format is <strong>JSON.</strong> |\r\n\r\n', 'en', 69),
(60, '## Paramètres\nChaque demande d’API prend en charge les paramètres suivants :\n\n| Paramètre       | Description |\n|:-----------------:|-------------| \n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\n| **credit** |Nombre de crédit en Euro à ajouter au sous-compte.|\n| **tokenSubaccount**   |Identifiant du sous compte. |\n## Paramètres optionnels\n_format : Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |\n\n\n', 'fr', 70),
(61, '## Parameters\r\nEach API request supports the following parameters:\r\n\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **credit** |Amount of credit in Euros to add to the sub-account.|\r\n| **tokenSubaccount**   |Identifier of the sub-account. |\r\n## Optional parameters\r\n_format : Response format. You can choose between <strong>JSON</strong> or <strong>XML</strong>. By default, the response format is <strong>JSON.</strong> \r\n\r\n', 'en', 71),
(62, '## Paramètres\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n\r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **credit** |Nombre de crédit en Euro à ajouter au sous-compte.|\r\n| **tokenSubaccount**   |Identifiant du sous compte. |\r\n## Paramètres optionnels\r\n_format : Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |\r\n\r\n\r\n', 'fr', 73),
(63, '## Parameters\r\nEach API request supports the following parameters:\r\n\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **credit** |Amount of credit in Euros to remove from the sub-account.|\r\n| **tokenSubaccount**   |Identifier of the sub-account. |\r\n## Optional parameters\r\n_format : Response format. You can choose between <strong>JSON</strong> or <strong>XML</strong>. By default, the response format is <strong>JSON.</strong> |\r\n\r\n', 'en', 74),
(64, '\r\n## Paramètres\r\n\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n           \r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte SMS Partner</a>. |\r\n| **number**      |Numéro virtuel |\r\n| **type**      |Type de transfert: <br> 0 => Désactivé <br> 1 => Transfert d’appel <br> 2 => Messagerie|\r\n| **param**      |Si type = 0 laisser vide <br> Si type = 1 ajouter le numéro du transfert. <br> Si type = 2 ajouter l’email qui sera notifié d’un nouveau message |\r\n\r\n', 'fr', 75),
(65, '\r\n## Parameters\r\n\r\nEach API request supports the following parameters:\r\n           \r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | API key of your account. You can obtain it in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS Partner account</a>. |\r\n| **number**      |Virtual number |\r\n| **type**      |Type of forwarding: <br> 0 => Disabled <br> 1 => Call forwarding <br> 2 => Voicemail|\r\n| **param**      |If type = 0 leave empty <br> If type = 1 add the forwarding number. <br> If type = 2 add the email that will be notified of a new message |\r\n\r\n', 'en', 76),
(66, '## Paramètres\r\n\r\nChaque demande d’API prend en charge les paramètres suivants :\r\n\r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Clé API de votre compte. Vous l\'obtiendrez dans votre <a href=\"https://www.voicepartner.fr\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">compte Voice Partner</a>. |\r\n\r\n## Paramètres optionnels\r\n| Paramètre       | Description |\r\n|:-----------------:|-------------| \r\n| **_format**      | Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |\r\n\r\n\r\n', 'fr', 81),
(67, '## Parameters\r\n\r\nEach API request supports the following parameters:\r\n\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **apiKey**      | Your account API key. You will obtain it in your <a href=\"https://www.voicepartner.fr\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">Voice Partner account</a>. |\r\n\r\n## Optional Parameters\r\n| Parameter       | Description |\r\n|:-----------------:|-------------| \r\n| **_format**      | Response format. You can choose between <strong> JSON</strong> or <strong> XML </strong>. By default, the response format is <strong> JSON. </strong> |\r\n\r\n', 'en', 82);

-- --------------------------------------------------------

--
-- Structure de la table `requete_reponse`
--

CREATE TABLE `requete_reponse` (
  `id` int(11) NOT NULL,
  `textcode` text NOT NULL,
  `langue` varchar(50) NOT NULL,
  `id_chemin` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Déchargement des données de la table `requete_reponse`
--

INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(1, '#### JSON\n\n```json\nPOST /v1/send HTTP/1.1\nHost: api.smspartner.fr\nContent-Type: application/json\n\n{\n    \"apiKey\": \"API_KEY\",\n    \"phoneNumbers\": \"+33600000000\",\n    \"message\": \"Hello world\"\n}\n```\n\n## Requêtes\nToutes les demandes de l’API doivent être envoyées à http://api.smspartner.fr/v1/commande, commande est l’appel API que vous souhaitez exécuter, avec les paramètres inclus dans **le body POST**  ou **l’URL (GET)**.', 'fr', 1),
(2, '\n## Requête\nExemple de requête :\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n// Prepare data for GET request\n$data = \'apiKey=YOUR_API_KEY\';\n\n$curl = curl_init();\ncurl_setopt($curl, CURLOPT_URL, \'https://api.smspartner.fr/v1/me?\' . $data);\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($curl, CURLOPT_TIMEOUT, 10);\n\n$result = curl_exec($curl);\ncurl_close($curl);\n\n// Process your response here\necho $result;\n?&gt;\n    </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\ncURL\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #check credits\n    Dim url As String\n    url = base_url & \"me\" & \"?apiKey=\" & apiKey\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_balance(self):\n		url = URL + \"/me?apiKey=\" + API_KEY\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-curl\">\n    curl -H \"Content-Type: application/json\" -X GET  https://api.smspartner.fr/v1/me?apiKey=xxx\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n// Préparer les données pour la requête GET\nlet data = \'apiKey=YOUR API KEY\';\nlet url = \'https://api.smspartner.fr/v1/me?\' + data;\n\nhttps.get(url, (res) => {\n  let data = \';\n\n  // Un morceau de données a été reçu.\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  // La totalité de la réponse a été reçue. Imprimer le résultat.\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  // Un message d\'erreur sera imprimé en cas d\'erreur.\n  console.log(\"Erreur: \" + err.message);\n});\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class CreditsSms {\n    public static void main(String[] args) {\n        try {\n            String apiKey = \"your_api_key\";\n            String url = \"https://api.smspartner.fr/v1/me?apiKey=\" + apiKey;\n\n            URL obj = new URL(url);\n            HttpURLConnection con = (HttpURLConnection) obj.openConnection();\n            con.setRequestMethod(\"GET\");\n\n            int responseCode = con.getResponseCode();\n\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));\n                String inputLine;\n                StringBuilder response = new StringBuilder();\n\n                while ((inputLine = in.readLine()) != null) {\n                    response.append(inputLine);\n                }\n                in.close();\n\n                System.out.println(response.toString());\n            } else {\n                System.out.println(\"GET request failed. Response Code: \" + responseCode);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n \nstruct Credits: View {\n    @State private var credit: String = \"Loading...\"\n \n    var body: some View {\n        VStack {\n            Text(\"Mon crédit\")\n                .font(.title)\n                .padding()\n \n            Text(credit)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: getCredit)\n    }\n \n    func getCredit() {\n        let apiKey = \"Your-api-key\"\n        let urlString = \"https://api.smspartner.fr/v1/me?apiKey=(apiKey)\"\n \n        guard let url = URL(string: urlString) else {\n            print(\"URL inválida\")\n            return\n        }\n \n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let result = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    credit = result ?? \"Error\"\n                }\n            }\n        }\n \n        task.resume()\n    }\n}\n \nstruct CreditView_Previews: PreviewProvider {\n    static var previews: some View {\n        Credits()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"fmt\"\n	\"io/ioutil\"\n	\"net/http\"\n)\n\nfunc main() {\n	apiKey := \"your_api_key\"\n	url := \"https://api.smspartner.fr/v1/me?apiKey=\" + apiKey\n\n	response, err := http.Get(url)\n	if err != nil {\n		fmt.Println(\"GET request failed:\", err)\n		return\n	}\n	defer response.Body.Close()\n\n	if response.StatusCode == http.StatusOK {\n		bodyBytes, err := ioutil.ReadAll(response.Body)\n		if err != nil {\n			fmt.Println(\"Failed to read response body:\", err)\n			return\n		}\n		fmt.Println(string(bodyBytes))\n	} else {\n		fmt.Println(\"GET request failed. Response Code:\", response.StatusCode)\n	}\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"YOUR_API_KEY\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/me?apiKey={apiKey}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Réponses\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"user\": {\n        \"username\": \"example@email.com\",\n        \"firstname\": \"John\",\n        \"lastname\": \"Doe\"\n    },\n    \"credits\": {\n        \"creditSms\": 269082,\n        \"creditSmsECO\": 444570,\n        \"creditHlr\": 2045023,\n        \"toSend\": 0,\n        \"balance\": \"10225.119\",\n        \"currency\": \"EUR\"\n    }\n}\n```\n### XML\n```xml\n    <pre><code class=\"language-xml\">\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<result>\n    <entry>true</entry>\n    <entry>200</entry>\n    <entry>\n        <username>exemple@email.com</username>\n        <firstname>John</firstname>\n        <lastname>Doe</lastname>\n    </entry>\n    <entry>\n        <entry>269070</entry>\n        <entry>444551</entry>\n        <entry>2044937</entry>\n        <entry>0</entry>\n        <entry>\n            <![CDATA[10224.688]]>\n        </entry>\n        <entry>\n            <![CDATA[EUR]]>\n        </entry>\n        <entry>\n            <![CDATA[10224.688]]>\n        </entry>\n    </entry>\n</result>\n  ```', 'fr', 2),
(3, '#### JSON\n\n```json\nPOST /v1/send HTTP/1.1\nHost: api.smspartner.fr\nContent-Type: application/json\n\n{\n    \"apiKey\": \"API_KEY\",\n    \"phoneNumbers\": \"+33600000000\",\n    \"message\": \"Hello world\"\n}\n```\n\n## Requests\nAll API requests must be sent to http://api.smspartner.fr/v1/ordered, ordered is the API call you want to execute, with the parameters included in the body POST or URL (GET).', 'en', 5),
(4, 'Puede, por ejemplo, dar formato al mensaje SMS a formatos JSON , pero debe introducir la cabecera Content-Type en consecuencia :\n\n#### JSON\n\n```json\nPOST /v1/send HTTP/1.1\nHost: api.smspartner.fr\nContent-Type: application/json\n\n{\n    \"apiKey\": \"API_KEY\",\n    \"phoneNumbers\": \"+33600000000\",\n    \"message\": \"Hello world\"\n}\n```\n\n## Solicitudes\nTodas las solicitudes de API deben enviarse a http://api.smspartner.fr/v1/orden, orden el mando es la llamada a la API que desea ejecutar con los parámetros incluidos en el body POST o la dirección URL (GET ).\n', 'es', 6),
(5, '#### JSON\n\n```json\nPOST /v1/send HTTP/1.1\nHost: api.smspartner.fr\nContent-Type: application/json\n{\n    \"apiKey\": \"API_KEY\",\n    \"phoneNumbers\": \"+33600000000\",\n    \"message\": \"Hello world\"\n}\n```\n\n## Richieste\nTutte le richieste API devono essere inviate a http://api.smspartner.fr/v1/commande, commande esè la chiamata API che si vuole eseguire, con i parametri inclusi nel ** body POST**  o **l’URL (GET)**.', 'it', 7),
(6, '\'#### JSON\nVocê pode, por exemplo, formatar a mensagem SMS para JSON ou XML formatos, mas você deve inserir o cabeçalho Content-Type em conformidade :\n\n```json\nPOST /v1/send HTTP/1.1\nHost: api.smspartner.fr\nContent-Type: application/json\n\n{\n    \"apiKey\": \"API_KEY\",\n    \"phoneNumbers\": \"+33600000000\",\n    \"message\": \"Hello world\"\n}\n\n```\n\n## Petição\nTodas as solicitações da API devem ser enviadas para http://api.smspartner.fr/v1/commande, onde commande é a chamada de API que você deseja executar, com os parâmetros incluídos no corpo do POST ou URL (GET).\n', 'pt', 8),
(7, '## Request\n\nSample request:\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n// Prepare data for GET request\n$data = \'apiKey=YOUR_API_KEY\';\n\n$curl = curl_init();\ncurl_setopt($curl, CURLOPT_URL, \'https://api.smspartner.fr/v1/me?\' . $data);\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($curl, CURLOPT_TIMEOUT, 10);\n\n$result = curl_exec($curl);\ncurl_close($curl);\n\n// Process your response here\necho $result;\n?&gt;\n    </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\ncURL\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #check credits\n    Dim url As String\n    url = base_url & \"me\" & \"?apiKey=\" & apiKey\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_balance(self):\n		url = URL + \"/me?apiKey=\" + API_KEY\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-curl\">\n    curl -H \"Content-Type: application/json\" -X GET  https://api.smspartner.fr/v1/me?apiKey=xxx\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n// Préparer les données pour la requête GET\nlet data = \'apiKey=YOUR API KEY\';\nlet url = \'https://api.smspartner.fr/v1/me?\' + data;\n\nhttps.get(url, (res) => {\n  let data = \';\n\n  // Un morceau de données a été reçu.\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  // La totalité de la réponse a été reçue. Imprimer le résultat.\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  // Un message d\'erreur sera imprimé en cas d\'erreur.\n  console.log(\"Erreur: \" + err.message);\n});\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class CreditsSms {\n    public static void main(String[] args) {\n        try {\n            String apiKey = \"your_api_key\";\n            String url = \"https://api.smspartner.fr/v1/me?apiKey=\" + apiKey;\n\n            URL obj = new URL(url);\n            HttpURLConnection con = (HttpURLConnection) obj.openConnection();\n            con.setRequestMethod(\"GET\");\n\n            int responseCode = con.getResponseCode();\n\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));\n                String inputLine;\n                StringBuilder response = new StringBuilder();\n\n                while ((inputLine = in.readLine()) != null) {\n                    response.append(inputLine);\n                }\n                in.close();\n\n                System.out.println(response.toString());\n            } else {\n                System.out.println(\"GET request failed. Response Code: \" + responseCode);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n \nstruct Credits: View {\n    @State private var credit: String = \"Loading...\"\n \n    var body: some View {\n        VStack {\n            Text(\"Mon crédit\")\n                .font(.title)\n                .padding()\n \n            Text(credit)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: getCredit)\n    }\n \n    func getCredit() {\n        let apiKey = \"Your-api-key\"\n        let urlString = \"https://api.smspartner.fr/v1/me?apiKey=(apiKey)\"\n \n        guard let url = URL(string: urlString) else {\n            print(\"URL inválida\")\n            return\n        }\n \n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let result = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    credit = result ?? \"Error\"\n                }\n            }\n        }\n \n        task.resume()\n    }\n}\n \nstruct CreditView_Previews: PreviewProvider {\n    static var previews: some View {\n        Credits()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"fmt\"\n	\"io/ioutil\"\n	\"net/http\"\n)\n\nfunc main() {\n	apiKey := \"your_api_key\"\n	url := \"https://api.smspartner.fr/v1/me?apiKey=\" + apiKey\n\n	response, err := http.Get(url)\n	if err != nil {\n		fmt.Println(\"GET request failed:\", err)\n		return\n	}\n	defer response.Body.Close()\n\n	if response.StatusCode == http.StatusOK {\n		bodyBytes, err := ioutil.ReadAll(response.Body)\n		if err != nil {\n			fmt.Println(\"Failed to read response body:\", err)\n			return\n		}\n		fmt.Println(string(bodyBytes))\n	} else {\n		fmt.Println(\"GET request failed. Response Code:\", response.StatusCode)\n	}\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"YOUR_API_KEY\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/me?apiKey={apiKey}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Responses\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"user\": {\n        \"username\": \"example@email.com\",\n        \"firstname\": \"John\",\n        \"lastname\": \"Doe\"\n    },\n    \"credits\": {\n        \"creditSms\": 269082,\n        \"creditSmsECO\": 444570,\n        \"creditHlr\": 2045023,\n        \"toSend\": 0,\n        \"balance\": \"10225.119\",\n        \"currency\": \"EUR\"\n    }\n}\n```\n### XML\n```xml\n    <pre><code class=\"language-xml\">\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<result>\n    <entry>true</entry>\n    <entry>200</entry>\n    <entry>\n        <username>exemple@email.com</username>\n        <firstname>John</firstname>\n        <lastname>Doe</lastname>\n    </entry>\n    <entry>\n        <entry>269070</entry>\n        <entry>444551</entry>\n        <entry>2044937</entry>\n        <entry>0</entry>\n        <entry>\n            <![CDATA[10224.688]]>\n        </entry>\n        <entry>\n            <![CDATA[EUR]]>\n        </entry>\n        <entry>\n            <![CDATA[10224.688]]>\n        </entry>\n    </entry>\n</result>\n  ```\n', 'en', 9),
(8, '## Solicitud\nEjemplos de solicitudes:\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n// Prepare data for GET request\n$data = \'apiKey=YOUR_API_KEY\';\n\n$curl = curl_init();\ncurl_setopt($curl, CURLOPT_URL, \'https://api.smspartner.fr/v1/me?\' . $data);\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($curl, CURLOPT_TIMEOUT, 10);\n\n$result = curl_exec($curl);\ncurl_close($curl);\n\n// Process your response here\necho $result;\n?&gt;\n    </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\ncURL\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #check credits\n    Dim url As String\n    url = base_url & \"me\" & \"?apiKey=\" & apiKey\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_balance(self):\n		url = URL + \"/me?apiKey=\" + API_KEY\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-curl\">\n    curl -H \"Content-Type: application/json\" -X GET  https://api.smspartner.fr/v1/me?apiKey=xxx\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n// Préparer les données pour la requête GET\nlet data = \'apiKey=YOUR API KEY\';\nlet url = \'https://api.smspartner.fr/v1/me?\' + data;\n\nhttps.get(url, (res) => {\n  let data = \';\n\n  // Un morceau de données a été reçu.\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  // La totalité de la réponse a été reçue. Imprimer le résultat.\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  // Un message d\'erreur sera imprimé en cas d\'erreur.\n  console.log(\"Erreur: \" + err.message);\n});\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class CreditsSms {\n    public static void main(String[] args) {\n        try {\n            String apiKey = \"your_api_key\";\n            String url = \"https://api.smspartner.fr/v1/me?apiKey=\" + apiKey;\n\n            URL obj = new URL(url);\n            HttpURLConnection con = (HttpURLConnection) obj.openConnection();\n            con.setRequestMethod(\"GET\");\n\n            int responseCode = con.getResponseCode();\n\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));\n                String inputLine;\n                StringBuilder response = new StringBuilder();\n\n                while ((inputLine = in.readLine()) != null) {\n                    response.append(inputLine);\n                }\n                in.close();\n\n                System.out.println(response.toString());\n            } else {\n                System.out.println(\"GET request failed. Response Code: \" + responseCode);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n \nstruct Credits: View {\n    @State private var credit: String = \"Loading...\"\n \n    var body: some View {\n        VStack {\n            Text(\"Mon crédit\")\n                .font(.title)\n                .padding()\n \n            Text(credit)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: getCredit)\n    }\n \n    func getCredit() {\n        let apiKey = \"Your-api-key\"\n        let urlString = \"https://api.smspartner.fr/v1/me?apiKey=(apiKey)\"\n \n        guard let url = URL(string: urlString) else {\n            print(\"URL inválida\")\n            return\n        }\n \n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let result = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    credit = result ?? \"Error\"\n                }\n            }\n        }\n \n        task.resume()\n    }\n}\n \nstruct CreditView_Previews: PreviewProvider {\n    static var previews: some View {\n        Credits()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"fmt\"\n	\"io/ioutil\"\n	\"net/http\"\n)\n\nfunc main() {\n	apiKey := \"your_api_key\"\n	url := \"https://api.smspartner.fr/v1/me?apiKey=\" + apiKey\n\n	response, err := http.Get(url)\n	if err != nil {\n		fmt.Println(\"GET request failed:\", err)\n		return\n	}\n	defer response.Body.Close()\n\n	if response.StatusCode == http.StatusOK {\n		bodyBytes, err := ioutil.ReadAll(response.Body)\n		if err != nil {\n			fmt.Println(\"Failed to read response body:\", err)\n			return\n		}\n		fmt.Println(string(bodyBytes))\n	} else {\n		fmt.Println(\"GET request failed. Response Code:\", response.StatusCode)\n	}\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"YOUR_API_KEY\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/me?apiKey={apiKey}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Responses\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"user\": {\n        \"username\": \"example@email.com\",\n        \"firstname\": \"John\",\n        \"lastname\": \"Doe\"\n    },\n    \"credits\": {\n        \"creditSms\": 269082,\n        \"creditSmsECO\": 444570,\n        \"creditHlr\": 2045023,\n        \"toSend\": 0,\n        \"balance\": \"10225.119\",\n        \"currency\": \"EUR\"\n    }\n}\n```\n### XML\n```xml\n    <pre><code class=\"language-xml\">\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<result>\n    <entry>true</entry>\n    <entry>200</entry>\n    <entry>\n        <username>exemple@email.com</username>\n        <firstname>John</firstname>\n        <lastname>Doe</lastname>\n    </entry>\n    <entry>\n        <entry>269070</entry>\n        <entry>444551</entry>\n        <entry>2044937</entry>\n        <entry>0</entry>\n        <entry>\n            <![CDATA[10224.688]]>\n        </entry>\n        <entry>\n            <![CDATA[EUR]]>\n        </entry>\n        <entry>\n            <![CDATA[10224.688]]>\n        </entry>\n    </entry>\n</result>\n  ```\n', 'es', 10),
(9, '## Richiesta\n\nRichiesta di campione:\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n// Prepare data for GET request\n$data = \'apiKey=YOUR_API_KEY\';\n\n$curl = curl_init();\ncurl_setopt($curl, CURLOPT_URL, \'https://api.smspartner.fr/v1/me?\' . $data);\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($curl, CURLOPT_TIMEOUT, 10);\n\n$result = curl_exec($curl);\ncurl_close($curl);\n\n// Process your response here\necho $result;\n?&gt;\n    </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\ncURL\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #check credits\n    Dim url As String\n    url = base_url & \"me\" & \"?apiKey=\" & apiKey\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_balance(self):\n		url = URL + \"/me?apiKey=\" + API_KEY\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-curl\">\n    curl -H \"Content-Type: application/json\" -X GET  https://api.smspartner.fr/v1/me?apiKey=xxx\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n// Préparer les données pour la requête GET\nlet data = \'apiKey=YOUR API KEY\';\nlet url = \'https://api.smspartner.fr/v1/me?\' + data;\n\nhttps.get(url, (res) => {\n  let data = \';\n\n  // Un morceau de données a été reçu.\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  // La totalité de la réponse a été reçue. Imprimer le résultat.\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  // Un message d\'erreur sera imprimé en cas d\'erreur.\n  console.log(\"Erreur: \" + err.message);\n});\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class CreditsSms {\n    public static void main(String[] args) {\n        try {\n            String apiKey = \"your_api_key\";\n            String url = \"https://api.smspartner.fr/v1/me?apiKey=\" + apiKey;\n\n            URL obj = new URL(url);\n            HttpURLConnection con = (HttpURLConnection) obj.openConnection();\n            con.setRequestMethod(\"GET\");\n\n            int responseCode = con.getResponseCode();\n\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));\n                String inputLine;\n                StringBuilder response = new StringBuilder();\n\n                while ((inputLine = in.readLine()) != null) {\n                    response.append(inputLine);\n                }\n                in.close();\n\n                System.out.println(response.toString());\n            } else {\n                System.out.println(\"GET request failed. Response Code: \" + responseCode);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n \nstruct Credits: View {\n    @State private var credit: String = \"Loading...\"\n \n    var body: some View {\n        VStack {\n            Text(\"Mon crédit\")\n                .font(.title)\n                .padding()\n \n            Text(credit)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: getCredit)\n    }\n \n    func getCredit() {\n        let apiKey = \"Your-api-key\"\n        let urlString = \"https://api.smspartner.fr/v1/me?apiKey=(apiKey)\"\n \n        guard let url = URL(string: urlString) else {\n            print(\"URL inválida\")\n            return\n        }\n \n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let result = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    credit = result ?? \"Error\"\n                }\n            }\n        }\n \n        task.resume()\n    }\n}\n \nstruct CreditView_Previews: PreviewProvider {\n    static var previews: some View {\n        Credits()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"fmt\"\n	\"io/ioutil\"\n	\"net/http\"\n)\n\nfunc main() {\n	apiKey := \"your_api_key\"\n	url := \"https://api.smspartner.fr/v1/me?apiKey=\" + apiKey\n\n	response, err := http.Get(url)\n	if err != nil {\n		fmt.Println(\"GET request failed:\", err)\n		return\n	}\n	defer response.Body.Close()\n\n	if response.StatusCode == http.StatusOK {\n		bodyBytes, err := ioutil.ReadAll(response.Body)\n		if err != nil {\n			fmt.Println(\"Failed to read response body:\", err)\n			return\n		}\n		fmt.Println(string(bodyBytes))\n	} else {\n		fmt.Println(\"GET request failed. Response Code:\", response.StatusCode)\n	}\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"YOUR_API_KEY\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/me?apiKey={apiKey}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Risposte\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"user\": {\n        \"username\": \"example@email.com\",\n        \"firstname\": \"John\",\n        \"lastname\": \"Doe\"\n    },\n    \"credits\": {\n        \"creditSms\": 269082,\n        \"creditSmsECO\": 444570,\n        \"creditHlr\": 2045023,\n        \"toSend\": 0,\n        \"balance\": \"10225.119\",\n        \"currency\": \"EUR\"\n    }\n}\n```\n### XML\n```xml\n    <pre><code class=\"language-xml\">\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<result>\n    <entry>true</entry>\n    <entry>200</entry>\n    <entry>\n        <username>exemple@email.com</username>\n        <firstname>John</firstname>\n        <lastname>Doe</lastname>\n    </entry>\n    <entry>\n        <entry>269070</entry>\n        <entry>444551</entry>\n        <entry>2044937</entry>\n        <entry>0</entry>\n        <entry>\n            <![CDATA[10224.688]]>\n        </entry>\n        <entry>\n            <![CDATA[EUR]]>\n        </entry>\n        <entry>\n            <![CDATA[10224.688]]>\n        </entry>\n    </entry>\n</result>\n  ```\n', 'it', 11);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(11, '## Petição\nConsulta de exemplo :\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n// Prepare data for GET request\n$data = \'apiKey=YOUR_API_KEY\';\n\n$curl = curl_init();\ncurl_setopt($curl, CURLOPT_URL, \'https://api.smspartner.fr/v1/me?\' . $data);\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($curl, CURLOPT_TIMEOUT, 10);\n\n$result = curl_exec($curl);\ncurl_close($curl);\n\n// Process your response here\necho $result;\n?&gt;\n    </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\ncURL\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #check credits\n    Dim url As String\n    url = base_url & \"me\" & \"?apiKey=\" & apiKey\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_balance(self):\n		url = URL + \"/me?apiKey=\" + API_KEY\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-curl\">\n    curl -H \"Content-Type: application/json\" -X GET  https://api.smspartner.fr/v1/me?apiKey=xxx\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n// Préparer les données pour la requête GET\nlet data = \'apiKey=YOUR API KEY\';\nlet url = \'https://api.smspartner.fr/v1/me?\' + data;\n\nhttps.get(url, (res) => {\n  let data = \';\n\n  // Un morceau de données a été reçu.\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  // La totalité de la réponse a été reçue. Imprimer le résultat.\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  // Un message d\'erreur sera imprimé en cas d\'erreur.\n  console.log(\"Erreur: \" + err.message);\n});\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class CreditsSms {\n    public static void main(String[] args) {\n        try {\n            String apiKey = \"your_api_key\";\n            String url = \"https://api.smspartner.fr/v1/me?apiKey=\" + apiKey;\n\n            URL obj = new URL(url);\n            HttpURLConnection con = (HttpURLConnection) obj.openConnection();\n            con.setRequestMethod(\"GET\");\n\n            int responseCode = con.getResponseCode();\n\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));\n                String inputLine;\n                StringBuilder response = new StringBuilder();\n\n                while ((inputLine = in.readLine()) != null) {\n                    response.append(inputLine);\n                }\n                in.close();\n\n                System.out.println(response.toString());\n            } else {\n                System.out.println(\"GET request failed. Response Code: \" + responseCode);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n \nstruct Credits: View {\n    @State private var credit: String = \"Loading...\"\n \n    var body: some View {\n        VStack {\n            Text(\"Mon crédit\")\n                .font(.title)\n                .padding()\n \n            Text(credit)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: getCredit)\n    }\n \n    func getCredit() {\n        let apiKey = \"Your-api-key\"\n        let urlString = \"https://api.smspartner.fr/v1/me?apiKey=(apiKey)\"\n \n        guard let url = URL(string: urlString) else {\n            print(\"URL inválida\")\n            return\n        }\n \n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let result = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    credit = result ?? \"Error\"\n                }\n            }\n        }\n \n        task.resume()\n    }\n}\n \nstruct CreditView_Previews: PreviewProvider {\n    static var previews: some View {\n        Credits()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"fmt\"\n	\"io/ioutil\"\n	\"net/http\"\n)\n\nfunc main() {\n	apiKey := \"your_api_key\"\n	url := \"https://api.smspartner.fr/v1/me?apiKey=\" + apiKey\n\n	response, err := http.Get(url)\n	if err != nil {\n		fmt.Println(\"GET request failed:\", err)\n		return\n	}\n	defer response.Body.Close()\n\n	if response.StatusCode == http.StatusOK {\n		bodyBytes, err := ioutil.ReadAll(response.Body)\n		if err != nil {\n			fmt.Println(\"Failed to read response body:\", err)\n			return\n		}\n		fmt.Println(string(bodyBytes))\n	} else {\n		fmt.Println(\"GET request failed. Response Code:\", response.StatusCode)\n	}\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"YOUR_API_KEY\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/me?apiKey={apiKey}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Respostas\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"user\": {\n        \"username\": \"example@email.com\",\n        \"firstname\": \"John\",\n        \"lastname\": \"Doe\"\n    },\n    \"credits\": {\n        \"creditSms\": 269082,\n        \"creditSmsECO\": 444570,\n        \"creditHlr\": 2045023,\n        \"toSend\": 0,\n        \"balance\": \"10225.119\",\n        \"currency\": \"EUR\"\n    }\n}\n```\n### XML\n```xml\n    <pre><code class=\"language-xml\">\n<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<result>\n    <entry>true</entry>\n    <entry>200</entry>\n    <entry>\n        <username>exemple@email.com</username>\n        <firstname>John</firstname>\n        <lastname>Doe</lastname>\n    </entry>\n    <entry>\n        <entry>269070</entry>\n        <entry>444551</entry>\n        <entry>2044937</entry>\n        <entry>0</entry>\n        <entry>\n            <![CDATA[10224.688]]>\n        </entry>\n        <entry>\n            <![CDATA[EUR]]>\n        </entry>\n        <entry>\n            <![CDATA[10224.688]]>\n        </entry>\n    </entry>\n</result>\n  ```\n', 'pt', 12),
(12, '## Requête\nExemple de requête :\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n// Prepare data for POST request $fields = array( \'apiKey\'=> \'YOUR API KEY\', \'phoneNumbers\'=> \'\n+336xxxxxxxx\', \'message\'=> \'This is your message\', \'sender\' => \'mycompany\',\n \'scheduledDeliveryDate\'=> \'21/10/2014\', \'time\'=> 9, \'minute\'=> 0 );\n $curl = curl_init(); \n curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/send\');\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, true); \ncurl_setopt($curl, CURLOPT_TIMEOUT, 10);\ncurl_setopt($curl, CURLOPT_POST, 1); \ncurl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields)); \n$result = curl_exec($curl); \ncurl_close($curl);\n // Process your response here echo $result;\n?&gt;\n    </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #send sms\n    url = base_url & \"send\"\n    #note : utiliser une librairie JSON en production, par exemple :\n    #https//www.nuget.org/packages/Newtonsoft.Json/\n    Dim parameters As String = String.Format(\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"phoneNumbers\"\":\"\"{1}\"\",\"\"message\"\":\"\"{2}\"\"}}\",\n        apiKey,\n        \"+33XXXXXXXXX\",\n        \"message de test\")\n    Console.Write(parameters)\n    apiRequest(\"POST\", url, parameters)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\nimport http.client\nimport json\nconn = http.client.HTTPSConnection(\"api.smspartner.fr\")\n\npayload = json.dumps({\n\"apiKey\": \"your api key smspartner\", #remplacez par votre clé API SMSPartner\n\"phoneNumbers\": \"+336xxxxxxxx\", #remplacez par votre numéro de téléphone\n\"sender\": \"Your sender name\",\n\"gamme\": 1,\n\"message\": \"Cest un message test PYTHON\", #remplacez par votre message\n \"webhookUrl\": \"https://webhook.site/TOKEN\" #remplacez TOKEN par votre token webhook.site\n})\n\nheaders = {\n\'Content-Type\': \'application/json\',\n\'Content-Length\': str(len(payload)),\n\'cache-control\': \'no-cache\'\n}\n\nconn.request(\"POST\", \"/v1/send\", payload, headers) #Une requête POST est envoyée au serveur\n SMSPartner avec le chemin d\'URL \"/v1/send\"\n\nres = conn.getresponse() #La réponse est ensuite stockée dans la variable res.\n\ndata = res.read() \n\nprint(data.decode(\"utf-8\")) #Cette ligne lit les données de la réponse HTTP.\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-curl\">\ncurl -H  \"Content-Type: application/json\" -X POST -d \'{\"apiKey\":\"xxxxx\",\"phoneNumbers\":\"xxxx\",\n\"message\":\"test\",\"sender\":\"mycompany\"}\' https://api.smspartner.fr/v1/send\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\n// Importer le module \'https\' de Node.js\nconst https = require(\'https\');\n\n// Objet JSON qui contient les informations nécessaires pour envoyer le SMS\nconst data = JSON.stringify({\n    apiKey: \'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\', //remplacez par votre clé API\n    phoneNumbers: \'+336XXXXXXXX\',  //remplacez par votre numéro de téléphone\n    sender: \'NodeJS\',\n    gamme: 1,\n    message: \"Cest un message test NodeJS\" //remplacez par votre message\n});\n\n// Définir les options pour la requête HTTP POST vers l\'API SMS Partner\nconst options = {\n  hostname: \'api.smspartner.fr\',\n  port: 443,\n  path: \'/v1/send\',\n  method: \'POST\',\n  headers: {\n    \'Content-Type\': \'application/json\',\n    \'Content-Length\': data.length,\n    \'cache-control\': \'no-cache\',\n    \'webhookUrl\': \'https://webhook.site/TOKEN\' // Webhook URL *cette ligne est optionnel*\n  }\n};\n\n// Demande HTTP POST avec les options et les données définies précédemment\nconst req = https.request(options, (res) => {\n  console.log(`statusCode: ${res.statusCode}`);\n  \n  // Afficher les données de réponse de l\'API sur la sortie standard\n  res.on(\'data\', (d) => {\n    process.stdout.write(d);\n  });\n});\n\n// Affichage en cas d\'erreur lors de l\'exécution de la requête HTTP POST\nreq.on(\'error\', (error) => {\n  console.error(error);\n});\n\n// Envoyer les données de l\'objet \'data\' à la demande\nreq.write(data);\n// Terminer la demande HTTP POST\nreq.end();\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.io.OutputStream;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.stream.Collectors;\nimport org.json.JSONObject;\n\npublic class SMSRequest {\n    public static void main(String[] args) {\n        try {\n        // Création de l\'objet URL avec l\'adresse de l\'API SMS\n            URL url = new URL(\"https://api.smspartner.fr/v1/send\");\n        // Ouverture de la connexion HTTP avec l\'API\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod(\"POST\");\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\n            conn.setDoOutput(true);\n\n        // Création de l\'objet JSON contenant les paramètres du SMS à envoyer   \n            JSONObject json = new JSONObject();\n            json.put(\"apiKey\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"); //your api key smspartner\n            json.put(\"phoneNumbers\", \"+336XXXXXXXX\"); //your phone number\n            json.put(\"virtualNumber\", \"+336XXXXXXXX\");\n            json.put(\"sender\", \"demo JAVA\");\n            json.put(\"gamme\", 1);\n            json.put(\"message\", \"C\'est un message test en JAVA !\");\n            json.put(\"webhookUrl\", \"https://webhook.site/TOKEN\"); //your webhook url\n        \n        // Écriture des données JSON dans le corps de la requête HTTP\n            OutputStream os = conn.getOutputStream(); \n            os.write(json.toString().getBytes());\n            os.flush();\n\n        // Lecture de la réponse de l\'API\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String response = br.lines().collect(Collectors.joining());\n            System.out.println(response);\n            \n        // Fermeture de la connexion HTTP\n            conn.disconnect();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\nstruct SMSUnitaire: View {\n    var body: some View {\n        // Un bouton qui appelle la fonction sendSMS() lorsqu\'il est pressé\n        Button(action: {\n            sendSMS()\n        }) {\n            Text(\"Envoyer SMS unitaire\")\n                .font(.system(size: 20)) // Taille du texte\n                .foregroundColor(.white) // Couleur du texte\n                .frame(minWidth: 0, maxWidth: .infinity) // Taille du bouton, qui s\'ajuste automatiquement\n                .padding() // Padding autour du texte\n                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity\n                (0.8)]), startPoint: .top, endPoint: .bottom)) // Fond du bouton, un dégradé de bleu\n                .cornerRadius(10) // Coins arrondis du bouton\n                .padding(.horizontal) // Espacement horizontal autour du bouton\n        }\n    }\n\n    func sendSMS() {\n        // Objet JSON contenant les informations nécessaires pour envoyer le SMS\n        let data = [\n            \"apiKey\": \"XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX\", // remplacez par votre clé API\n            \"phoneNumbers\": \"+336XXXXXXXX\", // remplacez par votre numéro de téléphone\n            \"sender\": \"Swift\",\n            \"gamme\": 1,\n            \"message\": \"C\'est un message test Swift\" // remplacez par votre message\n        ] as [String : Any]\n        \n        // Conversion de l\'objet JSON en données\n        guard let jsonData = try? JSONSerialization.data(withJSONObject: data, options: []) else {\n            fatalError(\"Erreur lors de la conversion des données en JSON.\")\n        }\n        \n        // Définition des options pour la requête HTTP POST à l\'API SMS Partner\n        let url = URL(string: \"https://api.smspartner.fr/v1/send\")!\n        var request = URLRequest(url: url)\n        request.httpMethod = \"POST\" // Méthode HTTP\n        request.httpBody = jsonData // Corps de la requête\n        request.addValue(\"application/json\", forHTTPHeaderField: \"Content-Type\") // Type de contenu \n        request.addValue(\"(jsonData.count)\", forHTTPHeaderField: \"Content-Length\") // Longueur du  contenu\n        request.addValue(\"no-cache\", forHTTPHeaderField: \"cache-control\") // Contrôle du cache \n        request.addValue(\"https://webhook.site/TOKEN\", forHTTPHeaderField: \"webhookUrl\") // URL du\n         webhook *cette ligne est facultative*\n        \n        // Exécution de la requête HTTP POST avec les options et données définies précédemment\n        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n            guard let httpResponse = response as? HTTPURLResponse else {\n                fatalError(\"Erreur : réponse HTTP non valide.\")\n            }\n            print(\"statusCode: (httpResponse.statusCode)\") // Impression du statut HTTP\n            \n            if let error = error {\n                print(\"Error: (error.localizedDescription)\") // Impression de l\'erreur, si elle existe\n            }\n            \n            if let data = data {\n                if let responseString = String(data: data, encoding: .utf8) {\n                    print(\"Réponse : (responseString)\") // Impression de la réponse, si elle existe\n                }\n            }\n        }\n        task.resume() // Démarrage de la tâche\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"bytes\"\n	\"fmt\"\n	\"net/http\"\n)\n\nfunc main() {\n	apiKey := \"VOTRE CLE API\"\n	phoneNumbers := \"+336xxxxxxxx\"\n	message := \"Ceci est votre message\"\n	sender := \"monentreprise\"\n	scheduledDeliveryDate := \"21/10/2014\"\n	time := 9\n	minute := 0\n\n	// Construire le corps JSON pour la requête POST\n	jsonData := fmt.Sprintf(`{\n		\"apiKey\": \"%s\",\n		\"phoneNumbers\": \"%s\",\n		\"message\": \"%s\",\n		\"sender\": \"%s\",\n		\"scheduledDeliveryDate\": \"%s\",\n		\"time\": %d,\n		\"minute\": %d\n	}`, apiKey, phoneNumbers, message, sender, scheduledDeliveryDate, time, minute)\n\n	// Effectuer la requête POST\n	url := \"https://api.smspartner.fr/v1/send\"\n	req, err := http.NewRequest(\"POST\", url, bytes.NewBuffer([]byte(jsonData)))\n	if err != nil {\n		fmt.Println(\"Erreur lors de la création de la requête:\", err)\n		return\n	}\n	req.Header.Set(\"Content-Type\", \"application/json\")\n\n	client := &http.Client{}\n	resp, err := client.Do(req)\n	if err != nil {\n		fmt.Println(\"Erreur lors de l\'envoi de la requête:\", err)\n		return\n	}\n	defer resp.Body.Close()\n\n	// Traiter la réponse\n	if resp.StatusCode == http.StatusOK {\n		body := new(bytes.Buffer)\n		_, err := body.ReadFrom(resp.Body)\n		if err != nil {\n			fmt.Println(\"Erreur lors de la lecture de la réponse:\", err)\n			return\n		}\n		fmt.Println(body.String())\n	} else {\n		fmt.Println(\"La requête POST a échoué. Code de réponse:\", resp.StatusCode)\n	}\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var request = new\n        {\n            apiKey = \"YOUR_API_KEY\",\n            phoneNumbers = \"+336xxxxxxxx\",\n            message = \"This is your message\",\n            sender = \"mycompany\",\n            scheduledDeliveryDate = \"21/10/2014\",\n            time = 9,\n            minute = 0\n        };\n\n        var content = new StringContent(\n            JsonConvert.SerializeObject(request),\n            Encoding.UTF8,\n            \"application/json\");\n\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/send\", content);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"POST request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Réponses\n\n### JSON\n```json\n{\n   \"success\":true,\n   \"code\":200,\n   \"message_id\":307,\n   \"nb_sms\": 1,\n   \"cost\": 0.038,\n   \"currency\": \"EUR\"\n}\n```\n### XML\n```xml\n    <?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<result>\n  <entry>true</entry>\n  <entry>200</entry>\n  <entry>306</entry>\n  <entry>1</entry>\n  <entry>0.038</entry>\n  <entry>\n        <![CDATA[EUR]]>\n  </entry>\n</result>\n  ```\n', 'fr', 13),
(13, '## Request\nExample of a request\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n// Prepare data for POST request $fields = array( \'apiKey\'=> \'YOUR API KEY\', \'phoneNumbers\'=> \'\n+336xxxxxxxx\', \'message\'=> \'This is your message\', \'sender\' => \'mycompany\',\n \'scheduledDeliveryDate\'=> \'21/10/2014\', \'time\'=> 9, \'minute\'=> 0 );\n $curl = curl_init(); \n curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/send\');\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, true); \ncurl_setopt($curl, CURLOPT_TIMEOUT, 10);\ncurl_setopt($curl, CURLOPT_POST, 1); \ncurl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields)); \n$result = curl_exec($curl); \ncurl_close($curl);\n // Process your response here echo $result;\n?&gt;\n    </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #send sms\n    url = base_url & \"send\"\n    #note : utiliser une librairie JSON en production, par exemple :\n    #https//www.nuget.org/packages/Newtonsoft.Json/\n    Dim parameters As String = String.Format(\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"phoneNumbers\"\":\"\"{1}\"\",\"\"message\"\":\"\"{2}\"\"}}\",\n        apiKey,\n        \"+33XXXXXXXXX\",\n        \"message de test\")\n    Console.Write(parameters)\n    apiRequest(\"POST\", url, parameters)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\nimport http.client\nimport json\nconn = http.client.HTTPSConnection(\"api.smspartner.fr\")\n\npayload = json.dumps({\n\"apiKey\": \"your api key smspartner\", #remplacez par votre clé API SMSPartner\n\"phoneNumbers\": \"+336xxxxxxxx\", #remplacez par votre numéro de téléphone\n\"sender\": \"Your sender name\",\n\"gamme\": 1,\n\"message\": \"Cest un message test PYTHON\", #remplacez par votre message\n \"webhookUrl\": \"https://webhook.site/TOKEN\" #remplacez TOKEN par votre token webhook.site\n})\n\nheaders = {\n\'Content-Type\': \'application/json\',\n\'Content-Length\': str(len(payload)),\n\'cache-control\': \'no-cache\'\n}\n\nconn.request(\"POST\", \"/v1/send\", payload, headers) #Une requête POST est envoyée au serveur\n SMSPartner avec le chemin d\'URL \"/v1/send\"\n\nres = conn.getresponse() #La réponse est ensuite stockée dans la variable res.\n\ndata = res.read() \n\nprint(data.decode(\"utf-8\")) #Cette ligne lit les données de la réponse HTTP.\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-curl\">\ncurl -H  \"Content-Type: application/json\" -X POST -d \'{\"apiKey\":\"xxxxx\",\"phoneNumbers\":\"xxxx\",\n\"message\":\"test\",\"sender\":\"mycompany\"}\' https://api.smspartner.fr/v1/send\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\n// Importer le module \'https\' de Node.js\nconst https = require(\'https\');\n\n// Objet JSON qui contient les informations nécessaires pour envoyer le SMS\nconst data = JSON.stringify({\n    apiKey: \'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\', //remplacez par votre clé API\n    phoneNumbers: \'+336XXXXXXXX\',  //remplacez par votre numéro de téléphone\n    sender: \'NodeJS\',\n    gamme: 1,\n    message: \"Cest un message test NodeJS\" //remplacez par votre message\n});\n\n// Définir les options pour la requête HTTP POST vers l\'API SMS Partner\nconst options = {\n  hostname: \'api.smspartner.fr\',\n  port: 443,\n  path: \'/v1/send\',\n  method: \'POST\',\n  headers: {\n    \'Content-Type\': \'application/json\',\n    \'Content-Length\': data.length,\n    \'cache-control\': \'no-cache\',\n    \'webhookUrl\': \'https://webhook.site/TOKEN\' // Webhook URL *cette ligne est optionnel*\n  }\n};\n\n// Demande HTTP POST avec les options et les données définies précédemment\nconst req = https.request(options, (res) => {\n  console.log(`statusCode: ${res.statusCode}`);\n  \n  // Afficher les données de réponse de l\'API sur la sortie standard\n  res.on(\'data\', (d) => {\n    process.stdout.write(d);\n  });\n});\n\n// Affichage en cas d\'erreur lors de l\'exécution de la requête HTTP POST\nreq.on(\'error\', (error) => {\n  console.error(error);\n});\n\n// Envoyer les données de l\'objet \'data\' à la demande\nreq.write(data);\n// Terminer la demande HTTP POST\nreq.end();\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.io.OutputStream;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.stream.Collectors;\nimport org.json.JSONObject;\n\npublic class SMSRequest {\n    public static void main(String[] args) {\n        try {\n        // Création de l\'objet URL avec l\'adresse de l\'API SMS\n            URL url = new URL(\"https://api.smspartner.fr/v1/send\");\n        // Ouverture de la connexion HTTP avec l\'API\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod(\"POST\");\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\n            conn.setDoOutput(true);\n\n        // Création de l\'objet JSON contenant les paramètres du SMS à envoyer   \n            JSONObject json = new JSONObject();\n            json.put(\"apiKey\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"); //your api key smspartner\n            json.put(\"phoneNumbers\", \"+336XXXXXXXX\"); //your phone number\n            json.put(\"virtualNumber\", \"+336XXXXXXXX\");\n            json.put(\"sender\", \"demo JAVA\");\n            json.put(\"gamme\", 1);\n            json.put(\"message\", \"C\'est un message test en JAVA !\");\n            json.put(\"webhookUrl\", \"https://webhook.site/TOKEN\"); //your webhook url\n        \n        // Écriture des données JSON dans le corps de la requête HTTP\n            OutputStream os = conn.getOutputStream(); \n            os.write(json.toString().getBytes());\n            os.flush();\n\n        // Lecture de la réponse de l\'API\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String response = br.lines().collect(Collectors.joining());\n            System.out.println(response);\n            \n        // Fermeture de la connexion HTTP\n            conn.disconnect();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\nstruct SMSUnitaire: View {\n    var body: some View {\n        // Un bouton qui appelle la fonction sendSMS() lorsqu\'il est pressé\n        Button(action: {\n            sendSMS()\n        }) {\n            Text(\"Envoyer SMS unitaire\")\n                .font(.system(size: 20)) // Taille du texte\n                .foregroundColor(.white) // Couleur du texte\n                .frame(minWidth: 0, maxWidth: .infinity) // Taille du bouton, qui s\'ajuste automatiquement\n                .padding() // Padding autour du texte\n                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity\n                (0.8)]), startPoint: .top, endPoint: .bottom)) // Fond du bouton, un dégradé de bleu\n                .cornerRadius(10) // Coins arrondis du bouton\n                .padding(.horizontal) // Espacement horizontal autour du bouton\n        }\n    }\n\n    func sendSMS() {\n        // Objet JSON contenant les informations nécessaires pour envoyer le SMS\n        let data = [\n            \"apiKey\": \"XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX\", // remplacez par votre clé API\n            \"phoneNumbers\": \"+336XXXXXXXX\", // remplacez par votre numéro de téléphone\n            \"sender\": \"Swift\",\n            \"gamme\": 1,\n            \"message\": \"C\'est un message test Swift\" // remplacez par votre message\n        ] as [String : Any]\n        \n        // Conversion de l\'objet JSON en données\n        guard let jsonData = try? JSONSerialization.data(withJSONObject: data, options: []) else {\n            fatalError(\"Erreur lors de la conversion des données en JSON.\")\n        }\n        \n        // Définition des options pour la requête HTTP POST à l\'API SMS Partner\n        let url = URL(string: \"https://api.smspartner.fr/v1/send\")!\n        var request = URLRequest(url: url)\n        request.httpMethod = \"POST\" // Méthode HTTP\n        request.httpBody = jsonData // Corps de la requête\n        request.addValue(\"application/json\", forHTTPHeaderField: \"Content-Type\") // Type de contenu \n        request.addValue(\"(jsonData.count)\", forHTTPHeaderField: \"Content-Length\") // Longueur du  contenu\n        request.addValue(\"no-cache\", forHTTPHeaderField: \"cache-control\") // Contrôle du cache \n        request.addValue(\"https://webhook.site/TOKEN\", forHTTPHeaderField: \"webhookUrl\") // URL du\n         webhook *cette ligne est facultative*\n        \n        // Exécution de la requête HTTP POST avec les options et données définies précédemment\n        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n            guard let httpResponse = response as? HTTPURLResponse else {\n                fatalError(\"Erreur : réponse HTTP non valide.\")\n            }\n            print(\"statusCode: (httpResponse.statusCode)\") // Impression du statut HTTP\n            \n            if let error = error {\n                print(\"Error: (error.localizedDescription)\") // Impression de l\'erreur, si elle existe\n            }\n            \n            if let data = data {\n                if let responseString = String(data: data, encoding: .utf8) {\n                    print(\"Réponse : (responseString)\") // Impression de la réponse, si elle existe\n                }\n            }\n        }\n        task.resume() // Démarrage de la tâche\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"bytes\"\n	\"fmt\"\n	\"net/http\"\n)\n\nfunc main() {\n	apiKey := \"VOTRE CLE API\"\n	phoneNumbers := \"+336xxxxxxxx\"\n	message := \"Ceci est votre message\"\n	sender := \"monentreprise\"\n	scheduledDeliveryDate := \"21/10/2014\"\n	time := 9\n	minute := 0\n\n	// Construire le corps JSON pour la requête POST\n	jsonData := fmt.Sprintf(`{\n		\"apiKey\": \"%s\",\n		\"phoneNumbers\": \"%s\",\n		\"message\": \"%s\",\n		\"sender\": \"%s\",\n		\"scheduledDeliveryDate\": \"%s\",\n		\"time\": %d,\n		\"minute\": %d\n	}`, apiKey, phoneNumbers, message, sender, scheduledDeliveryDate, time, minute)\n\n	// Effectuer la requête POST\n	url := \"https://api.smspartner.fr/v1/send\"\n	req, err := http.NewRequest(\"POST\", url, bytes.NewBuffer([]byte(jsonData)))\n	if err != nil {\n		fmt.Println(\"Erreur lors de la création de la requête:\", err)\n		return\n	}\n	req.Header.Set(\"Content-Type\", \"application/json\")\n\n	client := &http.Client{}\n	resp, err := client.Do(req)\n	if err != nil {\n		fmt.Println(\"Erreur lors de l\'envoi de la requête:\", err)\n		return\n	}\n	defer resp.Body.Close()\n\n	// Traiter la réponse\n	if resp.StatusCode == http.StatusOK {\n		body := new(bytes.Buffer)\n		_, err := body.ReadFrom(resp.Body)\n		if err != nil {\n			fmt.Println(\"Erreur lors de la lecture de la réponse:\", err)\n			return\n		}\n		fmt.Println(body.String())\n	} else {\n		fmt.Println(\"La requête POST a échoué. Code de réponse:\", resp.StatusCode)\n	}\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var request = new\n        {\n            apiKey = \"YOUR_API_KEY\",\n            phoneNumbers = \"+336xxxxxxxx\",\n            message = \"This is your message\",\n            sender = \"mycompany\",\n            scheduledDeliveryDate = \"21/10/2014\",\n            time = 9,\n            minute = 0\n        };\n\n        var content = new StringContent(\n            JsonConvert.SerializeObject(request),\n            Encoding.UTF8,\n            \"application/json\");\n\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/send\", content);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"POST request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Responses\n\n### JSON\n```json\n{\n   \"success\":true,\n   \"code\":200,\n   \"message_id\":307,\n   \"nb_sms\": 1,\n   \"cost\": 0.038,\n   \"currency\": \"EUR\"\n}\n```\n### XML\n```xml\n    <?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<result>\n  <entry>true</entry>\n  <entry>200</entry>\n  <entry>306</entry>\n  <entry>1</entry>\n  <entry>0.038</entry>\n  <entry>\n        <![CDATA[EUR]]>\n  </entry>\n</result>\n  ```\n', 'en', 14);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(14, '## Requête\nExemple de requête :\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n// Prepare data for POST request\n        $fields = array(\n            \'apiKey\'=> \'YOUR API KEY\',\n            \'sender\' => \'mycompany\',\n            \'scheduledDeliveryDate\'=> \'21/10/2014\',\n            \'time\'=> 9,\n            \'minute\'=> 0,\n            \'SMSList\'=> array(\n                array(\n                    \'phoneNumber\'=> \'06xxxxxxx1\',\n                    \'message\'=> \'msg 0\'\n                ),\n                array(\n                    \'phoneNumber\'=> \'06xxxxxxx2\',\n                    \'message\'=> \'msg 1\'\n                )\n \n            )\n        );\n \n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/bulk-send\');\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #send sms\n    url = base_url & \"bulk-send\"\n    #note : utiliser une librairie JSON en production, par exemple :\n    #https//www.nuget.org/packages/Newtonsoft.Json/\n    Dim parameters As String = String.Format(\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"sender\"\":\"\"{1}\"\",\"\"SMSList\"\":\"\"{2}\"\"}}\",\n        apiKey,\n        \"mycompany\",\n        {{ \"\"phoneNumber\"\":\"06xxxxxxx1\",\"\"message\"\":\"msg1\"},{ \"\"phoneNumber\"\":\"06xxxxxxx2\",\"\"message\"\":\"msg2\"}}\n        )\n    Console.Write(parameters)\n    apiRequest(\"POST\", url, parameters)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def send_sms(self,phone_numbers, msg, sender = \"SMSPartner\"):\n		#sender = \"DEMOSMS\"\n		print(phone_numbers)\n \n \n		data = {\"apiKey\":APIKEY,\"sender\":sender,\"SMSList\":[{\"phoneNumber\":\"06xxxxxxx1\",\"message\":\"msg1\"},{\"phoneNumber\":\"06xxxxxxx2\",\"message\":\"msg2\"}]}\n \n \n		url = URL + \"/bulk-send\"\n		r = requests.post(url, data=json.dumps(data), verify=False)\n \n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(\"SMS msg {} not delivered to {}\".format(msg, phone_numbers))\n			status = False\n		return status\n   </code></pre>\n  </div>\n \n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\n    curl -H  \"Content-Type: application/json\" -X POST -d \'{\"apiKey\":\"xxxxx\",\"to\":\"xxxx\",\"from\":\"xxx\",\"message\":\"test\"}\' https://api.smspartner.fr/v1/vn/send\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n\n// Remplacez par votre clé API\nconst apiKey = \'VOTRE_CLÉ_API\';\n\n// Objet JSON qui contient les informations nécessaires pour envoyer les SMS en lots\nconst data = JSON.stringify({\n    apiKey: apiKey,\n    sender: \'mycompany\',\n    scheduledDeliveryDate: \'21/10/2014\',\n    time: 9,\n    minute: 0,\n    SMSList: [\n        {\n            phoneNumber: \'06xxxxxxx1\',\n            message: \'msg 0\',\n        },\n        {\n            phoneNumber: \'06xxxxxxx2\',\n            message: \'msg 1\',\n        },\n    ],\n});\n\n// Définir les options pour la requête HTTP POST vers l\'API SMS Partner\nconst options = {\n  hostname: \'api.smspartner.fr\',\n  port: 443,\n  path: \'/v1/send\',\n  method: \'POST\',\n  headers: {\n    \'Content-Type\': \'application/json\',\n    \'Content-Length\': data.length,\n    \'cache-control\': \'no-cache\',\n  },\n};\n\n// Demande HTTP POST avec les options et les données définies précédemment\nconst req = https.request(options, (res) => {\n  console.log(`statusCode: ${res.statusCode}`);\n  \n  // Afficher les données de réponse de l\'API sur la sortie standard\n  res.on(\'data\', (d) => {\n    process.stdout.write(d);\n  });\n});\n\n// Affichage en cas d\'erreur lors de l\'exécution de la requête HTTP POST\nreq.on(\'error\', (error) => {\n  console.error(error);\n});\n\n// Envoyer les données de l\'objet \'data\' à la demande\nreq.write(data);\n// Terminer la demande HTTP POST\nreq.end();\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.io.OutputStream;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.stream.Collectors;\nimport org.json.JSONArray;\nimport org.json.JSONObject;\n\npublic class SMSRequest {\n    public static void main(String[] args) {\n        try {\n        // Création de l\'objet URL avec l\'adresse de l\'API SMS\n               URL url = new URL(\"https://api.smspartner.fr/v1/bulk-send\"\n        // Ouverture de la connexion HTTP avec l\'API\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod(\"POST\");\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\n            conn.setDoOutput(true);\n\n            // Création de l\'objet JSON contenant les paramètres des SMS à envoyer en lot\n            JSONObject json = new JSONObject();\n            json.put(\"apiKey\", \"VOTRE_API_KEY\"); // Remplacez par votre clé API\n            json.put(\"sender\", \"mycompany\");\n            json.put(\"scheduledDeliveryDate\", \"21/10/2014\");\n            json.put(\"time\", 9);\n            json.put(\"minute\", 0);\n\n            JSONArray SMSList = new JSONArray();\n            JSONObject sms1 = new JSONObject();\n            sms1.put(\"phoneNumber\", \"06xxxxxxx1\");\n            sms1.put(\"message\", \"msg 0\");\n            SMSList.put(sms1);\n\n            JSONObject sms2 = new JSONObject();\n            sms2.put(\"phoneNumber\", \"06xxxxxxx2\");\n            sms2.put(\"message\", \"msg 1\");\n            SMSList.put(sms2);\n\n            json.put(\"SMSList\", SMSList);\n\n        \n        // Écriture des données JSON dans le corps de la requête HTTP\n            OutputStream os = conn.getOutputStream(); \n            os.write(json.toString().getBytes());\n            os.flush();\n\n        // Lecture de la réponse de l\'API\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String response = br.lines().collect(Collectors.joining());\n            System.out.println(response);\n            \n        // Fermeture de la connexion HTTP\n            conn.disconnect();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\n// Cette requête est utilisée pour envoyer des SMS par lot de 500 en temps réel ou en différé\nstruct SMSParLotsView: View {\n    var body: some View {\n        // Un bouton qui appelle la fonction sendSMSParLots() lorsqu\'il est pressé\n        Button(action: {\n            sendSMSParLots()\n        }) {\n            Text(\"Send Bulk SMS\")\n                .font(.system(size: 20))\n                .foregroundColor(.white)\n                .frame(minWidth: 0, maxWidth: .infinity)\n                .padding()\n                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))\n                .cornerRadius(10)\n                .padding(.horizontal)\n        }\n    }\n    \n\n    func sendSMSParLots() {\n        // Liste des SMS à envoyer\n        let smsList: [[String: String]] = [\n            [\n                \"phoneNumber\": \"06XXXXXXXX\", // Numéro de téléphone du destinataire\n                \"message\": \"msg 0 en temps réel\" // Message à envoyer\n            ],\n            [\n                \"phoneNumber\": \"06XXXXXXXX\", // Un autre numéro de téléphone\n                \"message\": \"msg 1 en temps réel\" // Un autre message\n            ]\n        ]\n\n        // Données à envoyer à l\'API\n        let data: [String: Any] = [\n            \"apiKey\": \"XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX\", // Votre clé API\n            \"sender\": \"mycompany\", // L\'expéditeur du SMS\n            // Ces 3 lignes permettent de programmer un envoi différé.\n            //\"scheduledDeliveryDate\": \"12/05/2023\", // Date de livraison prévue\n            //\"time\": 9, // Heure de livraison\n            //\"minute\": 0, // Minute de livraison\n            \"SMSList\": smsList // La liste des SMS à envoyer\n        ]\n\n        // Conversion des données en JSON\n        guard let jsonData = try? JSONSerialization.data(withJSONObject: data, options: []) else {\n            fatalError(\"Error converting data to JSON.\")\n        }\n\n        // Création de la requête HTTP\n        let url = URL(string: \"https://api.smspartner.fr/v1/bulk-send\")! // URL de l\'API\n        var request = URLRequest(url: url)\n        request.httpMethod = \"POST\" // Méthode HTTP\n        request.httpBody = jsonData // Corps de la requête\n        request.addValue(\"application/json\", forHTTPHeaderField: \"Content-Type\") // Type de contenu\n        request.addValue(\"(jsonData.count)\", forHTTPHeaderField: \"Content-Length\") // Longueur du contenu\n        request.addValue(\"no-cache\", forHTTPHeaderField: \"cache-control\") // Contrôle du cache\n\n        // Envoi de la requête HTTP\n        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n            // Vérification de la réponse HTTP\n            guard let httpResponse = response as? HTTPURLResponse else {\n                fatalError(\"Error: Invalid HTTP response.\")\n            }\n            print(\"statusCode: (httpResponse.statusCode)\") // Impression du code d\'état HTTP\n\n            // Gestion des erreurs éventuelles\n            if let error = error {\n                print(\"Error: (error.localizedDescription)\")\n            }\n\n            // Impression de la réponse de l\'API\n            if let data = data {\n                if let responseString = String(data: data, encoding: .utf8) {\n                    print(\"Response: (responseString)\")\n                }\n            }\n        }\n        task.resume()\n    }\n}\n// Un aperçu de la vue\nstruct BulkSMSView_Previews: PreviewProvider {\n    static var previews: some View {\n        SMSParLotsView()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"bytes\"\n	\"encoding/json\"\n	\"fmt\"\n	\"net/http\"\n)\n\nfunc main() {\n	apiKey := \"VOTRE CLE API\"\n	sender := \"monentreprise\"\n	scheduledDeliveryDate := \"21/10/2014\"\n	time := 9\n	minute := 0\n\n	// Construire les données JSON pour la requête POST\n	data := map[string]interface{}{\n		\"apiKey\":               apiKey,\n		\"sender\":               sender,\n		\"scheduledDeliveryDate\": scheduledDeliveryDate,\n		\"time\":                 time,\n		\"minute\":               minute,\n		\"SMSList\": []map[string]string{\n			{\"phoneNumber\": \"06xxxxxxx1\", \"message\": \"msg 0\"},\n			{\"phoneNumber\": \"06xxxxxxx2\", \"message\": \"msg 1\"},\n		},\n	}\n\n	// Convertir les données en JSON\n	jsonData, err := json.Marshal(data)\n	if err != nil {\n		fmt.Println(\"Erreur lors de la conversion en JSON:\", err)\n		return\n	}\n\n	// Effectuer la requête POST\n	url := \"https://api.smspartner.fr/v1/bulk-send\"\n	resp, err := http.Post(url, \"application/json\", bytes.NewBuffer(jsonData))\n	if err != nil {\n		fmt.Println(\"Erreur lors de l\'envoi de la requête:\", err)\n		return\n	}\n	defer resp.Body.Close()\n\n	// Traiter la réponse\n	if resp.StatusCode == http.StatusOK {\n		body := new(bytes.Buffer)\n		_, err := body.ReadFrom(resp.Body)\n		if err != nil {\n			fmt.Println(\"Erreur lors de la lecture de la réponse:\", err)\n			return\n		}\n		fmt.Println(body.String())\n	} else {\n		fmt.Println(\"La requête POST a échoué. Code de réponse:\", resp.StatusCode)\n	}\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var request = new\n        {\n            apiKey = \"YOUR_API_KEY\",\n            sender = \"mycompany\",\n            scheduledDeliveryDate = \"21/10/2014\",\n            time = 9,\n            minute = 0,\n            SMSList = new[]\n            {\n                new\n                {\n                    phoneNumber = \"06xxxxxxx1\",\n                    message = \"msg 0\"\n                },\n                new\n                {\n                    phoneNumber = \"06xxxxxxx2\",\n                    message = \"msg 1\"\n                }\n            }\n        };\n\n        var content = new StringContent(\n            JsonConvert.SerializeObject(request),\n            Encoding.UTF8,\n            \"application/json\");\n\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/bulk-send\", content);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"POST request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Réponses\n\n### JSON\n```json\n{\n       \"success\": true,\n    \"code\": 200,\n    \"message_id\": xxxxxx,\n    \"currency\": \"EUR\",\n    \"cost\": 0.076,\n    \"nbSMS\": 2,\n    \"SMSResponse_List\": [\n        {\n            \"success\": true,\n            \"code\": 200,\n            \"nbSms\": 1,\n            \"cost\": 0.038,\n            \"phoneNumber\": \"+336xxxxxxx1\"\n        },\n        {\n            \"success\": true,\n            \"code\": 200,\n            \"nbSms\": 1,\n            \"cost\": 0.038,\n            \"phoneNumber\": \"+336xxxxxxx2\"\n        }\n    ]\n}\n```\n### XML\n```xml\n    <?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<result>\n    <entry>true</entry>\n    <entry>200</entry>\n    <entry>xxxxxx</entry>\n    <entry>\n        <![CDATA[EUR]]>\n    </entry>\n    <entry>0.076</entry>\n    <entry>2</entry>\n    <entry>\n        <entry>\n            <entry>true</entry>\n            <entry>200</entry>\n            <entry>1</entry>\n            <entry>0.038</entry>\n            <entry>\n                <![CDATA[+336xxxxxxx1]]>\n            </entry>\n        </entry>\n        <entry>\n            <entry>true</entry>\n            <entry>200</entry>\n            <entry>1</entry>\n            <entry>0.038</entry>\n            <entry>\n                <![CDATA[+336xxxxxxx2]]>\n            </entry>\n        </entry>\n    </entry>\n</result>\n  ```\n', 'fr', 17),
(15, '## Request\nExample of a request\n\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n// Prepare data for POST request\n        $fields = array(\n            \'apiKey\'=> \'YOUR API KEY\',\n            \'sender\' => \'mycompany\',\n            \'scheduledDeliveryDate\'=> \'21/10/2014\',\n            \'time\'=> 9,\n            \'minute\'=> 0,\n            \'SMSList\'=> array(\n                array(\n                    \'phoneNumber\'=> \'06xxxxxxx1\',\n                    \'message\'=> \'msg 0\'\n                ),\n                array(\n                    \'phoneNumber\'=> \'06xxxxxxx2\',\n                    \'message\'=> \'msg 1\'\n                )\n \n            )\n        );\n \n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/bulk-send\');\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #send sms\n    url = base_url & \"bulk-send\"\n    #note : utiliser une librairie JSON en production, par exemple :\n    #https//www.nuget.org/packages/Newtonsoft.Json/\n    Dim parameters As String = String.Format(\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"sender\"\":\"\"{1}\"\",\"\"SMSList\"\":\"\"{2}\"\"}}\",\n        apiKey,\n        \"mycompany\",\n        {{ \"\"phoneNumber\"\":\"06xxxxxxx1\",\"\"message\"\":\"msg1\"},{ \"\"phoneNumber\"\":\"06xxxxxxx2\",\"\"message\"\":\"msg2\"}}\n        )\n    Console.Write(parameters)\n    apiRequest(\"POST\", url, parameters)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def send_sms(self,phone_numbers, msg, sender = \"SMSPartner\"):\n		#sender = \"DEMOSMS\"\n		print(phone_numbers)\n \n \n		data = {\"apiKey\":APIKEY,\"sender\":sender,\"SMSList\":[{\"phoneNumber\":\"06xxxxxxx1\",\"message\":\"msg1\"},{\"phoneNumber\":\"06xxxxxxx2\",\"message\":\"msg2\"}]}\n \n \n		url = URL + \"/bulk-send\"\n		r = requests.post(url, data=json.dumps(data), verify=False)\n \n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(\"SMS msg {} not delivered to {}\".format(msg, phone_numbers))\n			status = False\n		return status\n   </code></pre>\n  </div>\n  \n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\n    curl -H  \"Content-Type: application/json\" -X POST -d \'{\"apiKey\":\"xxxxx\",\"to\":\"xxxx\",\"from\":\"xxx\",\"message\":\"test\"}\' https://api.smspartner.fr/v1/vn/send\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n\n// Remplacez par votre clé API\nconst apiKey = \'VOTRE_CLÉ_API\';\n\n// Objet JSON qui contient les informations nécessaires pour envoyer les SMS en lots\nconst data = JSON.stringify({\n    apiKey: apiKey,\n    sender: \'mycompany\',\n    scheduledDeliveryDate: \'21/10/2014\',\n    time: 9,\n    minute: 0,\n    SMSList: [\n        {\n            phoneNumber: \'06xxxxxxx1\',\n            message: \'msg 0\',\n        },\n        {\n            phoneNumber: \'06xxxxxxx2\',\n            message: \'msg 1\',\n        },\n    ],\n});\n\n// Définir les options pour la requête HTTP POST vers l\'API SMS Partner\nconst options = {\n  hostname: \'api.smspartner.fr\',\n  port: 443,\n  path: \'/v1/send\',\n  method: \'POST\',\n  headers: {\n    \'Content-Type\': \'application/json\',\n    \'Content-Length\': data.length,\n    \'cache-control\': \'no-cache\',\n  },\n};\n\n// Demande HTTP POST avec les options et les données définies précédemment\nconst req = https.request(options, (res) => {\n  console.log(`statusCode: ${res.statusCode}`);\n  \n  // Afficher les données de réponse de l\'API sur la sortie standard\n  res.on(\'data\', (d) => {\n    process.stdout.write(d);\n  });\n});\n\n// Affichage en cas d\'erreur lors de l\'exécution de la requête HTTP POST\nreq.on(\'error\', (error) => {\n  console.error(error);\n});\n\n// Envoyer les données de l\'objet \'data\' à la demande\nreq.write(data);\n// Terminer la demande HTTP POST\nreq.end();\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.io.OutputStream;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.stream.Collectors;\nimport org.json.JSONArray;\nimport org.json.JSONObject;\n\npublic class SMSRequest {\n    public static void main(String[] args) {\n        try {\n        // Création de l\'objet URL avec l\'adresse de l\'API SMS\n               URL url = new URL(\"https://api.smspartner.fr/v1/bulk-send\"\n        // Ouverture de la connexion HTTP avec l\'API\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod(\"POST\");\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\n            conn.setDoOutput(true);\n\n            // Création de l\'objet JSON contenant les paramètres des SMS à envoyer en lot\n            JSONObject json = new JSONObject();\n            json.put(\"apiKey\", \"VOTRE_API_KEY\"); // Remplacez par votre clé API\n            json.put(\"sender\", \"mycompany\");\n            json.put(\"scheduledDeliveryDate\", \"21/10/2014\");\n            json.put(\"time\", 9);\n            json.put(\"minute\", 0);\n\n            JSONArray SMSList = new JSONArray();\n            JSONObject sms1 = new JSONObject();\n            sms1.put(\"phoneNumber\", \"06xxxxxxx1\");\n            sms1.put(\"message\", \"msg 0\");\n            SMSList.put(sms1);\n\n            JSONObject sms2 = new JSONObject();\n            sms2.put(\"phoneNumber\", \"06xxxxxxx2\");\n            sms2.put(\"message\", \"msg 1\");\n            SMSList.put(sms2);\n\n            json.put(\"SMSList\", SMSList);\n\n        \n        // Écriture des données JSON dans le corps de la requête HTTP\n            OutputStream os = conn.getOutputStream(); \n            os.write(json.toString().getBytes());\n            os.flush();\n\n        // Lecture de la réponse de l\'API\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String response = br.lines().collect(Collectors.joining());\n            System.out.println(response);\n            \n        // Fermeture de la connexion HTTP\n            conn.disconnect();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\n// Cette requête est utilisée pour envoyer des SMS par lot de 500 en temps réel ou en différé\nstruct SMSParLotsView: View {\n    var body: some View {\n        // Un bouton qui appelle la fonction sendSMSParLots() lorsqu\'il est pressé\n        Button(action: {\n            sendSMSParLots()\n        }) {\n            Text(\"Send Bulk SMS\")\n                .font(.system(size: 20))\n                .foregroundColor(.white)\n                .frame(minWidth: 0, maxWidth: .infinity)\n                .padding()\n                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))\n                .cornerRadius(10)\n                .padding(.horizontal)\n        }\n    }\n    \n\n    func sendSMSParLots() {\n        // Liste des SMS à envoyer\n        let smsList: [[String: String]] = [\n            [\n                \"phoneNumber\": \"06XXXXXXXX\", // Numéro de téléphone du destinataire\n                \"message\": \"msg 0 en temps réel\" // Message à envoyer\n            ],\n            [\n                \"phoneNumber\": \"06XXXXXXXX\", // Un autre numéro de téléphone\n                \"message\": \"msg 1 en temps réel\" // Un autre message\n            ]\n        ]\n\n        // Données à envoyer à l\'API\n        let data: [String: Any] = [\n            \"apiKey\": \"XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX\", // Votre clé API\n            \"sender\": \"mycompany\", // L\'expéditeur du SMS\n            // Ces 3 lignes permettent de programmer un envoi différé.\n            //\"scheduledDeliveryDate\": \"12/05/2023\", // Date de livraison prévue\n            //\"time\": 9, // Heure de livraison\n            //\"minute\": 0, // Minute de livraison\n            \"SMSList\": smsList // La liste des SMS à envoyer\n        ]\n\n        // Conversion des données en JSON\n        guard let jsonData = try? JSONSerialization.data(withJSONObject: data, options: []) else {\n            fatalError(\"Error converting data to JSON.\")\n        }\n\n        // Création de la requête HTTP\n        let url = URL(string: \"https://api.smspartner.fr/v1/bulk-send\")! // URL de l\'API\n        var request = URLRequest(url: url)\n        request.httpMethod = \"POST\" // Méthode HTTP\n        request.httpBody = jsonData // Corps de la requête\n        request.addValue(\"application/json\", forHTTPHeaderField: \"Content-Type\") // Type de contenu\n        request.addValue(\"(jsonData.count)\", forHTTPHeaderField: \"Content-Length\") // Longueur du contenu\n        request.addValue(\"no-cache\", forHTTPHeaderField: \"cache-control\") // Contrôle du cache\n\n        // Envoi de la requête HTTP\n        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n            // Vérification de la réponse HTTP\n            guard let httpResponse = response as? HTTPURLResponse else {\n                fatalError(\"Error: Invalid HTTP response.\")\n            }\n            print(\"statusCode: (httpResponse.statusCode)\") // Impression du code d\'état HTTP\n\n            // Gestion des erreurs éventuelles\n            if let error = error {\n                print(\"Error: (error.localizedDescription)\")\n            }\n\n            // Impression de la réponse de l\'API\n            if let data = data {\n                if let responseString = String(data: data, encoding: .utf8) {\n                    print(\"Response: (responseString)\")\n                }\n            }\n        }\n        task.resume()\n    }\n}\n// Un aperçu de la vue\nstruct BulkSMSView_Previews: PreviewProvider {\n    static var previews: some View {\n        SMSParLotsView()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"bytes\"\n	\"encoding/json\"\n	\"fmt\"\n	\"net/http\"\n)\n\nfunc main() {\n	apiKey := \"VOTRE CLE API\"\n	sender := \"monentreprise\"\n	scheduledDeliveryDate := \"21/10/2014\"\n	time := 9\n	minute := 0\n\n	// Construire les données JSON pour la requête POST\n	data := map[string]interface{}{\n		\"apiKey\":               apiKey,\n		\"sender\":               sender,\n		\"scheduledDeliveryDate\": scheduledDeliveryDate,\n		\"time\":                 time,\n		\"minute\":               minute,\n		\"SMSList\": []map[string]string{\n			{\"phoneNumber\": \"06xxxxxxx1\", \"message\": \"msg 0\"},\n			{\"phoneNumber\": \"06xxxxxxx2\", \"message\": \"msg 1\"},\n		},\n	}\n\n	// Convertir les données en JSON\n	jsonData, err := json.Marshal(data)\n	if err != nil {\n		fmt.Println(\"Erreur lors de la conversion en JSON:\", err)\n		return\n	}\n\n	// Effectuer la requête POST\n	url := \"https://api.smspartner.fr/v1/bulk-send\"\n	resp, err := http.Post(url, \"application/json\", bytes.NewBuffer(jsonData))\n	if err != nil {\n		fmt.Println(\"Erreur lors de l\'envoi de la requête:\", err)\n		return\n	}\n	defer resp.Body.Close()\n\n	// Traiter la réponse\n	if resp.StatusCode == http.StatusOK {\n		body := new(bytes.Buffer)\n		_, err := body.ReadFrom(resp.Body)\n		if err != nil {\n			fmt.Println(\"Erreur lors de la lecture de la réponse:\", err)\n			return\n		}\n		fmt.Println(body.String())\n	} else {\n		fmt.Println(\"La requête POST a échoué. Code de réponse:\", resp.StatusCode)\n	}\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var request = new\n        {\n            apiKey = \"YOUR_API_KEY\",\n            sender = \"mycompany\",\n            scheduledDeliveryDate = \"21/10/2014\",\n            time = 9,\n            minute = 0,\n            SMSList = new[]\n            {\n                new\n                {\n                    phoneNumber = \"06xxxxxxx1\",\n                    message = \"msg 0\"\n                },\n                new\n                {\n                    phoneNumber = \"06xxxxxxx2\",\n                    message = \"msg 1\"\n                }\n            }\n        };\n\n        var content = new StringContent(\n            JsonConvert.SerializeObject(request),\n            Encoding.UTF8,\n            \"application/json\");\n\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/bulk-send\", content);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"POST request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Responses\n\n### JSON\n```json\n{\n       \"success\": true,\n    \"code\": 200,\n    \"message_id\": xxxxxx,\n    \"currency\": \"EUR\",\n    \"cost\": 0.076,\n    \"nbSMS\": 2,\n    \"SMSResponse_List\": [\n        {\n            \"success\": true,\n            \"code\": 200,\n            \"nbSms\": 1,\n            \"cost\": 0.038,\n            \"phoneNumber\": \"+336xxxxxxx1\"\n        },\n        {\n            \"success\": true,\n            \"code\": 200,\n            \"nbSms\": 1,\n            \"cost\": 0.038,\n            \"phoneNumber\": \"+336xxxxxxx2\"\n        }\n    ]\n}\n```\n### XML\n```xml\n    <?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<result>\n    <entry>true</entry>\n    <entry>200</entry>\n    <entry>xxxxxx</entry>\n    <entry>\n        <![CDATA[EUR]]>\n    </entry>\n    <entry>0.076</entry>\n    <entry>2</entry>\n    <entry>\n        <entry>\n            <entry>true</entry>\n            <entry>200</entry>\n            <entry>1</entry>\n            <entry>0.038</entry>\n            <entry>\n                <![CDATA[+336xxxxxxx1]]>\n            </entry>\n        </entry>\n        <entry>\n            <entry>true</entry>\n            <entry>200</entry>\n            <entry>1</entry>\n            <entry>0.038</entry>\n            <entry>\n                <![CDATA[+336xxxxxxx2]]>\n            </entry>\n        </entry>\n    </entry>\n</result>\n  ```\n', 'en', 18);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(16, '## Requête\nExemple de requête :\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n        // Prepare data for POST request\n        $fields = array(\n            \'apiKey\'=> \'YOUR API KEY\',\n            \'to\'=> \'336xxxxxxxx\',\n            \'from\' => \'336xxxxxxxx\',\n            \'message\'=> \'This is your message\'\n        );\n \n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/vn/send\');\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #send sms\n    url = base_url & \"vn/send\"\n    #note : utiliser une librairie JSON en production, par exemple :\n    #https//www.nuget.org/packages/Newtonsoft.Json/\n    Dim parameters As String = String.Format(\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"to\"\":\"\"{1}\"\",\"\"from\"\":\"\"{2}\"\",\"\"message\"\":\"\"{3}\"\"}}\",\n        apiKey,\n        \"336xxxxxxxx\",\n        \"336xxxxxxxx\",\n        \"message de test\")\n    Console.Write(parameters)\n    apiRequest(\"POST\", url, parameters)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def send_sms(self, to, from, msg):\n		print(to)\n \n		data = OrderedDict([\n			(\"apiKey\", API_KEY),\n			(\"to\", to),\n			(\"from\",from),\n			(\"message\", msg)\n		])\n \n		url = URL + \"/vn/send\"\n		r = requests.post(url, data=json.dumps(data), verify=False)\n \n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(\"SMS msg {} not delivered to {}\".format(msg, to))\n			status = False\n		return status\n   </code></pre>\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\n    curl -H  \"Content-Type: application/json\" -X POST -d \'{\"apiKey\":\"xxxxx\",\"to\":\"xxxx\",\"from\":\"xxx\",\"message\":\"test\"}\' https://api.smspartner.fr/v1/vn/send\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\"https\");\n\n// Remplacez par votre clé API\nconst apiKey = \"VOTRE_CLÉ_API\";\n\n// Préparer les données pour la requête POST\nconst data = JSON.stringify({\n  apiKey: apiKey,\n  to: \"336xxxxxxxx\",\n  from: \"336xxxxxxxx\",\n  message: \"Ceci est votre message\",\n});\n\n// Définir les options pour la requête HTTP POST vers l\'API SMS Partner\nconst options = {\n  hostname: \"api.smspartner.fr\",\n  port: 443,\n  path: \"/v1/vn/send\",\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Content-Length\": data.length,\n    \"cache-control\": \"no-cache\",\n  },\n};\n\n// Effectuer la requête HTTP POST avec les options et données définies précédemment\nconst req = https.request(options, (res) => {\n  console.log(`statusCode: ${res.statusCode}`);\n\n  // Afficher les données de réponse de l\'API sur la sortie standard\n  res.on(\"data\", (d) => {\n    process.stdout.write(d);\n  });\n});\n\n// Afficher en cas d\'erreur lors de l\'exécution de la requête HTTP POST\nreq.on(\"error\", (error) => {\n  console.error(error);\n});\n\n// Envoyer les données de l\'objet \'data\' à la demande\nreq.write(data);\n// Terminer la demande HTTP POST\nreq.end();\n</code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.io.OutputStream;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.stream.Collectors;\nimport org.json.JSONObject;\n\npublic class EnvoyerSMSLong {\n    public static void main(String[] args) {\n        try {\n            // Remplacez par votre clé API\n            String apiKey = \"VOTRE_CLÉ_API\";\n\n            // Création de l\'objet URL avec l\'adresse de l\'API SMS\n            URL url = new URL(\"https://api.smspartner.fr/v1/vn/send\");\n\n            // Ouverture de la connexion HTTP avec l\'API\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod(\"POST\");\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\n            conn.setDoOutput(true);\n\n            // Création de l\'objet JSON contenant les paramètres du SMS à envoyer\n            JSONObject json = new JSONObject();\n            json.put(\"apiKey\", apiKey);\n            json.put(\"to\", \"336xxxxxxxx\");\n            json.put(\"from\", \"336xxxxxxxx\");\n            json.put(\"message\", \"Ceci est votre message\");\n\n            // Écriture des données JSON dans le corps de la requête HTTP\n            OutputStream os = conn.getOutputStream();\n            os.write(json.toString().getBytes());\n            os.flush();\n\n            // Lecture de la réponse de l\'API\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String response = br.lines().collect(Collectors.joining());\n            System.out.println(response);\n\n            // Fermeture de la connexion HTTP\n            conn.disconnect();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\nimport Foundation\n\n// Struct pour la vue \"EnvoieSMSParNumeroLong\"\nstruct EnvoieSMSParNumeroLong: View {\n    var body: some View {\n        NavigationView {\n            VStack {\n                // Un bouton qui appelle la fonction EnvoieSMSParNumeroLong() lorsqu\'il est pressé\n                Button(action: {\n                    EnvoieSMSParNumeroLong()\n                }) {\n                    Text(\"Envoyer SMS\")\n                        .font(.system(size: 20))\n                        .foregroundColor(.white)\n                        .frame(minWidth: 0, maxWidth: .infinity)\n                        .padding()\n                        .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))\n                        .cornerRadius(10)\n                        .padding(.horizontal)\n                }\n            }\n        }\n    }\n    \n    // Fonction pour envoyer un SMS par numéro long\n    func EnvoieSMSParNumeroLong() {\n        let apiKey = \"XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX\" // Votre clé API\n        let destinataire = \"33XXXXXXXXX\" // Le numéro du destinataire\n        let expediteur = \"33XXXXXXXXX\" // Votre numéro\n        let message = \"status\" // Le message à envoyer\n\n        let url = URL(string: \"https://api.smspartner.fr/v1/vn/send\")! // URL pour envoyer le SMS\n        var requete = URLRequest(url: url)\n        requete.httpMethod = \"POST\"\n        requete.addValue(\"application/json\", forHTTPHeaderField: \"Content-Type\") // Ajout du type de contenu dans l\'en-tête de la requête\n\n        // Paramètres pour l\'envoi du SMS\n        let params: [String: Any] = [\n            \"apiKey\": apiKey,\n            \"to\": destinataire,\n            \"from\": expediteur,\n            \"message\": message\n        ]\n        \n        // Ajout des paramètres dans le corps de la requête\n        requete.httpBody = try? JSONSerialization.data(withJSONObject: params)\n        \n        let session = URLSession.shared\n        // Tâche pour envoyer la requête\n        let task = session.dataTask(with: requete) { (data, response, error) in\n            // Si une erreur survient, on l\'affiche\n            if let erreur = error {\n                print(\"Erreur : (erreur.localizedDescription)\")\n                return\n            }\n            \n            // Sinon, on affiche les données reçues\n            if let donnees = data {\n                if let resultat = String(data: donnees, encoding: .utf8) {\n                    print(resultat) // Impression du résultat\n                }\n            }\n        }\n        \n        task.resume() // On lance la tâche\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"bytes\"\n	\"fmt\"\n	\"net/http\"\n)\n\nfunc main() {\n	apiKey := \"YOUR API KEY\"\n	to := \"336xxxxxxxx\"\n	from := \"336xxxxxxxx\"\n	message := \"This is your message\"\n\n	// Construire les données JSON pour la requête POST\n	data := map[string]interface{}{\n		\"apiKey\":  apiKey,\n		\"to\":      to,\n		\"from\":    from,\n		\"message\": message,\n	}\n\n	// Convertir les données en JSON\n	jsonData, err := json.Marshal(data)\n	if err != nil {\n		fmt.Println(\"Erreur lors de la conversion en JSON:\", err)\n		return\n	}\n\n	// Effectuer la requête POST\n	url := \"https://api.smspartner.fr/v1/vn/send\"\n	resp, err := http.Post(url, \"application/json\", bytes.NewBuffer(jsonData))\n	if err != nil {\n		fmt.Println(\"Erreur lors de l\'envoi de la requête:\", err)\n		return\n	}\n	defer resp.Body.Close()\n\n	// Traiter la réponse\n	if resp.StatusCode == http.StatusOK {\n		body := new(bytes.Buffer)\n		_, err := body.ReadFrom(resp.Body)\n		if err != nil {\n			fmt.Println(\"Erreur lors de la lecture de la réponse:\", err)\n			return\n		}\n		fmt.Println(body.String())\n	} else {\n		fmt.Println(\"La requête POST a échoué. Code de réponse:\", resp.StatusCode)\n	}\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var request = new\n        {\n            apiKey = \"YOUR_API_KEY\",\n            to = \"336xxxxxxxx\",\n            from = \"336xxxxxxxx\",\n            message = \"This is your message\"\n        };\n\n        var content = new StringContent(\n            JsonConvert.SerializeObject(request),\n            Encoding.UTF8,\n            \"application/json\");\n\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/vn/send\", content);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"POST request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Réponses\n\n### JSON\n```json\n{\n   \"success\":true,\n   \"code\":200,\n   \"message_id\":xxx,\n   \"nb_sms\": 1,\n   \"cost\": xxx,\n   \"currency\": \"EUR\"\n}\n````\n<br> <br>\n', 'fr', 19),
(17, '## Request\r\nRequest example :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;?php\r\n        // Prepare data for POST request\r\n        $fields = array(\r\n            \'apiKey\'=> \'YOUR API KEY\',\r\n            \'to\'=> \'336xxxxxxxx\',\r\n            \'from\' => \'336xxxxxxxx\',\r\n            \'message\'=> \'This is your message\'\r\n        );\r\n \r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/vn/send\');\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n        curl_setopt($curl, CURLOPT_POST, 1);\r\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #send sms\r\n    url = base_url & \"vn/send\"\r\n    #note : utiliser une librairie JSON en production, par exemple :\r\n    #https//www.nuget.org/packages/Newtonsoft.Json/\r\n    Dim parameters As String = String.Format(\r\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"to\"\":\"\"{1}\"\",\"\"from\"\":\"\"{2}\"\",\"\"message\"\":\"\"{3}\"\"}}\",\r\n        apiKey,\r\n        \"336xxxxxxxx\",\r\n        \"336xxxxxxxx\",\r\n        \"message de test\")\r\n    Console.Write(parameters)\r\n    apiRequest(\"POST\", url, parameters)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n    <!-- Python code example goes here -->\r\n    <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def send_sms(self, to, from, msg):\r\n		print(to)\r\n \r\n		data = OrderedDict([\r\n			(\"apiKey\", API_KEY),\r\n			(\"to\", to),\r\n			(\"from\",from),\r\n			(\"message\", msg)\r\n		])\r\n \r\n		url = URL + \"/vn/send\"\r\n		r = requests.post(url, data=json.dumps(data), verify=False)\r\n \r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(\"SMS msg {} not delivered to {}\".format(msg, to))\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\n    curl -H  \"Content-Type: application/json\" -X POST -d \'{\"apiKey\":\"xxxxx\",\"to\":\"xxxx\",\"from\":\"xxx\",\"message\":\"test\"}\' https://api.smspartner.fr/v1/vn/send\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst https = require(\"https\");\r\n\r\n// Remplacez par votre clé API\r\nconst apiKey = \"VOTRE_CLÉ_API\";\r\n\r\n// Préparer les données pour la requête POST\r\nconst data = JSON.stringify({\r\n  apiKey: apiKey,\r\n  to: \"336xxxxxxxx\",\r\n  from: \"336xxxxxxxx\",\r\n  message: \"Ceci est votre message\",\r\n});\r\n\r\n// Définir les options pour la requête HTTP POST vers l\'API SMS Partner\r\nconst options = {\r\n  hostname: \"api.smspartner.fr\",\r\n  port: 443,\r\n  path: \"/v1/vn/send\",\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Content-Length\": data.length,\r\n    \"cache-control\": \"no-cache\",\r\n  },\r\n};\r\n\r\n// Effectuer la requête HTTP POST avec les options et données définies précédemment\r\nconst req = https.request(options, (res) => {\r\n  console.log(`statusCode: ${res.statusCode}`);\r\n\r\n  // Afficher les données de réponse de l\'API sur la sortie standard\r\n  res.on(\"data\", (d) => {\r\n    process.stdout.write(d);\r\n  });\r\n});\r\n\r\n// Afficher en cas d\'erreur lors de l\'exécution de la requête HTTP POST\r\nreq.on(\"error\", (error) => {\r\n  console.error(error);\r\n});\r\n\r\n// Envoyer les données de l\'objet \'data\' à la demande\r\nreq.write(data);\r\n// Terminer la demande HTTP POST\r\nreq.end();\r\n</code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.io.OutputStream;\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.util.stream.Collectors;\r\nimport org.json.JSONObject;\r\n\r\npublic class EnvoyerSMSLong {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Remplacez par votre clé API\r\n            String apiKey = \"VOTRE_CLÉ_API\";\r\n\r\n            // Création de l\'objet URL avec l\'adresse de l\'API SMS\r\n            URL url = new URL(\"https://api.smspartner.fr/v1/vn/send\");\r\n\r\n            // Ouverture de la connexion HTTP avec l\'API\r\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\r\n            conn.setRequestMethod(\"POST\");\r\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\r\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\r\n            conn.setDoOutput(true);\r\n\r\n            // Création de l\'objet JSON contenant les paramètres du SMS à envoyer\r\n            JSONObject json = new JSONObject();\r\n            json.put(\"apiKey\", apiKey);\r\n            json.put(\"to\", \"336xxxxxxxx\");\r\n            json.put(\"from\", \"336xxxxxxxx\");\r\n            json.put(\"message\", \"Ceci est votre message\");\r\n\r\n            // Écriture des données JSON dans le corps de la requête HTTP\r\n            OutputStream os = conn.getOutputStream();\r\n            os.write(json.toString().getBytes());\r\n            os.flush();\r\n\r\n            // Lecture de la réponse de l\'API\r\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\r\n            String response = br.lines().collect(Collectors.joining());\r\n            System.out.println(response);\r\n\r\n            // Fermeture de la connexion HTTP\r\n            conn.disconnect();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\nimport SwiftUI\r\nimport Foundation\r\n\r\n// Struct pour la vue \"EnvoieSMSParNumeroLong\"\r\nstruct EnvoieSMSParNumeroLong: View {\r\n    var body: some View {\r\n        NavigationView {\r\n            VStack {\r\n                // Un bouton qui appelle la fonction EnvoieSMSParNumeroLong() lorsqu\'il est pressé\r\n                Button(action: {\r\n                    EnvoieSMSParNumeroLong()\r\n                }) {\r\n                    Text(\"Envoyer SMS\")\r\n                        .font(.system(size: 20))\r\n                        .foregroundColor(.white)\r\n                        .frame(minWidth: 0, maxWidth: .infinity)\r\n                        .padding()\r\n                        .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))\r\n                        .cornerRadius(10)\r\n                        .padding(.horizontal)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Fonction pour envoyer un SMS par numéro long\r\n    func EnvoieSMSParNumeroLong() {\r\n        let apiKey = \"XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX\" // Votre clé API\r\n        let destinataire = \"33XXXXXXXXX\" // Le numéro du destinataire\r\n        let expediteur = \"33XXXXXXXXX\" // Votre numéro\r\n        let message = \"status\" // Le message à envoyer\r\n\r\n        let url = URL(string: \"https://api.smspartner.fr/v1/vn/send\")! // URL pour envoyer le SMS\r\n        var requete = URLRequest(url: url)\r\n        requete.httpMethod = \"POST\"\r\n        requete.addValue(\"application/json\", forHTTPHeaderField: \"Content-Type\") // Ajout du type de contenu dans l\'en-tête de la requête\r\n\r\n        // Paramètres pour l\'envoi du SMS\r\n        let params: [String: Any] = [\r\n            \"apiKey\": apiKey,\r\n            \"to\": destinataire,\r\n            \"from\": expediteur,\r\n            \"message\": message\r\n        ]\r\n        \r\n        // Ajout des paramètres dans le corps de la requête\r\n        requete.httpBody = try? JSONSerialization.data(withJSONObject: params)\r\n        \r\n        let session = URLSession.shared\r\n        // Tâche pour envoyer la requête\r\n        let task = session.dataTask(with: requete) { (data, response, error) in\r\n            // Si une erreur survient, on l\'affiche\r\n            if let erreur = error {\r\n                print(\"Erreur : (erreur.localizedDescription)\")\r\n                return\r\n            }\r\n            \r\n            // Sinon, on affiche les données reçues\r\n            if let donnees = data {\r\n                if let resultat = String(data: donnees, encoding: .utf8) {\r\n                    print(resultat) // Impression du résultat\r\n                }\r\n            }\r\n        }\r\n        \r\n        task.resume() // On lance la tâche\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n    <!-- GO code example goes here -->\r\n    <pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"bytes\"\r\n	\"fmt\"\r\n	\"net/http\"\r\n)\r\n\r\nfunc main() {\r\n	apiKey := \"YOUR API KEY\"\r\n	to := \"336xxxxxxxx\"\r\n	from := \"336xxxxxxxx\"\r\n	message := \"This is your message\"\r\n\r\n	// Construire les données JSON pour la requête POST\r\n	data := map[string]interface{}{\r\n		\"apiKey\":  apiKey,\r\n		\"to\":      to,\r\n		\"from\":    from,\r\n		\"message\": message,\r\n	}\r\n\r\n	// Convertir les données en JSON\r\n	jsonData, err := json.Marshal(data)\r\n	if err != nil {\r\n		fmt.Println(\"Erreur lors de la conversion en JSON:\", err)\r\n		return\r\n	}\r\n\r\n	// Effectuer la requête POST\r\n	url := \"https://api.smspartner.fr/v1/vn/send\"\r\n	resp, err := http.Post(url, \"application/json\", bytes.NewBuffer(jsonData))\r\n	if err != nil {\r\n		fmt.Println(\"Erreur lors de l\'envoi de la requête:\", err)\r\n		return\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Traiter la réponse\r\n	if resp.StatusCode == http.StatusOK {\r\n		body := new(bytes.Buffer)\r\n		_, err := body.ReadFrom(resp.Body)\r\n		if err != nil {\r\n			fmt.Println(\"Erreur lors de la lecture de la réponse:\", err)\r\n			return\r\n		}\r\n		fmt.Println(body.String())\r\n	} else {\r\n		fmt.Println(\"La requête POST a échoué. Code de réponse:\", resp.StatusCode)\r\n	}\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Newtonsoft.Json;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var request = new\r\n        {\r\n            apiKey = \"YOUR_API_KEY\",\r\n            to = \"336xxxxxxxx\",\r\n            from = \"336xxxxxxxx\",\r\n            message = \"This is your message\"\r\n        };\r\n\r\n        var content = new StringContent(\r\n            JsonConvert.SerializeObject(request),\r\n            Encoding.UTF8,\r\n            \"application/json\");\r\n\r\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/vn/send\", content);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"POST request failed with status code: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Responses\r\n\r\n### JSON\r\n```json\r\n{\r\n   \"success\":true,\r\n   \"code\":200,\r\n   \"message_id\":xxx,\r\n   \"nb_sms\": 1,\r\n   \"cost\": xxx,\r\n   \"currency\": \"EUR\"\r\n}\r\n````\r\n<br> <br>\r\n', 'en', 20),
(18, '## Requête\r\nExemple de requête :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;?php\r\n        // Prepare data for POST request\r\n        $fields = array(\r\n            \'apiKey\'=> \'YOUR API KEY\',\r\n            \'phoneNumbers\'=> \'336xxxxxxxx\',\r\n            \'sondageIdent\' => \'SONDAGE_IDENT\',\r\n            \'scheduledDeliveryDate\'=> \'21/10/2014\',\r\n            \'time\'=> 9,\r\n            \'minute\'=> 0\r\n        );\r\n \r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/sondage/to/send\');\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n        curl_setopt($curl, CURLOPT_POST, 1);\r\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #send sms\r\n    url = base_url & \"sondage/to/send\"\r\n    #note : utiliser une librairie JSON en production, par exemple :\r\n    #https//www.nuget.org/packages/Newtonsoft.Json/\r\n    Dim parameters As String = String.Format(\r\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"phoneNumbers\"\":\"\"{1}\"\",\"\"sondageIdent\"\":\"\"{2}\"\"}}\",\r\n        apiKey,\r\n        \"+33XXXXXXXXX\",\r\n        \"SONDAGE_IDENT\")\r\n    Console.Write(parameters)\r\n    apiRequest(\"POST\", url, parameters)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n    <!-- Python code example goes here -->\r\n    <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def send_sms(self,phone_numbers, sondageIdent):\r\n		#sender = \"DEMOSMS\"\r\n		print(phone_numbers)\r\n \r\n		data = OrderedDict([\r\n			(\"apiKey\", API_KEY),\r\n			(\"phoneNumbers\", phone_numbers),\r\n			(\"sondageIdent\", sondageIdent)\r\n		])\r\n \r\n		url = URL + \"/send\"\r\n		r = requests.post(url, data=json.dumps(data), verify=False)\r\n \r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(\"SMS msg {} not delivered to {}\".format(msg, phone_numbers))\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\n    curl -H  \"Content-Type: application/json\" -X POST -d \'{\"apiKey\":\"xxxxx\",\"phoneNumbers\":\"xxxx\",\"sondageIdent\":\"SONDAGE_IDENT\"}\' https://api.smspartner.fr/v1/sondage/to/send\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst https = require(\'https\');\r\n\r\n// Préparer les données pour la requête POST\r\nlet data = JSON.stringify({\r\n  apiKey: \'YOUR API KEY\',\r\n  phoneNumbers: \'+336XXXXXXXX\',\r\n  // identifiant du sondage que vous avez créé dans votre compte SMS Partner\r\n  sondageIdent: \'SONDAGE ID\',\r\n  scheduledDeliveryDate: \'04/07/2023\',\r\n  time: 11,\r\n  minute: 55 //tous les 5 minutes ex: 00, 05, 10, 15, 20, etc.\r\n});\r\n\r\nlet options = {\r\n  hostname: \'api.smspartner.fr\',\r\n  path: \'/v1/sondage/to/send\',\r\n  method: \'POST\',\r\n  headers: {\r\n    \'Content-Type\': \'application/json\',\r\n    \'Content-Length\': data.length\r\n  }\r\n};\r\n\r\nlet req = https.request(options, (res) => {\r\n  let data = \'\';\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  console.log(\"Erreur: \" + err.message);\r\n});\r\n\r\nreq.write(data);\r\nreq.end();\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.io.OutputStream;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class SondageParSMS {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for POST request\r\n            String apiKey = \"your_api_key\";\r\n            String phoneNumbers = \"+336XXXXXXXX\";\r\n            String sondageIdent = \"your_sondage_ident\";\r\n            String scheduledDeliveryDate = \"05/07/2023\";\r\n            int time = 10;\r\n            int minute = 35;\r\n\r\n            // Create JSON payload\r\n            String jsonPayload = \"{\"apiKey\": \"\" + apiKey + \"\", \"phoneNumbers\": \"\" + phoneNumbers +\r\n                    \"\", \"sondageIdent\": \"\" + sondageIdent + \"\", \"scheduledDeliveryDate\": \"\" +\r\n                    scheduledDeliveryDate + \"\", \"time\": \" + time + \", \"minute\": \" + minute + \"}\";\r\n\r\n            // Create POST request\r\n            URL url = new URL(\"https://api.smspartner.fr/v1/sondage/to/send\");\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"POST\");\r\n            connection.setRequestProperty(\"Content-Type\", \"application/json\");\r\n            connection.setDoOutput(true);\r\n\r\n            // Send POST request\r\n            OutputStream outputStream = connection.getOutputStream();\r\n            outputStream.write(jsonPayload.getBytes());\r\n            outputStream.flush();\r\n            outputStream.close();\r\n\r\n            // Get response\r\n            int responseCode = connection.getResponseCode();\r\n            BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\r\n            StringBuilder response = new StringBuilder();\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                response.append(line);\r\n            }\r\n            reader.close();\r\n\r\n            // Process your response here\r\n            System.out.println(response.toString());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\nimport SwiftUI\r\n\r\nstruct SondageSMS: View {\r\n    @State private var result: String = \"Loading...\"\r\n\r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Sondage SMS\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: sendSondage)\r\n    }\r\n\r\n    func sendSondage() {\r\n        let apiKey = \"YOUR_API_KEY\"\r\n        let phoneNumber = \"+336xxxxxxxx\"\r\n        let sondageIdent = \"SONDAGE_IDENT\"\r\n        let scheduledDeliveryDate = \"05/07/2023\"\r\n        let time = 9\r\n        let minute = 0\r\n\r\n        let urlString = \"https://api.smspartner.fr/v1/sondage/to/send\"\r\n        let url = URL(string: urlString)!\r\n\r\n        var request = URLRequest(url: url)\r\n        request.httpMethod = \"POST\"\r\n        request.addValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\r\n\r\n        let parameters: [String: Any] = [\r\n            \"apiKey\": apiKey,\r\n            \"phoneNumbers\": phoneNumber,\r\n            \"sondageIdent\": sondageIdent,\r\n            \"scheduledDeliveryDate\": scheduledDeliveryDate,\r\n            \"time\": time,\r\n            \"minute\": minute\r\n        ]\r\n\r\n        request.httpBody = try? JSONSerialization.data(withJSONObject: parameters)\r\n\r\n        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n            } else if let data = data {\r\n                let resultString = String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = resultString ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume()\r\n    }\r\n}\r\n\r\nstruct SondageSMS_Previews: PreviewProvider {\r\n    static var previews: some View {\r\n        SondageSMS()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n    <!-- GO code example goes here -->\r\n    <pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"bytes\"\r\n	\"encoding/json\"\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n	\"time\"\r\n)\r\n\r\nfunc main() {\r\n	// Prepare data for POST request\r\n	data := map[string]interface{}{\r\n		\"apiKey\":                \"YOUR API KEY\",\r\n		\"phoneNumbers\":          \"+336xxxxxxxx\",\r\n		\"sondageIdent\":          \"SONDAGE_IDENT\",\r\n		\"scheduledDeliveryDate\": \"21/10/2024\",\r\n		\"time\":                  9,\r\n		\"minute\":                0,\r\n	}\r\n\r\n	payload, err := json.Marshal(data)\r\n	if err != nil {\r\n		log.Fatalf(\"Error preparing data: %v\", err)\r\n	}\r\n\r\n	// Create POST request\r\n	client := &http.Client{Timeout: 10 * time.Second}\r\n	req, err := http.NewRequest(\"POST\", \"https://api.smspartner.fr/v1/sondage/to/send\", bytes.NewBuffer(payload))\r\n	if err != nil {\r\n		log.Fatalf(\"Error creating request: %v\", err)\r\n	}\r\n\r\n	req.Header.Set(\"Content-Type\", \"application/json\")\r\n\r\n	// Send POST request\r\n	resp, err := client.Do(req)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Get response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response body: %v\", err)\r\n	}\r\n\r\n	// Process your response here\r\n	log.Printf(\"Response: %s\", body)\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Newtonsoft.Json;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var request = new\r\n        {\r\n            apiKey = \"YOUR_API_KEY\",\r\n            phoneNumbers = \"+336xxxxxxxx\",\r\n            sondageIdent = \"SONDAGE_IDENT\",\r\n            scheduledDeliveryDate = \"21/10/2014\",\r\n            time = 9,\r\n            minute = 0\r\n        };\r\n\r\n        var content = new StringContent(\r\n            JsonConvert.SerializeObject(request),\r\n            Encoding.UTF8,\r\n            \"application/json\");\r\n\r\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/sondage/to/send\", content);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"POST request failed with status code: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Réponses\r\n\r\n### JSON\r\n```json\r\n{\r\n   \"success\":true,\r\n   \"code\":200,\r\n   \"message_id\":307,\r\n   \"nb_sms\": 1,\r\n   \"cost\": 0.038,\r\n   \"currency\": \"EUR\"\r\n}\r\n```\r\n', 'fr', 21);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(19, '## Request\r\nRequest example\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;?php\r\n        // Prepare data for POST request\r\n        $fields = array(\r\n            \'apiKey\'=> \'YOUR API KEY\',\r\n            \'phoneNumbers\'=> \'336xxxxxxxx\',\r\n            \'sondageIdent\' => \'SONDAGE_IDENT\',\r\n            \'scheduledDeliveryDate\'=> \'21/10/2014\',\r\n            \'time\'=> 9,\r\n            \'minute\'=> 0\r\n        );\r\n \r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/sondage/to/send\');\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n        curl_setopt($curl, CURLOPT_POST, 1);\r\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #send sms\r\n    url = base_url & \"sondage/to/send\"\r\n    #note : utiliser une librairie JSON en production, par exemple :\r\n    #https//www.nuget.org/packages/Newtonsoft.Json/\r\n    Dim parameters As String = String.Format(\r\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"phoneNumbers\"\":\"\"{1}\"\",\"\"sondageIdent\"\":\"\"{2}\"\"}}\",\r\n        apiKey,\r\n        \"+33XXXXXXXXX\",\r\n        \"SONDAGE_IDENT\")\r\n    Console.Write(parameters)\r\n    apiRequest(\"POST\", url, parameters)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n    <!-- Python code example goes here -->\r\n    <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def send_sms(self,phone_numbers, sondageIdent):\r\n		#sender = \"DEMOSMS\"\r\n		print(phone_numbers)\r\n \r\n		data = OrderedDict([\r\n			(\"apiKey\", API_KEY),\r\n			(\"phoneNumbers\", phone_numbers),\r\n			(\"sondageIdent\", sondageIdent)\r\n		])\r\n \r\n		url = URL + \"/send\"\r\n		r = requests.post(url, data=json.dumps(data), verify=False)\r\n \r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(\"SMS msg {} not delivered to {}\".format(msg, phone_numbers))\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\n    curl -H  \"Content-Type: application/json\" -X POST -d \'{\"apiKey\":\"xxxxx\",\"phoneNumbers\":\"xxxx\",\"sondageIdent\":\"SONDAGE_IDENT\"}\' https://api.smspartner.fr/v1/sondage/to/send\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst https = require(\'https\');\r\n\r\n// Préparer les données pour la requête POST\r\nlet data = JSON.stringify({\r\n  apiKey: \'YOUR API KEY\',\r\n  phoneNumbers: \'+336XXXXXXXX\',\r\n  // identifiant du sondage que vous avez créé dans votre compte SMS Partner\r\n  sondageIdent: \'SONDAGE ID\',\r\n  scheduledDeliveryDate: \'04/07/2023\',\r\n  time: 11,\r\n  minute: 55 //tous les 5 minutes ex: 00, 05, 10, 15, 20, etc.\r\n});\r\n\r\nlet options = {\r\n  hostname: \'api.smspartner.fr\',\r\n  path: \'/v1/sondage/to/send\',\r\n  method: \'POST\',\r\n  headers: {\r\n    \'Content-Type\': \'application/json\',\r\n    \'Content-Length\': data.length\r\n  }\r\n};\r\n\r\nlet req = https.request(options, (res) => {\r\n  let data = \'\';\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  console.log(\"Erreur: \" + err.message);\r\n});\r\n\r\nreq.write(data);\r\nreq.end();\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.io.OutputStream;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class SondageParSMS {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for POST request\r\n            String apiKey = \"your_api_key\";\r\n            String phoneNumbers = \"+336XXXXXXXX\";\r\n            String sondageIdent = \"your_sondage_ident\";\r\n            String scheduledDeliveryDate = \"05/07/2023\";\r\n            int time = 10;\r\n            int minute = 35;\r\n\r\n            // Create JSON payload\r\n            String jsonPayload = \"{\"apiKey\": \"\" + apiKey + \"\", \"phoneNumbers\": \"\" + phoneNumbers +\r\n                    \"\", \"sondageIdent\": \"\" + sondageIdent + \"\", \"scheduledDeliveryDate\": \"\" +\r\n                    scheduledDeliveryDate + \"\", \"time\": \" + time + \", \"minute\": \" + minute + \"}\";\r\n\r\n            // Create POST request\r\n            URL url = new URL(\"https://api.smspartner.fr/v1/sondage/to/send\");\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"POST\");\r\n            connection.setRequestProperty(\"Content-Type\", \"application/json\");\r\n            connection.setDoOutput(true);\r\n\r\n            // Send POST request\r\n            OutputStream outputStream = connection.getOutputStream();\r\n            outputStream.write(jsonPayload.getBytes());\r\n            outputStream.flush();\r\n            outputStream.close();\r\n\r\n            // Get response\r\n            int responseCode = connection.getResponseCode();\r\n            BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\r\n            StringBuilder response = new StringBuilder();\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                response.append(line);\r\n            }\r\n            reader.close();\r\n\r\n            // Process your response here\r\n            System.out.println(response.toString());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\nimport SwiftUI\r\n\r\nstruct SondageSMS: View {\r\n    @State private var result: String = \"Loading...\"\r\n\r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Sondage SMS\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: sendSondage)\r\n    }\r\n\r\n    func sendSondage() {\r\n        let apiKey = \"YOUR_API_KEY\"\r\n        let phoneNumber = \"+336xxxxxxxx\"\r\n        let sondageIdent = \"SONDAGE_IDENT\"\r\n        let scheduledDeliveryDate = \"05/07/2023\"\r\n        let time = 9\r\n        let minute = 0\r\n\r\n        let urlString = \"https://api.smspartner.fr/v1/sondage/to/send\"\r\n        let url = URL(string: urlString)!\r\n\r\n        var request = URLRequest(url: url)\r\n        request.httpMethod = \"POST\"\r\n        request.addValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\r\n\r\n        let parameters: [String: Any] = [\r\n            \"apiKey\": apiKey,\r\n            \"phoneNumbers\": phoneNumber,\r\n            \"sondageIdent\": sondageIdent,\r\n            \"scheduledDeliveryDate\": scheduledDeliveryDate,\r\n            \"time\": time,\r\n            \"minute\": minute\r\n        ]\r\n\r\n        request.httpBody = try? JSONSerialization.data(withJSONObject: parameters)\r\n\r\n        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n            } else if let data = data {\r\n                let resultString = String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = resultString ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume()\r\n    }\r\n}\r\n\r\nstruct SondageSMS_Previews: PreviewProvider {\r\n    static var previews: some View {\r\n        SondageSMS()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n    <!-- GO code example goes here -->\r\n    <pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"bytes\"\r\n	\"encoding/json\"\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n	\"time\"\r\n)\r\n\r\nfunc main() {\r\n	// Prepare data for POST request\r\n	data := map[string]interface{}{\r\n		\"apiKey\":                \"YOUR API KEY\",\r\n		\"phoneNumbers\":          \"+336xxxxxxxx\",\r\n		\"sondageIdent\":          \"SONDAGE_IDENT\",\r\n		\"scheduledDeliveryDate\": \"21/10/2024\",\r\n		\"time\":                  9,\r\n		\"minute\":                0,\r\n	}\r\n\r\n	payload, err := json.Marshal(data)\r\n	if err != nil {\r\n		log.Fatalf(\"Error preparing data: %v\", err)\r\n	}\r\n\r\n	// Create POST request\r\n	client := &http.Client{Timeout: 10 * time.Second}\r\n	req, err := http.NewRequest(\"POST\", \"https://api.smspartner.fr/v1/sondage/to/send\", bytes.NewBuffer(payload))\r\n	if err != nil {\r\n		log.Fatalf(\"Error creating request: %v\", err)\r\n	}\r\n\r\n	req.Header.Set(\"Content-Type\", \"application/json\")\r\n\r\n	// Send POST request\r\n	resp, err := client.Do(req)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Get response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response body: %v\", err)\r\n	}\r\n\r\n	// Process your response here\r\n	log.Printf(\"Response: %s\", body)\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Newtonsoft.Json;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var request = new\r\n        {\r\n            apiKey = \"YOUR_API_KEY\",\r\n            phoneNumbers = \"+336xxxxxxxx\",\r\n            sondageIdent = \"SONDAGE_IDENT\",\r\n            scheduledDeliveryDate = \"21/10/2014\",\r\n            time = 9,\r\n            minute = 0\r\n        };\r\n\r\n        var content = new StringContent(\r\n            JsonConvert.SerializeObject(request),\r\n            Encoding.UTF8,\r\n            \"application/json\");\r\n\r\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/sondage/to/send\", content);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"POST request failed with status code: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Responses\r\n\r\n### JSON\r\n```json\r\n{\r\n   \"success\":true,\r\n   \"code\":200,\r\n   \"message_id\":307,\r\n   \"nb_sms\": 1,\r\n   \"cost\": 0.038,\r\n   \"currency\": \"EUR\"\r\n}\r\n```\r\n', 'en', 22),
(20, '## Requête\r\nExemple de requête :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;?php\r\n        // Prepare data for GET request\r\n        $data = \'apiKey=YOUR_API_KEY&messageId=300\';\r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/message-cancel?\'.$data);\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n \r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n    Dim messageId As Integer = XXX\r\n \r\n    #check credits\r\n    Dim url As String\r\n    url = base_url & \"message-cancel\" & \"?apiKey=\" & apiKey & \"&messageId=\" & messageId\r\n \r\n    Dim credits As String\r\n    credits = apiRequest(\"GET\", url, Nothing)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n    <!-- Python code example goes here -->\r\n    <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def get_delivery(self,phone_numbers,message_id):\r\n		url = URL + \"/message-cancel?apiKey=\" + API_KEY + \"&messageId=\" + message_id\r\n		r = requests.get(url)\r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\n  curl -H  \"Content-Type: application/json\" -X GET  https://api.smspartner.fr/v1/message-cancel?apiKey=xxx&messageId=300\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst https = require(\'https\');\r\n\r\n// Préparer les données pour la requête GET\r\nlet data = \'apiKey=YOUR_API_KEY&messageId=300\';\r\nlet url = \'https://api.smspartner.fr/v1/message-cancel?\' + data;\r\n\r\nhttps.get(url, (res) => {\r\n  let data = \'\';\r\n\r\n  // Un morceau de données a été reçu.\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  // La totalité de la réponse a été reçue. Imprimer le résultat.\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  // Un message d\'erreur sera imprimé en cas d\'erreur.\r\n  console.log(\"Erreur: \" + err.message);\r\n});\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class AnnulerEnvoiSMS {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for GET request\r\n            String apiKey = \"YOUR_API_KEY\";\r\n            String messageId = \"300\";\r\n\r\n            // Create GET request URL\r\n            String urlString = \"https://api.smspartner.fr/v1/message-cancel?\" +\r\n                    \"apiKey=\" + apiKey + \"&messageId=\" + messageId;\r\n\r\n            // Create URL object\r\n            URL url = new URL(urlString);\r\n\r\n            // Create HTTP connection\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"GET\");\r\n            connection.setConnectTimeout(10000);\r\n            connection.setReadTimeout(10000);\r\n\r\n            // Send GET request\r\n            int responseCode = connection.getResponseCode();\r\n\r\n            // Get response\r\n            BufferedReader reader;\r\n            if (responseCode >= 200 && responseCode <= 299) {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\r\n            } else {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));\r\n            }\r\n\r\n            StringBuilder response = new StringBuilder();\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                response.append(line);\r\n            }\r\n            reader.close();\r\n\r\n            // Process your response here\r\n            System.out.println(response.toString());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\nimport SwiftUI\r\n\r\nstruct AnnulerEnvoi: View {\r\n    @State private var result: String = \"Loading...\"\r\n\r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Annuler Envoi\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: cancelMessage)\r\n    }\r\n\r\n    func cancelMessage() {\r\n        let apiKey = \"YOUR_API_KEY\"\r\n        let messageId = \"300\"\r\n        let urlString = \"https://api.smspartner.fr/v1/message-cancel?apiKey=(apiKey)&messageId=(messageId)\"\r\n\r\n        guard let url = URL(string: urlString) else {\r\n            print(\"URL inválida\")\r\n            return\r\n        }\r\n\r\n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n            } else if let data = data {\r\n                let result = String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = result ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume()\r\n    }\r\n}\r\n\r\nstruct AnnulerEnvoi_Previews: PreviewProvider {\r\n    static var previews: some View {\r\n        AnnulerEnvoi()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n    <!-- GO code example goes here -->\r\n    <pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n	\"time\"\r\n)\r\n\r\nfunc main() {\r\n	// Prepare data for GET request\r\n	apiKey := \"YOUR_API_KEY\"\r\n	messageId := \"300\"\r\n\r\n	// Create GET request URL\r\n	url := \"https://api.smspartner.fr/v1/message-cancel?\" +\r\n		\"apiKey=\" + apiKey + \"&messageId=\" + messageId\r\n\r\n	// Create HTTP client\r\n	client := &http.Client{Timeout: 10 * time.Second}\r\n\r\n	// Send GET request\r\n	resp, err := client.Get(url)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Get response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response body: %v\", err)\r\n	}\r\n\r\n	// Process your response here\r\n	log.Printf(\"Response: %s\", body)\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var apiKey = \"YOUR_API_KEY\";\r\n        var messageId = \"300\";\r\n        var uri = new Uri($\"https://api.smspartner.fr/v1/message-cancel?apiKey={apiKey}&messageId={messageId}\");\r\n\r\n        HttpResponseMessage response = await client.GetAsync(uri);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Réponses\r\n\r\n### JSON\r\n```json\r\n{\r\n  \"success\": true,\r\n  \"code\": 200,\r\n  \"message\": \"L\'envoi du SMS a été annulé.\"\r\n}\r\n```\r\n', 'fr', 23),
(21, '\r\n## Request\r\nRequest example\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;?php\r\n        // Prepare data for GET request\r\n        $data = \'apiKey=YOUR_API_KEY&messageId=300\';\r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/message-cancel?\'.$data);\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n \r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n    Dim messageId As Integer = XXX\r\n \r\n    #check credits\r\n    Dim url As String\r\n    url = base_url & \"message-cancel\" & \"?apiKey=\" & apiKey & \"&messageId=\" & messageId\r\n \r\n    Dim credits As String\r\n    credits = apiRequest(\"GET\", url, Nothing)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n    <!-- Python code example goes here -->\r\n    <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def get_delivery(self,phone_numbers,message_id):\r\n		url = URL + \"/message-cancel?apiKey=\" + API_KEY + \"&messageId=\" + message_id\r\n		r = requests.get(url)\r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\n  curl -H  \"Content-Type: application/json\" -X GET  https://api.smspartner.fr/v1/message-cancel?apiKey=xxx&messageId=300\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst https = require(\'https\');\r\n\r\n// Préparer les données pour la requête GET\r\nlet data = \'apiKey=YOUR_API_KEY&messageId=300\';\r\nlet url = \'https://api.smspartner.fr/v1/message-cancel?\' + data;\r\n\r\nhttps.get(url, (res) => {\r\n  let data = \'\';\r\n\r\n  // Un morceau de données a été reçu.\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  // La totalité de la réponse a été reçue. Imprimer le résultat.\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  // Un message d\'erreur sera imprimé en cas d\'erreur.\r\n  console.log(\"Erreur: \" + err.message);\r\n});\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class AnnulerEnvoiSMS {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for GET request\r\n            String apiKey = \"YOUR_API_KEY\";\r\n            String messageId = \"300\";\r\n\r\n            // Create GET request URL\r\n            String urlString = \"https://api.smspartner.fr/v1/message-cancel?\" +\r\n                    \"apiKey=\" + apiKey + \"&messageId=\" + messageId;\r\n\r\n            // Create URL object\r\n            URL url = new URL(urlString);\r\n\r\n            // Create HTTP connection\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"GET\");\r\n            connection.setConnectTimeout(10000);\r\n            connection.setReadTimeout(10000);\r\n\r\n            // Send GET request\r\n            int responseCode = connection.getResponseCode();\r\n\r\n            // Get response\r\n            BufferedReader reader;\r\n            if (responseCode >= 200 && responseCode <= 299) {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\r\n            } else {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));\r\n            }\r\n\r\n            StringBuilder response = new StringBuilder();\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                response.append(line);\r\n            }\r\n            reader.close();\r\n\r\n            // Process your response here\r\n            System.out.println(response.toString());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\nimport SwiftUI\r\n\r\nstruct AnnulerEnvoi: View {\r\n    @State private var result: String = \"Loading...\"\r\n\r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Annuler Envoi\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: cancelMessage)\r\n    }\r\n\r\n    func cancelMessage() {\r\n        let apiKey = \"YOUR_API_KEY\"\r\n        let messageId = \"300\"\r\n        let urlString = \"https://api.smspartner.fr/v1/message-cancel?apiKey=(apiKey)&messageId=(messageId)\"\r\n\r\n        guard let url = URL(string: urlString) else {\r\n            print(\"URL inválida\")\r\n            return\r\n        }\r\n\r\n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n            } else if let data = data {\r\n                let result = String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = result ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume()\r\n    }\r\n}\r\n\r\nstruct AnnulerEnvoi_Previews: PreviewProvider {\r\n    static var previews: some View {\r\n        AnnulerEnvoi()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n    <!-- GO code example goes here -->\r\n    <pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n	\"time\"\r\n)\r\n\r\nfunc main() {\r\n	// Prepare data for GET request\r\n	apiKey := \"YOUR_API_KEY\"\r\n	messageId := \"300\"\r\n\r\n	// Create GET request URL\r\n	url := \"https://api.smspartner.fr/v1/message-cancel?\" +\r\n		\"apiKey=\" + apiKey + \"&messageId=\" + messageId\r\n\r\n	// Create HTTP client\r\n	client := &http.Client{Timeout: 10 * time.Second}\r\n\r\n	// Send GET request\r\n	resp, err := client.Get(url)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Get response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response body: %v\", err)\r\n	}\r\n\r\n	// Process your response here\r\n	log.Printf(\"Response: %s\", body)\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var apiKey = \"YOUR_API_KEY\";\r\n        var messageId = \"300\";\r\n        var uri = new Uri($\"https://api.smspartner.fr/v1/message-cancel?apiKey={apiKey}&messageId={messageId}\");\r\n\r\n        HttpResponseMessage response = await client.GetAsync(uri);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Response\r\n\r\n### JSON\r\n```json\r\n{\r\n  \"success\": true,\r\n  \"code\": 200,\r\n  \"message\": \"L\'envoi du SMS a été annulé.\"\r\n}\r\n```\r\n', 'en', 24);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(22, '## Requête\r\nExemple de requête :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? // Prepare data for GET request\r\n        $data = \'apiKey=YOUR_API_KEY&messageId=300&phoneNumber=06xxxxxxxx\';\r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/message-status?\'.$data);\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n \r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n    Dim phoneNumber As String = \"06XXXXXXXX\"\r\n    Dim messageId As Integer = XXX\r\n \r\n    #check credits\r\n    Dim url As String\r\n    url = base_url & \"message-status\" & \"?apiKey=\" & apiKey & \"&phoneNumber=\" & phoneNumber & \"&messageId=\" & messageId\r\n \r\n    Dim credits As String\r\n    credits = apiRequest(\"GET\", url, Nothing)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n    <!-- Python code example goes here -->\r\n    <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def get_delivery(self,phone_numbers,message_id):\r\n		url = URL + \"/message-status?apiKey=\" + API_KEY + \"&phoneNumber=\" + phone_numbers + \"&messageId=\" + message_id\r\n		r = requests.get(url)\r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" -X GET  https://api.smspartner.fr/v1/message-status?apiKey=xxx&messageId=300&phoneNumber=06xxxxxxxx\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst https = require(\"https\");\r\n\r\n// Remplacez par votre clé API et autres données\r\nconst apiKey = \"VOTRE_CLÉ_API\";\r\nconst messageId = \"300\";\r\nconst phoneNumber = \"06xxxxxxxx\";\r\n\r\n// Préparer les données pour la requête GET\r\nconst data = `apiKey=${apiKey}&messageId=${messageId}&phoneNumber=${phoneNumber}`;\r\n\r\n// Définir les options pour la requête HTTP GET vers l\'API SMS Partner\r\nconst options = {\r\n  hostname: \"api.smspartner.fr\",\r\n  port: 443,\r\n  path: `/v1/message-status?${data}`,\r\n  method: \"GET\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"cache-control\": \"no-cache\",\r\n  },\r\n};\r\n\r\n// Effectuer la requête HTTP GET avec les options et données définies précédemment\r\nconst req = https.request(options, (res) => {\r\n  console.log(`statusCode: ${res.statusCode}`);\r\n\r\n  // Afficher les données de réponse de l\'API sur la sortie standard\r\n  res.on(\"data\", (d) => {\r\n    process.stdout.write(d);\r\n  });\r\n});\r\n\r\n// Afficher en cas d\'erreur lors de l\'exécution de la requête HTTP GET\r\nreq.on(\"error\", (error) => {\r\n  console.error(error);\r\n});\r\n\r\n// Terminer la requête HTTP GET\r\nreq.end();\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.util.stream.Collectors;\r\nimport org.json.JSONObject;\r\n\r\npublic class SMSSTatus {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Remplacez par votre clé API et autres données\r\n            String apiKey = \"VOTRE_CLÉ_API\";\r\n            String messageId = \"300\";\r\n            String phoneNumber = \"06xxxxxxxx\";\r\n\r\n            // Préparer les données pour la requête GET\r\n            String data = String.format(\"apiKey=%s&messageId=%s&phoneNumber=%s\", apiKey, messageId, phoneNumber);\r\n            URL url = new URL(\"https://api.smspartner.fr/v1/message-status?\" + data);\r\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\r\n            conn.setRequestMethod(\"GET\");\r\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\r\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\r\n\r\n            // Lecture de la réponse de l\'API\r\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\r\n            String response = br.lines().collect(Collectors.joining());\r\n\r\n            // Afficher la réponse JSON\r\n            System.out.println(response);\r\n\r\n            // Fermeture de la connexion HTTP\r\n            conn.disconnect();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\nimport SwiftUI\r\n\r\n// Structure pour la vue \"StatutSMS\"\r\nstruct StatutSMS: View {\r\n   var body: some View {\r\n       // Un bouton qui appelle la fonction StatutSMS() lorsqu\'il est pressé\r\n       Button(action: {\r\n           StatutSMS()\r\n       }) {\r\n           Text(\"Check SMS Status\")\r\n               .font(.system(size: 20))\r\n               .foregroundColor(.white)\r\n               .frame(minWidth: 0, maxWidth: .infinity)\r\n               .padding()\r\n               .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))\r\n               .cornerRadius(10)\r\n               .padding(.horizontal)\r\n       }\r\n   }\r\n   \r\n   // Fonction pour vérifier le statut d\'un SMS\r\n   func StatutSMS() {\r\n       let apiKey = \"XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX\" // Votre clé API\r\n       let messageId = \"your msg ID\" // ID de votre message\r\n       let phoneNumber = \"06XXXXXXXX\" // Numéro de téléphone\r\n\r\n       // URL pour vérifier le statut du SMS\r\n       let urlString = \"https://api.smspartner.fr/v1/message-status?apiKey=(apiKey)&messageId=(messageId)&phoneNumber=(phoneNumber)\"\r\n\r\n       // On vérifie que l\'URL est correctement formée\r\n       guard let url = URL(string: urlString) else {\r\n           print(\"Erreur : impossible de créer l\'URL\")\r\n           return\r\n       }\r\n\r\n       // Tâche pour récupérer les données de l\'URL\r\n       let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\r\n           // Si une erreur se produit, on l\'affiche\r\n           if let error = error {\r\n               print(\"Erreur : (error)\")\r\n           }\r\n           // Sinon, on affiche les données reçues\r\n           else if let data = data {\r\n               let str = String(data: data, encoding: .utf8)\r\n               print(\"Données reçues :\n(str ?? \"\")\")\r\n           }\r\n       }\r\n       \r\n       task.resume() // On lance la tâche\r\n   }\r\n}\r\n\r\n// Aperçu de la vue\r\nstruct StatutSMS_Previews: PreviewProvider {\r\n   static var previews: some View {\r\n       StatutSMS()\r\n   }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n    <!-- GO code example goes here -->\r\n    <pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n	\"time\"\r\n)\r\n\r\nfunc main() {\r\n	// Prepare data for GET request\r\n	apiKey := \"YOUR_API_KEY\"\r\n	messageId := \"300\"\r\n	phoneNumber := \"06xxxxxxxx\"\r\n\r\n	// Create GET request URL\r\n	url := \"https://api.smspartner.fr/v1/message-status?\" +\r\n		\"apiKey=\" + apiKey + \"&messageId=\" + messageId + \"&phoneNumber=\" + phoneNumber\r\n\r\n	// Create HTTP client\r\n	client := &http.Client{Timeout: 10 * time.Second}\r\n\r\n	// Send GET request\r\n	resp, err := client.Get(url)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Get response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response body: %v\", err)\r\n	}\r\n\r\n	// Process your response here\r\n	log.Printf(\"Response: %s\", body)\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var apiKey = \"YOUR_API_KEY\";\r\n        var messageId = \"300\";\r\n        var phoneNumber = \"06xxxxxxxx\";\r\n        var uri = new Uri($\"https://api.smspartner.fr/v1/message-status?apiKey={apiKey}&messageId={messageId}&phoneNumber={phoneNumber}\");\r\n\r\n        HttpResponseMessage response = await client.GetAsync(uri);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Réponses\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": true,\r\n    \"code\": 200,\r\n    \"number\": \"0600000000\",\r\n    \"messageId\": \"1111\",\r\n    \"stopSms\": false,\r\n    \"date\": \"2015-02-07 22:39:46\",\r\n    \"statut\": \"Delivered\",\r\n    \"cost\": 0.045,\r\n    \"countryCode\": \"FR\",\r\n    \"currency\": \"EUR\"\r\n}\r\n```\r\n### 3 statuts de remises possibles\r\n* **Delivered (Livré)** : Ce statut indique que le message a été livré avec succès au destinataire. Cela signifie que le message a été envoyé correctement et qu’il a été reçu sur l’appareil ou la plateforme du destinataire. La date et l’heure de la réception est normalement disponible.\r\n* **Not delivered (Non livré)** : Ce statut fait référence aux messages qui n’ont pas pu être livrés au destinataire. Il peut y avoir plusieurs raisons pour lesquelles un message n’est pas livré : comme un numéro de téléphone non valide ou un problème opérateurs chez un opérateur.\r\n* **Waiting (En attente)** : Ce statut indique que le message est en cours de livraison et qu’il n’a pas encore été confirmé s’il sera livré ou non. Cela peut se produire en cas de retards sur le réseau ou lorsque des confirmations supplémentaires sont nécessaires avant de pouvoir marquer le message comme livré ou non livré.\r\n', 'fr', 25),
(23, '## Request\nRequest example\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;? // Prepare data for GET request\n        $data = \'apiKey=\n        YOUR_API_KEY&messageId=300&phoneNumber=06xxxxxxxx\';\n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\n        \'https://api.smspartner.fr/v1/message-status?\'.$data);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n \n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n    Dim phoneNumber As String = \"06XXXXXXXX\"\n    Dim messageId As Integer = XXX\n \n    #check credits\n    Dim url As String\n    url = base_url & \"message-status\" &\n   \"?apiKey=\" & apiKey & \"&phoneNumber=\" & phoneNumber \n   & \"&messageId=\" & messageId\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As \n  String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_delivery(self,phone_numbers,message_id):\n		url = URL + \"/message-status?apiKey=\" + API_KEY + \n    \"&phoneNumber=\" + phone_numbers + \"&messageId=\" + message_id\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -H  \"Content-Type: application/json\" -X GET  https://api.smspartner.fr/v1/message-status?apiKey=xxx&messageId=300&phoneNumber=06xxxxxxxx\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\"https\");\n\n// Remplacez par votre clé API et autres données\nconst apiKey = \"VOTRE_CLÉ_API\";\nconst messageId = \"300\";\nconst phoneNumber = \"06xxxxxxxx\";\n\n// Préparer les données pour la requête GET\nconst data = `apiKey=${apiKey}&messageId=${messageId}&phoneNumber=${phoneNumber}`;\n\n// Définir les options pour la requête HTTP GET vers l\'API SMS Partner\nconst options = {\n  hostname: \"api.smspartner.fr\",\n  port: 443,\n  path: `/v1/message-status?${data}`,\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\",\n  },\n};\n\n// Effectuer la requête HTTP GET avec les options et données définies précédemment\nconst req = https.request(options, (res) => {\n  console.log(`statusCode: ${res.statusCode}`);\n\n  // Afficher les données de réponse de l\'API sur la sortie standard\n  res.on(\"data\", (d) => {\n    process.stdout.write(d);\n  });\n});\n\n// Afficher en cas d\'erreur lors de l\'exécution de la requête HTTP GET\nreq.on(\"error\", (error) => {\n  console.error(error);\n});\n\n// Terminer la requête HTTP GET\nreq.end();\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.stream.Collectors;\nimport org.json.JSONObject;\n\npublic class SMSSTatus {\n    public static void main(String[] args) {\n        try {\n            // Remplacez par votre clé API et autres données\n            String apiKey = \"VOTRE_CLÉ_API\";\n            String messageId = \"300\";\n            String phoneNumber = \"06xxxxxxxx\";\n\n            // Préparer les données pour la requête GET\n            String data = String.format(\"apiKey=%s&messageId=%s&phoneNumber=%s\", apiKey, messageId, phoneNumber);\n            URL url = new URL(\"https://api.smspartner.fr/v1/message-status?\" + data);\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod(\"GET\");\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\n\n            // Lecture de la réponse de l\'API\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String response = br.lines().collect(Collectors.joining());\n\n            // Afficher la réponse JSON\n            System.out.println(response);\n\n            // Fermeture de la connexion HTTP\n            conn.disconnect();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\n// Structure pour la vue \"StatutSMS\"\nstruct StatutSMS: View {\n   var body: some View {\n       // Un bouton qui appelle la fonction StatutSMS() lorsqu\'il est pressé\n       Button(action: {\n           StatutSMS()\n       }) {\n           Text(\"Check SMS Status\")\n               .font(.system(size: 20))\n               .foregroundColor(.white)\n               .frame(minWidth: 0, maxWidth: .infinity)\n               .padding()\n               .background(LinearGradient(gradient: \n               Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))\n               .cornerRadius(10)\n               .padding(.horizontal)\n       }\n   }\n   \n   // Fonction pour vérifier le statut d\'un SMS\n   func StatutSMS() {\n       let apiKey = \"XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX\" // Votre clé API\n       let messageId = \"your msg ID\" // ID de votre message\n       let phoneNumber = \"06XXXXXXXX\" // Numéro de téléphone\n\n       // URL pour vérifier le statut du SMS\n       let urlString = \n       \"https://api.smspartner.fr/v1/message-status?apiKey=(apiKey)&messageId=(messageId)&phoneNumber=(phoneNumber)\"\n\n       // On vérifie que l\'URL est correctement formée\n       guard let url = URL(string: urlString) else {\n           print(\"Erreur : impossible de créer l\'URL\")\n           return\n       }\n\n       // Tâche pour récupérer les données de l\'URL\n       let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n           // Si une erreur se produit, on l\'affiche\n           if let error = error {\n               print(\"Erreur : (error)\")\n           }\n           // Sinon, on affiche les données reçues\n           else if let data = data {\n               let str = String(data: data, encoding: .utf8)\n               print(\"Données reçues :\n(str ?? \"\")\")\n           }\n       }\n       \n       task.resume() // On lance la tâche\n   }\n}\n\n// Aperçu de la vue\nstruct StatutSMS_Previews: PreviewProvider {\n   static var previews: some View {\n       StatutSMS()\n   }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"io/ioutil\"\n	\"log\"\n	\"net/http\"\n	\"time\"\n)\n\nfunc main() {\n	// Prepare data for GET request\n	apiKey := \"YOUR_API_KEY\"\n	messageId := \"300\"\n	phoneNumber := \"06xxxxxxxx\"\n\n	// Create GET request URL\n	url := \"https://api.smspartner.fr/v1/message-status?\" +\n		\"apiKey=\" + apiKey + \"&messageId=\" + messageId \n    + \"&phoneNumber=\" + phoneNumber\n\n	// Create HTTP client\n	client := &http.Client{Timeout: 10 * time.Second}\n\n	// Send GET request\n	resp, err := client.Get(url)\n	if err != nil {\n		log.Fatalf(\"Error sending request: %v\", err)\n	}\n	defer resp.Body.Close()\n\n	// Get response\n	body, err := ioutil.ReadAll(resp.Body)\n	if err != nil {\n		log.Fatalf(\"Error reading response body: %v\", err)\n	}\n\n	// Process your response here\n	log.Printf(\"Response: %s\", body)\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"YOUR_API_KEY\";\n        var messageId = \"300\";\n        var phoneNumber = \"06xxxxxxxx\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/message-status?apiKey={apiKey}&messageId={messageId}&phoneNumber={phoneNumber}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Response\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"number\": \"0600000000\",\n    \"messageId\": \"1111\",\n    \"stopSms\": false,\n    \"date\": \"2015-02-07 22:39:46\",\n    \"statut\": \"Delivered\",\n    \"cost\": 0.045,\n    \"countryCode\": \"FR\",\n    \"currency\": \"EUR\"\n}\n```\n### 3 possible delivery statuses\n* **Delivered**: This status indicates that the message has been successfully delivered to the recipient. This means that the message was sent correctly and received on the recipient\'s device or platform. The date and time of receipt are usually available.\n* **Not delivered**: This status refers to messages that could not be delivered to the recipient. There can be several reasons why a message is not delivered, such as an invalid phone number or an issue with the operator.\n* **Waiting**: This status indicates that the message is in the process of being delivered and it has not yet been confirmed whether it will be delivered or not. This can occur in case of network delays or when additional confirmations are needed before the message can be marked as delivered or not delivered.\n', 'en', 26),
(24, '## Requête\r\nExemple de requête :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;?php\r\n \r\n        // Prepare data for GET request\r\n        $data = \'apiKey=YOUR_API_KEY&messageId=300\';\r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl,\r\n         CURLOPT_URL,\'https://api.smspartner.fr/v1/bulk-status?\'.$data);\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n \r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n    Dim messageId As Integer = XXX\r\n \r\n    #check credits\r\n    Dim url As String\r\n    url = base_url & \"bulk-status\" & \"?apiKey=\" & apiKey & \"&messageId=\" & messageId\r\n \r\n    Dim credits As String\r\n    credits = apiRequest(\"GET\", url, Nothing)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n    <!-- Python code example goes here -->\r\n    <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def get_delivery(self,message_id):\r\n		url = URL + \"/bulk-status?apiKey=\" + API_KEY +  \"&messageId=\" + message_id\r\n		r = requests.get(url)\r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" -X GET  \r\nhttps://api.smspartner.fr/v1/bulk-status?apiKey=xxx&messageId=300\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst https = require(\'https\');\r\n\r\n//Cette requête permet de récupérer les statuts de \r\n//plusieurs SMS à partir d’un ID.\r\n\r\n// Préparer les données pour la requête GET\r\nlet data = \'apiKey=YOUR_API_KEY&messageId=300\';\r\nlet url = \'https://api.smspartner.fr/v1/bulk-status?\' + \r\ndata;\r\n\r\nhttps.get(url, (res) => {\r\n  let data = \'\';\r\n\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  console.log(\"Erreur: \" + err.message);\r\n});\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class StatutSmsParID {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for GET request\r\n            String apiKey = \"YOUR_API_KEY\";\r\n            String messageId = \"300\";\r\n\r\n            // Create GET request URL\r\n            String urlString = \"https://api.smspartner.fr/v1/bulk-status?\" +\r\n\r\n                    \"apiKey=\" + apiKey + \"&messageId=\" + \r\n                    messageId;\r\n\r\n            // Create URL object\r\n            URL url = new URL(urlString);\r\n\r\n            // Create HTTP connection\r\n            HttpURLConnection connection = \r\n            (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"GET\");\r\n            connection.setConnectTimeout(10000);\r\n            connection.setReadTimeout(10000);\r\n\r\n            // Send GET request\r\n            int responseCode = connection.getResponseCode();\r\n\r\n            // Get response\r\n            BufferedReader reader;\r\n            if (responseCode >= 200 && responseCode <= 299) {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\r\n            } else {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));\r\n            }\r\n\r\n            StringBuilder response = new StringBuilder();\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                response.append(line);\r\n            }\r\n            reader.close();\r\n\r\n            // Process your response here\r\n            System.out.println(response.toString());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\nimport SwiftUI\r\n\r\nstruct StatutSmsParID: View {\r\n    @State private var result: String = \"Loading...\"\r\n\r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Statut SMS Par ID\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: getStatusById)\r\n    }\r\n\r\n    func getStatusById() {\r\n        let apiKey = \"YOUR_API_KEY\"\r\n        let messageId = \"300\"\r\n        let urlString = \r\n        \"https://api.smspartner.fr/v1/bulk-status?apiKey=(apiKey)&messageId=(messageId)\"\r\n\r\n        guard let url = URL(string: urlString) else {\r\n            print(\"URL inválida\")\r\n            return\r\n        }\r\n\r\n        let task = URLSession.shared.dataTask(with: url) \r\n        { (data, response, error) in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n            } else if let data = data {\r\n                let result = \r\n                String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = result ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume()\r\n    }\r\n}\r\n\r\nstruct StatutSmsParID_Previews: PreviewProvider {\r\n    static var previews: some View {\r\n        StatutSmsParID()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n    <!-- GO code example goes here -->\r\n    <pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n	\"time\"\r\n)\r\n\r\nfunc main() {\r\n	// Prepare data for GET request\r\n	apiKey := \"YOUR_API_KEY\"\r\n	messageId := \"300\"\r\n\r\n	// Create GET request URL\r\n	url := \"https://api.smspartner.fr/v1/bulk-status?\" +\r\n		\"apiKey=\" + apiKey + \"&messageId=\" + messageId\r\n\r\n	// Create HTTP client\r\n	client := &http.Client{Timeout: 10 * time.Second}\r\n\r\n	// Send GET request\r\n	resp, err := client.Get(url)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Get response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response body: %v\", err)\r\n	}\r\n\r\n	// Process your response here\r\n	log.Printf(\"Response: %s\", body)\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var apiKey = \"YOUR_API_KEY\";\r\n        var messageId = \"300\";\r\n        var uri = new Uri($\"https://api.smspartner.fr/v1/bulk-status?apiKey={apiKey}&messageId={messageId}\");\r\n\r\n        HttpResponseMessage response = await client.GetAsync(uri);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Réponses\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": true,\r\n    \"code\": 200,\r\n    \"message_id\": \"111\",\r\n    \"StatutResponse_List\": [\r\n        {\r\n            \"phoneNumber\": \"+336XXXXXXX1\",\r\n            \"status\": \"Delivered\",\r\n            \"stopSMS\": false,\r\n            \"date\": \"1517989111\"\r\n        },\r\n        {\r\n            \"phoneNumber\": \"+336XXXXXXX2\",\r\n            \"status\": \"Delivered\",\r\n            \"stopSMS\": false,\r\n            \"date\": \"1517989101\"\r\n        }\r\n             ...\r\n}\r\n```\r\n### 3 statuts de remises possibles\r\n* **Delivered**\r\n* **Not delivered**\r\n* **Waiting**\r\n', 'fr', 29);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(25, '## Request\nRequest example\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?php\n \n        // Prepare data for GET request\n        $data = \'apiKey=YOUR_API_KEY&messageId=300\';\n \n        $curl = curl_init();\n        curl_setopt($curl,\n         CURLOPT_URL,\'https://api.smspartner.fr/v1/bulk-status?\'.$data);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n \n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n    Dim messageId As Integer = XXX\n \n    #check credits\n    Dim url As String\n    url = base_url & \"bulk-status\" & \"?apiKey=\" & apiKey & \"&messageId=\" & messageId\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_delivery(self,message_id):\n		url = URL + \"/bulk-status?apiKey=\" + API_KEY +  \"&messageId=\" + message_id\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -H  \"Content-Type: application/json\" -X GET  \nhttps://api.smspartner.fr/v1/bulk-status?apiKey=xxx&messageId=300\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n\n//Cette requête permet de récupérer les statuts de \n//plusieurs SMS à partir d’un ID.\n\n// Préparer les données pour la requête GET\nlet data = \'apiKey=YOUR_API_KEY&messageId=300\';\nlet url = \'https://api.smspartner.fr/v1/bulk-status?\' + \ndata;\n\nhttps.get(url, (res) => {\n  let data = \'\';\n\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  console.log(\"Erreur: \" + err.message);\n});\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class StatutSmsParID {\n    public static void main(String[] args) {\n        try {\n            // Prepare data for GET request\n            String apiKey = \"YOUR_API_KEY\";\n            String messageId = \"300\";\n\n            // Create GET request URL\n            String urlString = \"https://api.smspartner.fr/v1/bulk-status?\" +\n\n                    \"apiKey=\" + apiKey + \"&messageId=\" + \n                    messageId;\n\n            // Create URL object\n            URL url = new URL(urlString);\n\n            // Create HTTP connection\n            HttpURLConnection connection = \n            (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n            connection.setConnectTimeout(10000);\n            connection.setReadTimeout(10000);\n\n            // Send GET request\n            int responseCode = connection.getResponseCode();\n\n            // Get response\n            BufferedReader reader;\n            if (responseCode >= 200 && responseCode <= 299) {\n                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n            } else {\n                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));\n            }\n\n            StringBuilder response = new StringBuilder();\n            String line;\n            while ((line = reader.readLine()) != null) {\n                response.append(line);\n            }\n            reader.close();\n\n            // Process your response here\n            System.out.println(response.toString());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\nstruct StatutSmsParID: View {\n    @State private var result: String = \"Loading...\"\n\n    var body: some View {\n        VStack {\n            Text(\"Statut SMS Par ID\")\n                .font(.title)\n                .padding()\n\n            Text(result)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: getStatusById)\n    }\n\n    func getStatusById() {\n        let apiKey = \"YOUR_API_KEY\"\n        let messageId = \"300\"\n        let urlString = \n        \"https://api.smspartner.fr/v1/bulk-status?apiKey=(apiKey)&messageId=(messageId)\"\n\n        guard let url = URL(string: urlString) else {\n            print(\"URL inválida\")\n            return\n        }\n\n        let task = URLSession.shared.dataTask(with: url) \n        { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let result = \n                String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    self.result = result ?? \"Error\"\n                }\n            }\n        }\n\n        task.resume()\n    }\n}\n\nstruct StatutSmsParID_Previews: PreviewProvider {\n    static var previews: some View {\n        StatutSmsParID()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n    <pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"io/ioutil\"\n	\"log\"\n	\"net/http\"\n	\"time\"\n)\n\nfunc main() {\n	// Prepare data for GET request\n	apiKey := \"YOUR_API_KEY\"\n	messageId := \"300\"\n\n	// Create GET request URL\n	url := \"https://api.smspartner.fr/v1/bulk-status?\" +\n		\"apiKey=\" + apiKey + \"&messageId=\" + messageId\n\n	// Create HTTP client\n	client := &http.Client{Timeout: 10 * time.Second}\n\n	// Send GET request\n	resp, err := client.Get(url)\n	if err != nil {\n		log.Fatalf(\"Error sending request: %v\", err)\n	}\n	defer resp.Body.Close()\n\n	// Get response\n	body, err := ioutil.ReadAll(resp.Body)\n	if err != nil {\n		log.Fatalf(\"Error reading response body: %v\", err)\n	}\n\n	// Process your response here\n	log.Printf(\"Response: %s\", body)\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"YOUR_API_KEY\";\n        var messageId = \"300\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/bulk-status?apiKey={apiKey}&messageId={messageId}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Response\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"message_id\": \"111\",\n    \"StatutResponse_List\": [\n        {\n            \"phoneNumber\": \"+336XXXXXXX1\",\n            \"status\": \"Delivered\",\n            \"stopSMS\": false,\n            \"date\": \"1517989111\"\n        },\n        {\n            \"phoneNumber\": \"+336XXXXXXX2\",\n            \"status\": \"Delivered\",\n            \"stopSMS\": false,\n            \"date\": \"1517989101\"\n        }\n             ...\n}\n```\n### 3 possible delivery statuses\n* **Delivered**\n* **Not delivered**\n* **Waiting**', 'en', 30),
(26, '## Requête\nExemple de requête :\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n</ul>\n\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?  // Prepare data for POST request\n        $fields = array(\n            \'apiKey\'=> \'YOUR API KEY\',\n            \'SMSStatut_List\'=>>array(\n                array(\'phoneNumber\'=>\'+336xxxxxxxx\',\'messageId\'=>messageId1),\n                array(\'phoneNumber\'=>\'+336xxxxxxxx\',\'messageId\'=>messageId2)\n             )\n        );\n \n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/multi-status\');\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #send sms\n    url = base_url & \"multi-status\"\n    #note : utiliser une librairie JSON en production, par exemple :\n    #https//www.nuget.org/packages/Newtonsoft.Json/\n    Dim parameters As String = String.Format(\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"SMSStatut_List\"\":\"\"{1}\"\"}}\"\n    ,\n        apiKey,\n        {{ \"\"phoneNumber\"\":\"06xxxxxxx1\",\n        \"\"messageId\"\":\"msgId1\"},\n        { \"\"phoneNumber\"\":\"06xxxxxxx2\"\n        ,\"\"message\"\":\"msgId2\"}}\n    \n        )\n    Console.Write(parameters)\n    apiRequest(\"POST\", url, parameters)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = \n      New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def send_sms(self,phone_number, \n    phone_number2, msgId1, msgId2):\n		print(phone_number)\n \n \n		data = {\"apiKey\":APIKEY,\"SMSStatut_List\":[{\"phoneNumber\":phone_number,\"messageId\":msgId1},\n        {\"phoneNumber\":phone_number2,\"messageId\":msgId2}]}\n \n		url = URL + \"/multi-status\"\n		r = requests.post(url, data=json.dumps(data), verify=False)\n \n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(\"SMS msg {} not delivered to {}\".format(msg, phone_numbers))\n			status = False\n		return status\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -X POST https://api.smspartner.fr/v1/multi-status -H \"Content-Type: application/json\" -d \n\'{\"apiKey\": \"Votre clé API\",\"SMSStatut_List\": \n[{\"phoneNumber\": \"0619922264\", \"messageId\": 199897},\n{\"phoneNumber\": \"06xxxxxxx2\", \"messageId\": 1000},\n{\"phoneNumber\": \"06xxxxxxx1\", \"messageId\": 1222}]}\'\n   </code></pre>\n  </div>\n  \n</div>\n\n## Réponses\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"StatutResponse_List\": [\n        {\n            \"success\": true,\n            \"code\": 200,\n            \"phoneNumber\": \"+33699999993\",\n            \"messageId\": 111111,\n            \"status\": \"Delivered\",\n            \"date\": \"1517934416\",\n            \"stopSms\": \"0\",\n            \"isSpam\": \"0\"\n        },\n        {\n            \"success\": false,\n            \"code\": 4,\n            \"phoneNumber\": \"+33699999992\",\n            \"messageId\": 1000,\n            \"status\": \"Numéro introuvable\"\n        },\n        {\n            \"success\": false,\n            \"code\": 4,\n            \"phoneNumber\": \"+33699999991\",\n            \"messageId\": 1222,\n            \"status\": \"Numéro introuvable\"\n        }\n    ]\n}\n```\n### 3 statuts de remises possibles\n* **Delivered**\n* **Not delivered**\n* **Waiting**\n', 'fr', 27),
(27, '## Request\nRequest example\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n</ul>\n\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;?  // Prepare data for POST request\n        $fields = array(\n            \'apiKey\'=> \'YOUR API KEY\',\n            \'SMSStatut_List\'=>>array(\n                array(\'phoneNumber\'=>\'+336xxxxxxxx\',\'messageId\'=>messageId1),\n                array(\'phoneNumber\'=>\'+336xxxxxxxx\',\'messageId\'=>messageId2)\n             )\n        );\n \n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/multi-status\');\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #send sms\n    url = base_url & \"multi-status\"\n    #note : utiliser une librairie JSON en production, par exemple :\n    #https//www.nuget.org/packages/Newtonsoft.Json/\n    Dim parameters As String = String.Format(\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"SMSStatut_List\"\":\"\"{1}\"\"}}\"\n    ,\n        apiKey,\n        {{ \"\"phoneNumber\"\":\"06xxxxxxx1\",\n        \"\"messageId\"\":\"msgId1\"},\n        { \"\"phoneNumber\"\":\"06xxxxxxx2\"\n        ,\"\"message\"\":\"msgId2\"}}\n    \n        )\n    Console.Write(parameters)\n    apiRequest(\"POST\", url, parameters)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = \n      New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def send_sms(self,phone_number, \n    phone_number2, msgId1, msgId2):\n		print(phone_number)\n \n \n		data = {\"apiKey\":APIKEY,\"SMSStatut_List\":[{\"phoneNumber\":phone_number,\"messageId\":msgId1},\n        {\"phoneNumber\":phone_number2,\"messageId\":msgId2}]}\n \n		url = URL + \"/multi-status\"\n		r = requests.post(url, data=json.dumps(data), verify=False)\n \n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(\"SMS msg {} not delivered to {}\".format(msg, phone_numbers))\n			status = False\n		return status\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -X POST https://api.smspartner.fr/v1/multi-status -H \"Content-Type: application/json\" -d \n\'{\"apiKey\": \"Votre clé API\",\"SMSStatut_List\": \n[{\"phoneNumber\": \"0619922264\", \"messageId\": 199897},\n{\"phoneNumber\": \"06xxxxxxx2\", \"messageId\": 1000},\n{\"phoneNumber\": \"06xxxxxxx1\", \"messageId\": 1222}]}\'\n   </code></pre>\n  </div>\n  \n</div>\n\n## response\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"StatutResponse_List\": [\n        {\n            \"success\": true,\n            \"code\": 200,\n            \"phoneNumber\": \"+33699999993\",\n            \"messageId\": 111111,\n            \"status\": \"Delivered\",\n            \"date\": \"1517934416\",\n            \"stopSms\": \"0\",\n            \"isSpam\": \"0\"\n        },\n        {\n            \"success\": false,\n            \"code\": 4,\n            \"phoneNumber\": \"+33699999992\",\n            \"messageId\": 1000,\n            \"status\": \"Numéro introuvable\"\n        },\n        {\n            \"success\": false,\n            \"code\": 4,\n            \"phoneNumber\": \"+33699999991\",\n            \"messageId\": 1222,\n            \"status\": \"Numéro introuvable\"\n        }\n    ]\n}\n```\n### 3 possible delivery statuses\n* **Delivered**\n* **Not delivered**\n* **Waiting**', 'en', 28),
(28, '## Requête\nExemple de requête :\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;? // Prepare data for GET request\n       // Prepare data for GET request\n        $data = \'apiKey=YOUR_API_KEY&tag=montag\';\n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\n        \'https://api.smspartner.fr/v1/bulk-status-by-tag?\'.$data);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n \n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n    Dim tag As String = \"montag\"\n \n    #check credits\n    Dim url As String\n    url = base_url & \"bulk-status-by-tag\" & \"?apiKey=\" & apiKey & \"&tag=\" & tag\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_delivery(self,tag):\n		url = URL + \"/bulk-status-by-tag?apiKey=\" + API_KEY +  \"&tag=\" + tag\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n    </pre> </code>\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -H  \"Content-Type: application/json\" -X GET  \nhttps://api.smspartner.fr/v1/bulk-status-by-tag?apiKey=xxx&tag=montag   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n\n//Cette requête permet de récupérer les statuts de plusieurs SMS à partir d’un tag.\nlet data = \'apiKey=YOUR_API_KEY&tag=montag\';\nlet url = \'https://api.smspartner.fr/v1/bulk-status-by-tag?\' + data;\n\nhttps.get(url, (res) => {\n  let data = \';\n\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  console.log(\"Erreur: \" + err.message);\n});\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class StatutParTag {\n    public static void main(String[] args) {\n        try {\n            // Prepare data for GET request\n            String apiKey = \"YOUR_API_KEY\";\n            String tag = \"montag\";\n\n            // Create GET request URL\n            String urlString = \"https://api.smspartner.fr/v1/bulk-status-by-tag?\" +\n                    \"apiKey=\" + apiKey + \"&tag=\" + tag;\n\n            // Create URL object\n            URL url = new URL(urlString);\n\n            // Create HTTP connection\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n            connection.setConnectTimeout(10000);\n            connection.setReadTimeout(10000);\n\n            // Send GET request\n            int responseCode = connection.getResponseCode();\n\n            // Get response\n            BufferedReader reader;\n            if (responseCode >= 200 && responseCode <= 299) {\n                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n            } else {\n                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));\n            }\n\n            StringBuilder response = new StringBuilder();\n            String line;\n            while ((line = reader.readLine()) != null) {\n                response.append(line);\n            }\n            reader.close();\n\n            // Process your response here\n            System.out.println(response.toString());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\nstruct StatutSmsParTag: View {\n    @State private var result: String = \"Loading...\"\n    \n    var body: some View {\n        VStack {\n            Text(\"Statut Sms Par Tag\")\n                .font(.title)\n                .padding()\n\n            Text(result)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: getStatusByTag)\n    }\n\n    func getStatusByTag() {\n        let apiKey = \"YOUR_API_KEY\"\n        let tag = \"montag\"\n        let urlString = \"https://api.smspartner.fr/v1/bulk-status-by-tag?apiKey=(apiKey)&tag=(tag)\"\n\n        guard let url = URL(string: urlString) else {\n            print(\"URL inválida\")\n            return\n        }\n\n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let result = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    self.result = result ?? \"Error\"\n                }\n            }\n        }\n\n        task.resume()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n   package main\n\nimport (\n	\"io/ioutil\"\n	\"log\"\n	\"net/http\"\n	\"time\"\n)\n\nfunc main() {\n	// Prepare data for GET request\n	apiKey := \"YOUR_API_KEY\"\n	tag := \"montag\"\n\n	// Create GET request URL\n	url := \"https://api.smspartner.fr/v1/bulk-status-by-tag?\" +\n		\"apiKey=\" + apiKey + \"&tag=\" + tag\n\n	// Create HTTP client\n	client := &http.Client{Timeout: 10 * time.Second}\n\n	// Send GET request\n	resp, err := client.Get(url)\n	if err != nil {\n		log.Fatalf(\"Error sending request: %v\", err)\n	}\n	defer resp.Body.Close()\n\n	// Get response\n	body, err := ioutil.ReadAll(resp.Body)\n	if err != nil {\n		log.Fatalf(\"Error reading response body: %v\", err)\n	}\n\n	// Process your response here\n	log.Printf(\"Response: %s\", body)\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"YOUR_API_KEY\";\n        var tag = \"montag\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/bulk-status-by-tag?apiKey={apiKey}&tag={tag}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Réponses\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"currentPage\": 1,\n    \"total\": 2,\n    \"StatutResponse_List\": [\n        {\n            \"phoneNumber\": \"+336XXXXXXX1\",\n            \"status\": \"Delivered\",\n            \"stopSMS\": false,\n            \"date\": \"1517989111\"\n        },\n        {\n            \"phoneNumber\": \"+336XXXXXXX2\",\n            \"status\": \"Delivered\",\n            \"stopSMS\": false,\n            \"date\": \"1517989101\"\n        }\n             ...\n}\n```\n### 3 statuts de remises possibles\n* **Delivered**\n* **Not delivered**\n* **Waiting**\n', 'fr', 31),
(29, '## Request\nRequest example\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;? // Prepare data for GET request\n       // Prepare data for GET request\n        $data = \'apiKey=YOUR_API_KEY&tag=montag\';\n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\n        \'https://api.smspartner.fr/v1/bulk-status-by-tag?\'.$data);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n \n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n    Dim tag As String = \"montag\"\n \n    #check credits\n    Dim url As String\n    url = base_url & \"bulk-status-by-tag\" & \"?apiKey=\" & apiKey & \"&tag=\" & tag\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n    <!-- Python code example goes here -->\n    <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_delivery(self,tag):\n		url = URL + \"/bulk-status-by-tag?apiKey=\" + API_KEY +  \"&tag=\" + tag\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n    </pre> </code>\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -H  \"Content-Type: application/json\" -X GET  \nhttps://api.smspartner.fr/v1/bulk-status-by-tag?apiKey=xxx&tag=montag   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n\n//Cette requête permet de récupérer les statuts de plusieurs SMS à partir d’un tag.\nlet data = \'apiKey=YOUR_API_KEY&tag=montag\';\nlet url = \'https://api.smspartner.fr/v1/bulk-status-by-tag?\' + data;\n\nhttps.get(url, (res) => {\n  let data = \';\n\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  console.log(\"Erreur: \" + err.message);\n});\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class StatutParTag {\n    public static void main(String[] args) {\n        try {\n            // Prepare data for GET request\n            String apiKey = \"YOUR_API_KEY\";\n            String tag = \"montag\";\n\n            // Create GET request URL\n            String urlString = \"https://api.smspartner.fr/v1/bulk-status-by-tag?\" +\n                    \"apiKey=\" + apiKey + \"&tag=\" + tag;\n\n            // Create URL object\n            URL url = new URL(urlString);\n\n            // Create HTTP connection\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n            connection.setConnectTimeout(10000);\n            connection.setReadTimeout(10000);\n\n            // Send GET request\n            int responseCode = connection.getResponseCode();\n\n            // Get response\n            BufferedReader reader;\n            if (responseCode >= 200 && responseCode <= 299) {\n                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n            } else {\n                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));\n            }\n\n            StringBuilder response = new StringBuilder();\n            String line;\n            while ((line = reader.readLine()) != null) {\n                response.append(line);\n            }\n            reader.close();\n\n            // Process your response here\n            System.out.println(response.toString());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\nstruct StatutSmsParTag: View {\n    @State private var result: String = \"Loading...\"\n    \n    var body: some View {\n        VStack {\n            Text(\"Statut Sms Par Tag\")\n                .font(.title)\n                .padding()\n\n            Text(result)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: getStatusByTag)\n    }\n\n    func getStatusByTag() {\n        let apiKey = \"YOUR_API_KEY\"\n        let tag = \"montag\"\n        let urlString = \"https://api.smspartner.fr/v1/bulk-status-by-tag?apiKey=(apiKey)&tag=(tag)\"\n\n        guard let url = URL(string: urlString) else {\n            print(\"URL inválida\")\n            return\n        }\n\n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let result = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    self.result = result ?? \"Error\"\n                }\n            }\n        }\n\n        task.resume()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n    <!-- GO code example goes here -->\n   package main\n\nimport (\n	\"io/ioutil\"\n	\"log\"\n	\"net/http\"\n	\"time\"\n)\n\nfunc main() {\n	// Prepare data for GET request\n	apiKey := \"YOUR_API_KEY\"\n	tag := \"montag\"\n\n	// Create GET request URL\n	url := \"https://api.smspartner.fr/v1/bulk-status-by-tag?\" +\n		\"apiKey=\" + apiKey + \"&tag=\" + tag\n\n	// Create HTTP client\n	client := &http.Client{Timeout: 10 * time.Second}\n\n	// Send GET request\n	resp, err := client.Get(url)\n	if err != nil {\n		log.Fatalf(\"Error sending request: %v\", err)\n	}\n	defer resp.Body.Close()\n\n	// Get response\n	body, err := ioutil.ReadAll(resp.Body)\n	if err != nil {\n		log.Fatalf(\"Error reading response body: %v\", err)\n	}\n\n	// Process your response here\n	log.Printf(\"Response: %s\", body)\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"YOUR_API_KEY\";\n        var tag = \"montag\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/bulk-status-by-tag?apiKey={apiKey}&tag={tag}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Response\n\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"currentPage\": 1,\n    \"total\": 2,\n    \"StatutResponse_List\": [\n        {\n            \"phoneNumber\": \"+336XXXXXXX1\",\n            \"status\": \"Delivered\",\n            \"stopSMS\": false,\n            \"date\": \"1517989111\"\n        },\n        {\n            \"phoneNumber\": \"+336XXXXXXX2\",\n            \"status\": \"Delivered\",\n            \"stopSMS\": false,\n            \"date\": \"1517989101\"\n        }\n             ...\n}\n```\n### 3 possible delivery statuses\n* **Delivered**\n* **Not delivered**\n* **Waiting**', 'en', 32);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(30, '## Requête\nExemple de requête :\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;? // Prepare data for GET request\n       $apiKey = \'YOUR_API_KEY\';\n$url = \'https://api.smspartner.fr/v1/statistics/cost-resume?apiKey=\' \n. $apiKey . \'&interval=last_twelve_months\'; \n\n// Initialise cURL session\n$ch = curl_init($url);\n\n// Set cURL options\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n// Execute cURL session and fetch the result\n$response = curl_exec($ch);\n\n// Handle errors\nif (curl_errno($ch)) {\n    echo \'Erreur: \' . curl_error($ch);\n} else {\n    // Decode the result\n    $data = json_decode($response, true);\n    print_r($data);\n}\n\n// Close cURL session\ncurl_close($ch);\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.Net\nImports System.IO\n\nModule Module1\n    Sub Main()\n        \' Prepare data for GET request\n        Dim apiKey As String = \"YOUR_API_KEY\"\n        Dim url As String = \"https://api.smspartner.fr/v1/statistics/cost-resume?apiKey=\" \n        & apiKey & \"&interval=last_twelve_months\"\n\n        \' Initialise WebRequest\n        Dim request As WebRequest = WebRequest.Create(url)\n        request.Method = \"GET\"\n\n        \' Get the response\n        Try\n            Dim response As WebResponse = request.GetResponse()\n            Using dataStream As Stream = response.GetResponseStream()\n                Using reader As New StreamReader(dataStream)\n                    Dim responseFromServer As String = reader.ReadToEnd()\n                    \' Decode the result\n                    Dim data As Object = Newtonsoft.Json.JsonConvert.DeserializeObject\n                    (responseFromServer)\n                    Console.WriteLine(data)\n                End Using\n            End Using\n            response.Close()\n        Catch e As WebException\n            Console.WriteLine(\"Error: \" & e.Message)\n        End Try\n    End Sub\nEnd Module\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n<pre><code class=\"language-python\">\n   import requests\napiKey = \'YOUR_API_KEY\'\nurl = f\'https://api.smspartner.fr/v1/statistics/cost-resume?\napiKey={apiKey}&interval=last_twelve_months\'\n\ntry:\n    response = requests.get(url)\n    response.raise_for_status()\n    data = response.json()\n    print(data)\nexcept requests.exceptions.RequestException as e:\n    print(f\"Erreur: {e}\")\n\n\nOu avec la bibliothèque \'urllib\':\n\nimport json\nfrom urllib import request, error\n\napiKey = \'YOUR_API_KEY\'\nurl = f\'https://api.smspartner.fr/v1/statistics/cost-resume?\napiKey={apiKey}&interval=last_twelve_months\'\n\ntry:\n    with request.urlopen(url) as response:\n        data = json.load(response)\n        print(data)\nexcept error.URLError as e:\n    print(f\"Erreur: {e.reason}\")\n    </pre> </code>\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -H \"Content-Type: application/json\" -X GET \n\"https://api.smspartner.fr/v1/statistics/cost-resume\n?apiKey=YOUR_API_KEY&interval=last_twelve_months\"  </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(`\'https\');\n\nlet apiKey = \'YOUR_API_KEY\';\nlet url = `https://api.smspartner.fr/v1/statistics/cost-resume?apiKey=${apiKey}\n&interval=last_twelve_months`; // 12 derniers mois\n//interval=last_month // 1 dernier mois\n//interval=custom&from=21-10-2022&to=21-10-2022 // intervalle personnalisé\n\nhttps.get(url, (res) => {\n  let data = \'\';\n\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  console.log(\"Erreur: \" + err.message);\n});\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class StatistiqueDesEnvois {\n    public static void main(String[] args) {\n        try {\n            // Prepare data for GET request\n            String apiKey = \"YOUR_API_KEY\";\n            String interval = \"last_twelve_months\";\n            //interval=last_month // 1 dernier mois\n//interval=custom&from=21-10-2022&to=21-10-2022 // intervalle personnalisé\n\n            // Create GET request URL\n            String urlString = \n            \"https://api.smspartner.fr/v1/statistics/cost-resume?\" +\n                    \"apiKey=\" + apiKey + \"&interval=\" + interval;\n\n            // Create URL object\n            URL url = new URL(urlString);\n\n            // Create HTTP connection\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n            connection.setConnectTimeout(10000);\n            connection.setReadTimeout(10000);\n\n            // Send GET request\n            int responseCode = connection.getResponseCode();\n\n            // Get response\n            BufferedReader reader;\n            if (responseCode >= 200 && responseCode <= 299) {\n                reader = new BufferedReader(\n                new InputStreamReader(connection.getInputStream()));\n            } else {\n                reader = new BufferedReader(\n                new InputStreamReader(connection.getErrorStream()));\n            }\n\n            StringBuilder response = new StringBuilder();\n            String line;\n            while ((line = reader.readLine()) != null) {\n                response.append(line);\n            }\n            reader.close();\n\n            // Process your response here\n            System.out.println(response.toString());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\nstruct StatistiqueDesEnvois: View {\n    @State private var result: String = \"Loading...\"\n\n    var body: some View {\n        VStack {\n            Text(\"Statistique Des Envois\")\n                .font(.title)\n                .padding()\n\n            Text(result)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: getStatistics)\n    }\n\n    func getStatistics() {\n        let apiKey = \"YOUR_API_KEY\"\n        let interval = \"last_twelve_months\"\n        let urlString = \"https://api.smspartner.fr/v1/statistics/cost-resume\n        ?apiKey=(apiKey)&interval=(interval)\"\n\n        guard let url = URL(string: urlString) else {\n            print(\"Invalid URL\")\n            result = \"Invalid URL\"\n            return\n        }\n\n        var request = URLRequest(url: url)\n        request.httpMethod = \"GET\"\n\n        let task = URLSession.shared.dataTask(with: request) { data, response, error in\n            if let error = error {\n                print(\"Error: (error)\")\n                DispatchQueue.main.async {\n                    self.result = \"Error: (error)\"\n                }\n            } else if let data = data {\n                let str = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    self.result = str ?? \"Error\"\n                }\n            }\n        }\n\n        task.resume()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n<pre><code class=\"language-go\">\n  package main\nimport (\n	\"io/ioutil\"\n	\"log\"\n	\"net/http\"\n	\"time\"\n)\n\nfunc main() {\n	// Prepare data for GET request\n	apiKey := \"YOUR_API_KEY\"\n	interval := \"last_twelve_months\" // last month: \"last_month\", custom interval: \n  \"custom&from=21-10-2022&to=21-10-2022\"\n\n	// Create GET request URL\n	url := \"https://api.smspartner.fr/v1/statistics/cost-resume?\" +\n		\"apiKey=\" + apiKey + \"&interval=\" + interval\n\n	// Create HTTP client\n	client := &http.Client{Timeout: 10 * time.Second}\n\n	// Send GET request\n	resp, err := client.Get(url)\n	if err != nil {\n		log.Fatalf(\"Error sending request: %v\", err)\n	}\n	defer resp.Body.Close()\n\n	// Get response\n	body, err := ioutil.ReadAll(resp.Body)\n	if err != nil {\n		log.Fatalf(\"Error reading response body: %v\", err)\n	}\n\n	// Process your response here\n	log.Printf(\"Response: %s\", body)\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"VOTRE_CLÉ_API\";\n        var interval = \"last_twelve_months\"; // Changer à \"last_month\" pour le dernier mois, \"custom\" pour un intervalle personnalisé\n        var uri = new Uri\n        ($\"https://api.smspartner.fr/v1/statistics/cost-resume?apiKey={apiKey}&interval={interval}\"); // Ajoutez \"&from=date&to=date\" pour un intervalle personnalisé\n\n        // Envoyer la requête GET\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            // Lire la réponse\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            // Afficher un message en cas d\'échec de la requête GET\n            Console.WriteLine(\"La requête GET a échoué avec le code de statut: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Réponses\n\n### JSON\n```json\n{    \n\"success\": true,    \n\"datas\": [        \n{            \n\"month\": \"october\",            \n\"year\": \"2021\",            \n\"m\": \"10\",            \n\"date\": 1633039200,            \n\"type\": \"month\",            \n\"cost\": \"49.174\",            \n\"nb_send\": \"1210\"        \n},        \n\n\n{            \n\"month\": \"november\",            \n\"year\": \"2021\",            \n\"m\": \"11\",            \n\"date\": 1635721200,            \n\"type\": \"month\",            \n\"cost\": \"67.674\",            \n\"nb_send\": \"1409\"        \n},\n```\n### 3 statuts de remises possibles\n* **Delivered**\n* **Not delivered**\n* **Waiting**\n', 'fr', 33),
(31, '## Request\r\nRequest example\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? // Prepare data for GET request\r\n       $apiKey = \'YOUR_API_KEY\';\r\n$url = \'https://api.smspartner.fr/v1/statistics/cost-resume?apiKey=\' \r\n. $apiKey . \'&interval=last_twelve_months\'; \r\n\r\n// Initialise cURL session\r\n$ch = curl_init($url);\r\n\r\n// Set cURL options\r\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n\r\n// Execute cURL session and fetch the result\r\n$response = curl_exec($ch);\r\n\r\n// Handle errors\r\nif (curl_errno($ch)) {\r\n    echo \'Erreur: \' . curl_error($ch);\r\n} else {\r\n    // Decode the result\r\n    $data = json_decode($response, true);\r\n    print_r($data);\r\n}\r\n\r\n// Close cURL session\r\ncurl_close($ch);\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.Net\r\nImports System.IO\r\n\r\nModule Module1\r\n    Sub Main()\r\n        \' Prepare data for GET request\r\n        Dim apiKey As String = \"YOUR_API_KEY\"\r\n        Dim url As String = \"https://api.smspartner.fr/v1/statistics/cost-resume?apiKey=\" \r\n        & apiKey & \"&interval=last_twelve_months\"\r\n\r\n        \' Initialise WebRequest\r\n        Dim request As WebRequest = WebRequest.Create(url)\r\n        request.Method = \"GET\"\r\n\r\n        \' Get the response\r\n        Try\r\n            Dim response As WebResponse = request.GetResponse()\r\n            Using dataStream As Stream = response.GetResponseStream()\r\n                Using reader As New StreamReader(dataStream)\r\n                    Dim responseFromServer As String = reader.ReadToEnd()\r\n                    \' Decode the result\r\n                    Dim data As Object = Newtonsoft.Json.JsonConvert.DeserializeObject\r\n                    (responseFromServer)\r\n                    Console.WriteLine(data)\r\n                End Using\r\n            End Using\r\n            response.Close()\r\n        Catch e As WebException\r\n            Console.WriteLine(\"Error: \" & e.Message)\r\n        End Try\r\n    End Sub\r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-go\">\r\n   import requests\r\napiKey = \'YOUR_API_KEY\'\r\nurl = f\'https://api.smspartner.fr/v1/statistics/cost-resume?\r\napiKey={apiKey}&interval=last_twelve_months\'\r\n\r\ntry:\r\n    response = requests.get(url)\r\n    response.raise_for_status()\r\n    data = response.json()\r\n    print(data)\r\nexcept requests.exceptions.RequestException as e:\r\n    print(f\"Erreur: {e}\")\r\n\r\n\r\nOu avec la bibliothèque \'urllib\':\r\n\r\nimport json\r\nfrom urllib import request, error\r\n\r\napiKey = \'YOUR_API_KEY\'\r\nurl = f\'https://api.smspartner.fr/v1/statistics/cost-resume?\r\napiKey={apiKey}&interval=last_twelve_months\'\r\n\r\ntry:\r\n    with request.urlopen(url) as response:\r\n        data = json.load(response)\r\n        print(data)\r\nexcept error.URLError as e:\r\n    print(f\"Erreur: {e.reason}\")\r\n    </pre> </code>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H \"Content-Type: application/json\" -X GET \r\n\"https://api.smspartner.fr/v1/statistics/cost-resume\r\n?apiKey=YOUR_API_KEY&interval=last_twelve_months\"  </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst https = require(`\'https\');\r\n\r\nlet apiKey = \'YOUR_API_KEY\';\r\nlet url = `https://api.smspartner.fr/v1/statistics/cost-resume?apiKey=${apiKey}\r\n&interval=last_twelve_months`; // 12 derniers mois\r\n//interval=last_month // 1 dernier mois\r\n//interval=custom&from=21-10-2022&to=21-10-2022 // intervalle personnalisé\r\n\r\nhttps.get(url, (res) => {\r\n  let data = \'\';\r\n\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  console.log(\"Erreur: \" + err.message);\r\n});\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class StatistiqueDesEnvois {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for GET request\r\n            String apiKey = \"YOUR_API_KEY\";\r\n            String interval = \"last_twelve_months\";\r\n            //interval=last_month // 1 dernier mois\r\n//interval=custom&from=21-10-2022&to=21-10-2022 // intervalle personnalisé\r\n\r\n            // Create GET request URL\r\n            String urlString = \r\n            \"https://api.smspartner.fr/v1/statistics/cost-resume?\" +\r\n                    \"apiKey=\" + apiKey + \"&interval=\" + interval;\r\n\r\n            // Create URL object\r\n            URL url = new URL(urlString);\r\n\r\n            // Create HTTP connection\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"GET\");\r\n            connection.setConnectTimeout(10000);\r\n            connection.setReadTimeout(10000);\r\n\r\n            // Send GET request\r\n            int responseCode = connection.getResponseCode();\r\n\r\n            // Get response\r\n            BufferedReader reader;\r\n            if (responseCode >= 200 && responseCode <= 299) {\r\n                reader = new BufferedReader(\r\n                new InputStreamReader(connection.getInputStream()));\r\n            } else {\r\n                reader = new BufferedReader(\r\n                new InputStreamReader(connection.getErrorStream()));\r\n            }\r\n\r\n            StringBuilder response = new StringBuilder();\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                response.append(line);\r\n            }\r\n            reader.close();\r\n\r\n            // Process your response here\r\n            System.out.println(response.toString());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\nimport SwiftUI\r\n\r\nstruct StatistiqueDesEnvois: View {\r\n    @State private var result: String = \"Loading...\"\r\n\r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Statistique Des Envois\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: getStatistics)\r\n    }\r\n\r\n    func getStatistics() {\r\n        let apiKey = \"YOUR_API_KEY\"\r\n        let interval = \"last_twelve_months\"\r\n        let urlString = \"https://api.smspartner.fr/v1/statistics/cost-resume\r\n        ?apiKey=(apiKey)&interval=(interval)\"\r\n\r\n        guard let url = URL(string: urlString) else {\r\n            print(\"Invalid URL\")\r\n            result = \"Invalid URL\"\r\n            return\r\n        }\r\n\r\n        var request = URLRequest(url: url)\r\n        request.httpMethod = \"GET\"\r\n\r\n        let task = URLSession.shared.dataTask(with: request) { data, response, error in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n                DispatchQueue.main.async {\r\n                    self.result = \"Error: (error)\"\r\n                }\r\n            } else if let data = data {\r\n                let str = String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = str ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n<pre><code class=\"language-go\">\r\n  package main\r\nimport (\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n	\"time\"\r\n)\r\n\r\nfunc main() {\r\n	// Prepare data for GET request\r\n	apiKey := \"YOUR_API_KEY\"\r\n	interval := \"last_twelve_months\" // last month: \"last_month\", custom interval: \r\n  \"custom&from=21-10-2022&to=21-10-2022\"\r\n\r\n	// Create GET request URL\r\n	url := \"https://api.smspartner.fr/v1/statistics/cost-resume?\" +\r\n		\"apiKey=\" + apiKey + \"&interval=\" + interval\r\n\r\n	// Create HTTP client\r\n	client := &http.Client{Timeout: 10 * time.Second}\r\n\r\n	// Send GET request\r\n	resp, err := client.Get(url)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Get response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response body: %v\", err)\r\n	}\r\n\r\n	// Process your response here\r\n	log.Printf(\"Response: %s\", body)\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var apiKey = \"VOTRE_CLÉ_API\";\r\n        var interval = \"last_twelve_months\"; // Changer à \"last_month\" pour le dernier mois, \"custom\" pour un intervalle personnalisé\r\n        var uri = new Uri\r\n        ($\"https://api.smspartner.fr/v1/statistics/cost-resume?apiKey={apiKey}&interval={interval}\"); // Ajoutez \"&from=date&to=date\" pour un intervalle personnalisé\r\n\r\n        // Envoyer la requête GET\r\n        HttpResponseMessage response = await client.GetAsync(uri);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            // Lire la réponse\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            // Afficher un message en cas d\'échec de la requête GET\r\n            Console.WriteLine(\"La requête GET a échoué avec le code de statut: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Response\r\n\r\n### JSON\r\n```json\r\n{    \r\n\"success\": true,    \r\n\"datas\": [        \r\n{            \r\n\"month\": \"october\",            \r\n\"year\": \"2021\",            \r\n\"m\": \"10\",            \r\n\"date\": 1633039200,            \r\n\"type\": \"month\",            \r\n\"cost\": \"49.174\",            \r\n\"nb_send\": \"1210\"        \r\n},        \r\n\r\n\r\n{            \r\n\"month\": \"november\",            \r\n\"year\": \"2021\",            \r\n\"m\": \"11\",            \r\n\"date\": 1635721200,            \r\n\"type\": \"month\",            \r\n\"cost\": \"67.674\",            \r\n\"nb_send\": \"1409\"        \r\n},\r\n```\r\n### 3 possible delivery statuses\r\n* **Delivered**\r\n* **Not delivered**\r\n* **Waiting**', 'en', 34),
(32, '\r\n## Requête\r\n``` bash\r\ncurl --location --request POST \'http://api.smspartner.fr/v1/group/add\' \r\n--header \'Content-Type: application/json\' --data-raw \'{   \"apiKey\": \"YOUR_API_KEY\",\r\n   \"name\": \"Nom du groupe\"}\'\r\n```\r\n## Réponses\r\n``` json\r\n{   \r\n\"success\": true,   \r\n\"code\": 2,   \r\n\"name\": \"Nom du groupe\",   \r\n\"groupId\": \"ID GROUPE\" \r\n}\r\n```\r\n', 'fr', 36),
(33, '\n## Request\n``` bash\ncurl --location --request POST \'http://api.smspartner.fr/v1/group/add\' \n--header \'Content-Type: application/json\' --data-raw \'{   \"apiKey\": \"YOUR_API_KEY\",\n   \"name\": \"Group name\"}\'\n```\n## Response\n``` json\n{   \n\"success\": true,   \n\"code\": 2,   \n\"name\": \"Group name\",   \n\"groupId\": \"GROUP ID\" \n}\n\n```\n', 'en', 37),
(34, '\n## Requête\n\nExemple de requête :\n\n``` bash\n{\n  \"curl_command\": {\n    \"method\": \"POST\",\n    \"url\": \"http://api.smspartner.fr/v1/contact/add\",\n    \"headers\": {\n      \"Content-Type\": \"application/json\"\n    },\n    \"data\": {\n      \"apiKey\": \"YOUR_API_KEY\",\n      \"groupId\": \"ID GROUP\",\n      \"contact\": {\n        \"phoneNumber\": \"xxxxxxxxx\",\n        \"firstname\": \"prénom\",\n        \"lastname\": \"nom\",\n        \"date\": \"YYYY-MM-DD\",\n        \"shortUrlPartnr\": \"http://\",\n        \"url\": \"http://\",\n        \"custom1\": \"custom 1\",\n        \"custom2\": \"custom 2\",\n        \"custom3\": \"custom 3\",\n        \"custom4\": \"custom 4\"\n      }\n    }\n  }\n}\n```\n## Réponses\n``` json  \n{\n  \"success\": true,\n  \"code\": 200,\n  \"contact\": {\n    \"phoneNumber\": \"xxxxxxxx\",\n    \"firstname\": \"Prénom\",\n    \"lastname\": \"Nom\",\n    \"date\": \"YYYY-MM-DD\",\n    \"shortUrlPartnr\": \"http://\",\n    \"url\": \"http://\",\n    \"custom1\": \"custom 1\",\n    \"custom2\": \"custom 2\",\n    \"custom3\": \"custom 3\",\n    \"custom4\": \"custom 4\",\n    \"contactId\": \"ID CONTACT\"\n  }\n}\n```\n', 'fr', 38),
(35, '\r\n## Request\r\nRequest example:\r\n\r\n``` bash\r\n{\r\n  \"curl_command\": {\r\n    \"method\": \"POST\",\r\n    \"url\": \"http://api.smspartner.fr/v1/contact/add\",\r\n    \"headers\": {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    \"data\": {\r\n      \"apiKey\": \"YOUR_API_KEY\",\r\n      \"groupId\": \"ID GROUP\",\r\n      \"contact\": {\r\n        \"phoneNumber\": \"xxxxxxxxx\",\r\n        \"firstname\": \"first name\",\r\n        \"lastname\": \"last name\",\r\n        \"date\": \"YYYY-MM-DD\",\r\n        \"shortUrlPartnr\": \"http://\",\r\n        \"url\": \"http://\",\r\n        \"custom1\": \"custom 1\",\r\n        \"custom2\": \"custom 2\",\r\n        \"custom3\": \"custom 3\",\r\n        \"custom4\": \"custom 4\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n ## Responses\r\n``` json   \r\n{\r\n  \"success\": true,\r\n  \"code\": 200,\r\n  \"contact\": {\r\n    \"phoneNumber\": \"xxxxxxxx\",\r\n    \"firstname\": \"First name\",\r\n    \"lastname\": \"Last name\",\r\n    \"date\": \"YYYY-MM-DD\",\r\n    \"shortUrlPartnr\": \"http://\",\r\n    \"url\": \"http://\",\r\n    \"custom1\": \"custom 1\",\r\n    \"custom2\": \"custom 2\",\r\n    \"custom3\": \"custom 3\",\r\n    \"custom4\": \"custom 4\",\r\n    \"contactId\": \"ID CONTACT\"\r\n  }\r\n}\r\n``` \r\n', 'en', 39),
(36, '\r\n## Requête\r\n\r\nExemple de requête :\r\n\r\n``` bash\r\ncurl --location --request POST \'http://api.smspartner.fr/v1/groupe/delete\' \r\n--header \'Content-Type: application/json\' \r\n--data-raw \'{\r\n  \"apiKey\": \"YOUR_API_KEY\",\r\n  \"groupId\": \"ID GROUPE\"\r\n}\'\r\n```\r\n## Réponses\r\n``` json\r\n{\r\n  \"success\": true,\r\n  \"code\": 200\r\n}\r\n```\r\n', 'fr', 40),
(37, '\r\n## Request\r\n\r\nRequest example:\r\n\r\n``` bash\r\ncurl --location --request POST \'http://api.smspartner.fr/v1/group/delete\' \r\n--header \'Content-Type: application/json\' \r\n--data-raw \'{\r\n  \"apiKey\": \"YOUR_API_KEY\",\r\n  \"groupId\": \"GROUP ID\"\r\n}\'\r\n\r\n```\r\n ## Response\r\n``` json   \r\n{\r\n   \"success\": true,\r\n   \"code\": 200\r\n}\r\n``` \r\n', 'en', 41),
(38, '\r\n## Requête\r\n\r\nExemple de requête :\r\n\r\n``` bash\r\n {\r\n   \"apiKey\": \"API_KEY\",\r\n   \"groupId\": \"GROUP_ID\",\r\n   \"contactsList\": [\r\n       {\r\n           \"firstname\":\"firstname_1\",\r\n           \"lastname\":\"lastname_1\",\r\n           \"date\": \"2023-01-01\",\r\n           \"url\": \"http:...\",\r\n           \"phoneNumber\": \"0600000000\",\r\n           \"custom1\": \"email\"\r\n       },\r\n       {\r\n           \"firstname\":\"firstname_2\",\r\n           \"lastname\":\"lastname_2\",\r\n           \"date\": \"2023-01-01\",\r\n           \"url\": \"http:...\",\r\n           \"phoneNumber\": \"0600000001\",\r\n           \"custom1\": \"email\"\r\n       },\r\n       …\r\n   ]\r\n}\r\n```\r\n## Réponses\r\n``` json\r\n{\r\n   \"groupe\": {\r\n       \"name\": \"NOM DU GROUPEl\",\r\n       \"token\": \"GROUP_ID\"\r\n   },\r\n   \"results\": [\r\n       {\r\n           \"success\": false,\r\n           \"code\": 15,\r\n           \"phoneNumber\": \"+33600000000\",\r\n           \"message\": \"Le numéro est déjà dans le groupe\"\r\n       },\r\n       {\r\n           \"success\": false,\r\n           \"code\": 15,\r\n           \"phoneNumber\": \"+33600000001\",\r\n           \"message\": \"Le numéro est déjà dans le groupe\"\r\n       }\r\n   ],\r\n   \"rapport\": \r\n       {\r\n       \"nbline\": 2,\r\n       \"nbline_imported\": 0,\r\n       \"nbline_updated\": 0,\r\n       \"errors\": \r\n       {\r\n           \"stopSms\": 0,\r\n           \"invalidePhone\": 0,\r\n           \"duplicatePhone\": 0,\r\n           \"allreadyInGroupe\": 2,\r\n           \"urlInvalide\": 0,\r\n           \"dateInvalide\": 0,\r\n           \"empty\": 0,\r\n           \"unactivated\": 0,\r\n           \"dateInvalid\": 0\r\n       }\r\n   }\r\n}\r\n```\r\n', 'fr', 42),
(39, '\n## Request\nExample of a request:\n\n``` bash\n {\n   \"apiKey\": \"API_KEY\",\n   \"groupId\": \"GROUP_ID\",\n   \"contactsList\": [\n       {\n           \"firstname\":\"firstname_1\",\n           \"lastname\":\"lastname_1\",\n           \"date\": \"2023-01-01\",\n           \"url\": \"http:...\",\n           \"phoneNumber\": \"0600000000\",\n           \"custom1\": \"email\"\n       },\n       {\n           \"firstname\":\"firstname_2\",\n           \"lastname\":\"lastname_2\",\n           \"date\": \"2023-01-01\",\n           \"url\": \"http:...\",\n           \"phoneNumber\": \"0600000001\",\n           \"custom1\": \"email\"\n       },\n       …\n   ]\n}\n```\n## Responses\n``` json\n{\n   \"groupe\": {\n       \"name\": \"GROUP NAME\",\n       \"token\": \"GROUP_ID\"\n   },\n   \"results\": [\n       {\n           \"success\": false,\n           \"code\": 15,\n           \"phoneNumber\": \"+33600000000\",\n           \"message\": \"The number is already in the group\"\n       },\n       {\n           \"success\": false,\n           \"code\": 15,\n           \"phoneNumber\": \"+33600000001\",\n           \"message\": \"The number is already in the group\"\n       }\n   ],\n   \"rapport\": \n       {\n       \"nbline\": 2,\n       \"nbline_imported\": 0,\n       \"nbline_updated\": 0,\n       \"errors\": \n       {\n           \"stopSms\": 0,\n           \"invalidePhone\": 0,\n           \"duplicatePhone\": 0,\n           \"allreadyInGroupe\": 2,\n           \"urlInvalide\": 0,\n           \"dateInvalide\": 0,\n           \"empty\": 0,\n           \"unactivated\": 0,\n           \"dateInvalid\": 0\n       }\n   }\n}\n```\n', 'en', 43),
(40, '\r\n## Requête\r\n\r\nExemple de requête :\r\n\r\n``` bash\r\n{\r\n  \"url\": \"http://api.smspartner.fr/v1/contact/update\",\r\n  \"method\": \"POST\",\r\n  \"headers\": {\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  \"data\": {\r\n    \"apiKey\": \"YOUR_API_KEY\",\r\n    \"contactId\": \"ID CONTACT\",\r\n    \"contact\": {\r\n      \"phoneNumber\": \"+xxxxxxxxx\",\r\n      \"firstname\": \"prénom\",\r\n      \"lastname\": \"nom\",\r\n      \"url\": \"\",\r\n      \"date\": \"12-06-2020\",\r\n      \"custom2\": \"custom2\"\r\n    }\r\n  }\r\n}\r\n```\r\n## Réponses\r\n``` json\r\n{\r\n  \"success\": true,\r\n  \"code\": 200,\r\n  \"contact\": {\r\n    \"phoneNumber\": \"+xxxxxxxx\",\r\n    \"firstname\": \"prénom\",\r\n    \"lastname\": \"nom\",\r\n    \"url\": \"\",\r\n    \"date\": \"12-06-2020\",\r\n    \"custom2\": \"custom2\",\r\n    \"contactId\": \"ID CONTACT\"\r\n  }\r\n}\r\n```\r\n', 'fr', 44),
(41, '\r\n## Request\r\n\r\nExample of a request:\r\n\r\n``` bash\r\n{\r\n  \"url\": \"http://api.smspartner.fr/v1/contact/update\",\r\n  \"method\": \"POST\",\r\n  \"headers\": {\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  \"data\": {\r\n    \"apiKey\": \"YOUR_API_KEY\",\r\n    \"contactId\": \"CONTACT ID\",\r\n    \"contact\": {\r\n      \"phoneNumber\": \"+xxxxxxxxx\",\r\n      \"firstname\": \"firstname\",\r\n      \"lastname\": \"lastname\",\r\n      \"url\": \"\",\r\n      \"date\": \"12-06-2020\",\r\n      \"custom2\": \"custom2\"\r\n    }\r\n  }\r\n}\r\n```\r\n ## Responses\r\n``` json   \r\n{\r\n  \"success\": true,\r\n  \"code\": 200,\r\n  \"contact\": {\r\n    \"phoneNumber\": \"+xxxxxxxx\",\r\n    \"firstname\": \"firstname\",\r\n    \"lastname\": \"lastname\",\r\n    \"url\": \"\",\r\n    \"date\": \"12-06-2020\",\r\n    \"custom2\": \"custom2\",\r\n    \"contactId\": \"CONTACT ID\"\r\n  }\r\n}\r\n``` \r\n', 'en', 45),
(42, '\n## Requête\n\nExemple de requête :\n\n``` bash\ncurl --location --request \nPOST \'http://api.smspartner.fr/v1/contact/delete\' \n--header \'Content-Type: application/json\' \n--data-raw \'{\n   \"apiKey\": \"YOUR_API_KEY\",\n   \"contactId\": \"ID CONTACT\"}\'\n```\n## Réponses\n``` json\n{\n   \"success\": true,\n   \"code\": 200\n}\n```\n', 'fr', 46),
(43, '\r\n## Request\r\n\r\nRequest example:\r\n\r\n``` bash\r\ncurl --location --request \r\nPOST \'http://api.smspartner.fr/v1/contact/delete\' \r\n--header \'Content-Type: application/json\' \r\n--data-raw \'{\r\n   \"apiKey\": \"YOUR_API_KEY\",\r\n   \"contactId\": \"CONTACT_ID\"}\'\r\n```\r\n ## Responses\r\n``` json   \r\n{\r\n   \"success\": true,\r\n   \"code\": 200\r\n}\r\n``` \r\n', 'en', 47),
(44, '\r\n## Requête\r\n\r\nExemple de requête :\r\n\r\n``` bash\r\n{\r\n  \"curlCommand\": {\r\n    \"location\": true,\r\n    \"request\": \"GET\",\r\n    \"url\": \"https://api.smspartner.fr/v1/group/list?\r\n    apiKey=YOUR_API_KEY\"\r\n  }\r\n}\r\n```\r\n## Réponses\r\n``` json\r\n{\r\n  \"success\": false,\r\n  \"groups\": [\r\n    {\r\n      \"id\": \"identifiant du groupe\",\r\n      \"name\": \"groupe name\",\r\n      \"createdAt\": \"2020-10-02T16:40:05+02:00\",\r\n      \"isSpecialFile\": false,\r\n      \"isLocationFile\": false\r\n    }\r\n  ]\r\n}\r\n```\r\n', 'fr', 48),
(45, '\r\n## Request\r\n\r\nRequest example:\r\n\r\n``` bash\r\n{\r\n  \"curlCommand\": {\r\n    \"location\": true,\r\n    \"request\": \"GET\",\r\n    \"url\": \"https://api.smspartner.fr/v1/group/list?\r\n    apiKey=YOUR_API_KEY\"\r\n  }\r\n\r\n```\r\n ## Responses\r\n``` json   \r\n{\r\n  \"success\": false,\r\n  \"groups\": [\r\n    {\r\n      \"id\": \"identifiant du groupe\",\r\n      \"name\": \"groupe name\",\r\n      \"createdAt\": \"2020-10-02T16:40:05+02:00\",\r\n      \"isSpecialFile\": false,\r\n      \"isLocationFile\": false\r\n    }\r\n  ]\r\n}\r\n``` \r\n', 'en', 49),
(46, '\r\n## Requête\r\n\r\nExemple de requête :\r\n\r\n``` bash\r\n{\r\n  \"url\": \"https://api.smspartner.fr/v1/contact/detail?apiKey=YOUR_API_KEY&contactId=ID_CONTACT\",\r\n  \"method\": \"GET\",\r\n  \"location\": true\r\n}\r\n```\r\n## Réponses\r\n``` json\r\n{\r\n   \"success\": true,\r\n   \"code\": 200,\r\n   \"contact\": {\r\n       \"contactId\": \"ID CONTACT\",\r\n       \"phone\": \"+xxxxxxxxxxx\",\r\n       \"firstname\": \"\",\r\n       \"lastname\": \"\",\r\n       \"url\": \"\",\r\n       \"shortUrl\": \"\",\r\n       \"date\": \"\",\r\n       \"custom1\": \"\",\r\n       \"custom2\": \"\",\r\n       \"custom3\": \"\",\r\n       \"custom4\": \"\",\r\n       \"createdAt\": \"2020-10-02T16:40:05+02:00\",\r\n       \"stopSms\": false,\r\n       \"groupId\": 6363\r\n   }\r\n}\r\n```\r\n', 'fr', 52),
(47, '\r\n## Request\r\n\r\nRequest example:\r\n\r\n``` bash\r\n{\r\n  \"url\": \"https://api.smspartner.fr/v1/contact/detail?apiKey=YOUR_API_KEY&contactId=CONTACT_ID\",\r\n  \"method\": \"GET\",\r\n  \"location\": true\r\n}\r\n\r\n```\r\n ## Responses\r\n``` json   \r\n{\r\n   \"success\": true,\r\n   \"code\": 200,\r\n   \"contact\": {\r\n       \"contactId\": \"CONTACT ID\",\r\n       \"phone\": \"+xxxxxxxxxxx\",\r\n       \"firstname\": \"\",\r\n       \"lastname\": \"\",\r\n       \"url\": \"\",\r\n       \"shortUrl\": \"\",\r\n       \"date\": \"\",\r\n       \"custom1\": \"\",\r\n       \"custom2\": \"\",\r\n       \"custom3\": \"\",\r\n       \"custom4\": \"\",\r\n       \"createdAt\": \"2020-10-02T16:40:05+02:00\",\r\n       \"stopSms\": false,\r\n       \"groupId\": 6363\r\n   }\r\n}\r\n``` \r\n', 'en', 53);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(48, '## Requête\nExemple de requête :\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;? \n // Prepare data for GET request\n        $data = \'apiKey=YOUR_API_KEY\';\n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/stop-sms/list?\'.$data);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n \n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n    Dim phoneNumber As String = \"06XXXXXXXX\"\n    Dim messageId As Integer = XXX\n \n    #check credits\n    Dim url As String\n    url = base_url & \"stop-sms/list\" & \"?apiKey=\" & apiKey\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n <pre><code class=\"language-python\">\n  # std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_list_stop(self):\n		url = URL + \"/stop-sms/list?apiKey=\" + API_KEY\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n   </code></pre>\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -H \"Content-Type: application/json\" -X \nGET https://api.smspartner.fr/v1/stop-sms/list?apiKey=xxx\n    </code></pre>\n  </div>\n\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n\nconst apiKey = \'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\';\n\nconst options = {\n  hostname: \'api.smspartner.fr\',\n  port: 443,\n  path: `/v1/stop-sms/list?apiKey=${apiKey}`,\n  method: \'GET\',\n};\n\nconst req = https.request(options, (res) => {\n  console.log(`statusCode: ${res.statusCode}`);\n\n  let rawData = \'\';\n  res.on(\'data\', (chunk) => {\n    rawData += chunk;\n  });\n\n  res.on(\'end\', () => {\n    try {\n      const parsedData = JSON.parse(rawData);\n      // Process your response here\n      console.log(parsedData);\n    } catch (e) {\n      console.error(e.message);\n    }\n  });\n});\n\nreq.on(\'error\', (error) => {\n  console.error(error);\n});\n\nreq.end();\n        </code></pre>\n  </div>\n\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.stream.Collectors;\nimport org.json.JSONObject;\n\npublic class StopSMSList {\n    public static void main(String[] args) {\n        try {\n            String apiKey = \"YOUR_API_KEY\";\n            URL url = new URL(\"https://api.smspartner.fr/v1/stop-sms/list?apiKey=\" + apiKey);\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod(\"GET\");\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\n\n            // Reading API response\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String response = br.lines().collect(Collectors.joining());\n\n            // Parse JSON response\n            JSONObject jsonResponse = new JSONObject(response);\n\n            // Display the JSON response\n            System.out.println(jsonResponse.toString(2));\n\n            // Closing HTTP connection\n            conn.disconnect();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\n import SwiftUI\n\n// Structure pour la vue \"ListStopSMS\"\nstruct ListStopSMS: View {\n    var body: some View {\n        // Un bouton qui appelle la fonction ListStopSMS() lorsqu\'il est pressé\n        Button(action: {\n            ListStopSMS()\n        }) {\n            Text(\"Check Stop SMS List\")\n                .font(.system(size: 20))\n                .foregroundColor(.white)\n                .frame(minWidth: 0, maxWidth: .infinity)\n                .padding()\n                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))\n                .cornerRadius(10)\n                .padding(.horizontal)\n        }\n    }\n\n    // Fonction pour récupérer la liste des SMS stoppés\n    func ListStopSMS() {\n        let apiKey = \"XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX\" // Votre clé API\n        let urlString = \"https://api.smspartner.fr/v1/stop-sms/list?apiKey=(apiKey)\" // URL pour récupérer la liste des SMS stoppés\n\n        // On vérifie que l\'URL est correctement formée\n        guard let url = URL(string: urlString) else {\n            print(\"URL invalide\")\n            return\n        }\n\n        // Tâche pour récupérer les données de l\'URL\n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n            // Si une erreur survient, on l\'affiche\n            if let error = error {\n                print(\"Erreur : (error)\")\n            }\n            // Sinon, on affiche les données reçues\n            else if let data = data {\n                let str = String(data: data, encoding: .utf8)\n                print(\"Données reçues :\n(str ?? \"\")\")\n            }\n        }\n\n        task.resume() // On lance la tâche\n    }\n}\n\n// Aperçu de la vue\nstruct StopSMSList_Previews: PreviewProvider {\n    static var previews: some View {\n        ListStopSMS()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n<pre><code class=\"language-go\">\n  package main\n\nimport (\n	\"io/ioutil\"\n	\"log\"\n	\"net/http\"\n	\"time\"\n)\n\nfunc main() {\n	// Prepare data for GET request\n	apiKey := \"YOUR_API_KEY\"\n\n	// Create GET request URL\n	url := \"https://api.smspartner.fr/v1/stop-sms/list?\" +\n		\"apiKey=\" + apiKey\n\n	// Create HTTP client\n	client := &http.Client{Timeout: 10 * time.Second}\n\n	// Send GET request\n	resp, err := client.Get(url)\n	if err != nil {\n		log.Fatalf(\"Error sending request: %v\", err)\n	}\n	defer resp.Body.Close()\n\n	// Get response\n	body, err := ioutil.ReadAll(resp.Body)\n	if err != nil {\n		log.Fatalf(\"Error reading response body: %v\", err)\n	}\n\n	// Process your response here\n	log.Printf(\"Response: %s\", body)\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"VOTRE_CLÉ_API\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/stop-sms/list?apiKey={apiKey}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"La requête GET a échoué avec le code de statut: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Réponses\n\n### JSON\n```json\n{\n  \"success\": true,\n  \"code\": 200,\n  \"nbData\": 1,\n  \"data\": [\n    {\n      \"id\": 19,\n      \"phoneNumber\": \"+33xxxxxxxxx\",\n      \"createdAt\": \"2015-07-20 10:19:45\"\n    }\n  ]\n}\n```\n', 'fr', 54),
(49, '## Request\nRequest example\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;? \n // Prepare data for GET request\n        $data = \'apiKey=YOUR_API_KEY\';\n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/stop-sms/list?\'.$data);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n \n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n    Dim phoneNumber As String = \"06XXXXXXXX\"\n    Dim messageId As Integer = XXX\n \n    #check credits\n    Dim url As String\n    url = base_url & \"stop-sms/list\" & \"?apiKey=\" & apiKey\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n <pre><code class=\"language-python\">\n  # std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def get_list_stop(self):\n		url = URL + \"/stop-sms/list?apiKey=\" + API_KEY\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n   </code></pre>\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -H \"Content-Type: application/json\" -X \nGET https://api.smspartner.fr/v1/stop-sms/list?apiKey=xxx\n    </code></pre>\n  </div>\n\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n\nconst apiKey = \'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\';\n\nconst options = {\n  hostname: \'api.smspartner.fr\',\n  port: 443,\n  path: `/v1/stop-sms/list?apiKey=${apiKey}`,\n  method: \'GET\',\n};\n\nconst req = https.request(options, (res) => {\n  console.log(`statusCode: ${res.statusCode}`);\n\n  let rawData = \'\';\n  res.on(\'data\', (chunk) => {\n    rawData += chunk;\n  });\n\n  res.on(\'end\', () => {\n    try {\n      const parsedData = JSON.parse(rawData);\n      // Process your response here\n      console.log(parsedData);\n    } catch (e) {\n      console.error(e.message);\n    }\n  });\n});\n\nreq.on(\'error\', (error) => {\n  console.error(error);\n});\n\nreq.end();\n        </code></pre>\n  </div>\n\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.stream.Collectors;\nimport org.json.JSONObject;\n\npublic class StopSMSList {\n    public static void main(String[] args) {\n        try {\n            String apiKey = \"YOUR_API_KEY\";\n            URL url = new URL(\"https://api.smspartner.fr/v1/stop-sms/list?apiKey=\" + apiKey);\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod(\"GET\");\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\n\n            // Reading API response\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String response = br.lines().collect(Collectors.joining());\n\n            // Parse JSON response\n            JSONObject jsonResponse = new JSONObject(response);\n\n            // Display the JSON response\n            System.out.println(jsonResponse.toString(2));\n\n            // Closing HTTP connection\n            conn.disconnect();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\n import SwiftUI\n\n// Structure pour la vue \"ListStopSMS\"\nstruct ListStopSMS: View {\n    var body: some View {\n        // Un bouton qui appelle la fonction ListStopSMS() lorsqu\'il est pressé\n        Button(action: {\n            ListStopSMS()\n        }) {\n            Text(\"Check Stop SMS List\")\n                .font(.system(size: 20))\n                .foregroundColor(.white)\n                .frame(minWidth: 0, maxWidth: .infinity)\n                .padding()\n                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))\n                .cornerRadius(10)\n                .padding(.horizontal)\n        }\n    }\n\n    // Fonction pour récupérer la liste des SMS stoppés\n    func ListStopSMS() {\n        let apiKey = \"XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX\" // Votre clé API\n        let urlString = \"https://api.smspartner.fr/v1/stop-sms/list?apiKey=(apiKey)\" // URL pour récupérer la liste des SMS stoppés\n\n        // On vérifie que l\'URL est correctement formée\n        guard let url = URL(string: urlString) else {\n            print(\"URL invalide\")\n            return\n        }\n\n        // Tâche pour récupérer les données de l\'URL\n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n            // Si une erreur survient, on l\'affiche\n            if let error = error {\n                print(\"Erreur : (error)\")\n            }\n            // Sinon, on affiche les données reçues\n            else if let data = data {\n                let str = String(data: data, encoding: .utf8)\n                print(\"Données reçues :\n(str ?? \"\")\")\n            }\n        }\n\n        task.resume() // On lance la tâche\n    }\n}\n\n// Aperçu de la vue\nstruct StopSMSList_Previews: PreviewProvider {\n    static var previews: some View {\n        ListStopSMS()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n<pre><code class=\"language-go\">\n  package main\n\nimport (\n	\"io/ioutil\"\n	\"log\"\n	\"net/http\"\n	\"time\"\n)\n\nfunc main() {\n	// Prepare data for GET request\n	apiKey := \"YOUR_API_KEY\"\n\n	// Create GET request URL\n	url := \"https://api.smspartner.fr/v1/stop-sms/list?\" +\n		\"apiKey=\" + apiKey\n\n	// Create HTTP client\n	client := &http.Client{Timeout: 10 * time.Second}\n\n	// Send GET request\n	resp, err := client.Get(url)\n	if err != nil {\n		log.Fatalf(\"Error sending request: %v\", err)\n	}\n	defer resp.Body.Close()\n\n	// Get response\n	body, err := ioutil.ReadAll(resp.Body)\n	if err != nil {\n		log.Fatalf(\"Error reading response body: %v\", err)\n	}\n\n	// Process your response here\n	log.Printf(\"Response: %s\", body)\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"VOTRE_CLÉ_API\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/stop-sms/list?apiKey={apiKey}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"La requête GET a échoué avec le code de statut: \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n\n## Response\n\n### JSON\n```json\n{\n  \"success\": true,\n  \"code\": 200,\n  \"nbData\": 1,\n  \"data\": [\n    {\n      \"id\": 19,\n      \"phoneNumber\": \"+33xxxxxxxxx\",\n      \"createdAt\": \"2015-07-20 10:19:45\"\n    }\n  ]\n}\n```\n', 'en', 55),
(50, '## Requête\r\nExemple de requête :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n  // Prepare data for POST request\r\n        $fields = array(\r\n            \'apiKey\'=> \'YOUR API KEY\',\r\n            \'phoneNumber\'=> \'+336xxxxxxxx\'\r\n        );\r\n \r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/stop-sms/add\');\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n        curl_setopt($curl, CURLOPT_POST, 1);\r\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #send sms\r\n    url = base_url & \"stop-sms/add\"\r\n    #note : utiliser une librairie JSON en production, par exemple :\r\n    #https//www.nuget.org/packages/Newtonsoft.Json/\r\n    Dim parameters As String = String.Format(\r\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"phoneNumbers\"\":\"\"{1}\"\"}}\",\r\n        apiKey,\r\n        \"+33XXXXXXXXX\")\r\n    Console.Write(parameters)\r\n    apiRequest(\"POST\", url, parameters)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n # std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def add_stop(self,phone_numbers):\r\n \r\n		data = OrderedDict([\r\n			(\"apiKey\", API_KEY),\r\n			(\"phoneNumbers\", phone_numbers)\r\n		])\r\n \r\n		url = URL + \"/stop-sms/add\"\r\n		r = requests.post(url, data=json.dumps(data), verify=False)\r\n \r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" \r\n-X POST -d \'{\"apiKey\":\"xxxxx\",\"phoneNumber\":\"xxxx\"}\'\r\n https://api.smspartner.fr/v1/stop-sms/add\r\n    </code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst https = require(\'https\');\r\n\r\n// ce code permet d\'ajouter un numéro à la liste des numéros stop SMS\r\nlet data = JSON.stringify({\r\n  apiKey: \'VOTRE_API_KEY\',\r\n  phoneNumber: \'+336XXXXXXXX\',\r\n});\r\n\r\nlet options = {\r\n  hostname: \'api.smspartner.fr\',\r\n  path: \'/v1/stop-sms/add\',\r\n  method: \'POST\',\r\n  headers: {\r\n    \'Content-Type\': \'application/json\',\r\n    \'Content-Length\': data.length\r\n  }\r\n};\r\n\r\nlet req = https.request(options, (res) => {\r\n  let data = \'\';\r\n\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  console.log(\"Error: \" + err.message);\r\n});\r\n\r\nreq.write(data);\r\nreq.end();\r\n\r\n        </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\n\r\nimport java.io.OutputStream;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class StopSmsAddList {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for POST request\r\n            String apiKey = \"YOUR_API_KEY\";\r\n            String phoneNumber = \"+336xxxxxxxx\";\r\n\r\n            // Create JSON payload\r\n            String jsonPayload = \"{\"apiKey\": \"\" + apiKey + \"\", \"phoneNumber\": \"\" + phoneNumber + \"\"}\";\r\n\r\n            // Create POST request\r\n            URL url = new URL(\"https://api.smspartner.fr/v1/stop-sms/add\");\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"POST\");\r\n            connection.setRequestProperty(\"Content-Type\", \"application/json\");\r\n            connection.setDoOutput(true);\r\n\r\n            // Send POST request\r\n            OutputStream outputStream = connection.getOutputStream();\r\n            outputStream.write(jsonPayload.getBytes());\r\n            outputStream.flush();\r\n            outputStream.close();\r\n\r\n            // Get response\r\n            int responseCode = connection.getResponseCode();\r\n            if (responseCode >= 200 && responseCode <= 299) {\r\n                // Process your successful response here\r\n                System.out.println(\"Stop SMS request successful\");\r\n            } else {\r\n                // Process your error response here\r\n                System.out.println(\"Stop SMS request failed\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\n \r\n import SwiftUI\r\n\r\nstruct StopSmsAddList: View {\r\n    @State private var result: String = \"Loading...\"\r\n    \r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Stop SMS Add\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: addStopSms)\r\n    }\r\n    \r\n    func addStopSms() {\r\n        let apiKey = \"YOUR API KEY\"\r\n        let phoneNumber = \"+336xxxxxxxx\"\r\n        let urlString = \"https://api.smspartner.fr/v1/stop-sms/add\"\r\n        \r\n        guard let url = URL(string: urlString) else {\r\n            print(\"Invalid URL\")\r\n            return\r\n        }\r\n        \r\n        let fields = [\"apiKey\": apiKey, \"phoneNumber\": phoneNumber]\r\n        \r\n        var request = URLRequest(url: url)\r\n        request.httpMethod = \"POST\"\r\n        request.setValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\r\n        \r\n        do {\r\n            request.httpBody = try JSONSerialization.data(withJSONObject: fields, options: [])\r\n        } catch {\r\n            print(\"Failed to serialize data: (error.localizedDescription)\")\r\n            return\r\n        }\r\n        \r\n        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n            } else if let data = data {\r\n                let result = String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = result ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n        \r\n        task.resume()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n<pre><code class=\"language-go\">\r\n\r\n  package main\r\n\r\nimport (\r\n	\"bytes\"\r\n	\"encoding/json\"\r\n	\"log\"\r\n	\"net/http\"\r\n	\"time\"\r\n)\r\n\r\nfunc main() {\r\n	// Prepare data for POST request\r\n	data := map[string]string{\r\n		\"apiKey\":      \"YOUR_API_KEY\",\r\n		\"phoneNumber\": \"+336xxxxxxxx\",\r\n	}\r\n	jsonData, err := json.Marshal(data)\r\n	if err != nil {\r\n		log.Fatalf(\"Error marshaling data: %v\", err)\r\n	}\r\n\r\n	// Create HTTP client\r\n	client := &http.Client{Timeout: 10 * time.Second}\r\n\r\n	// Create POST request\r\n	req, err := http.NewRequest(\"POST\", \"https://api.smspartner.fr/v1/stop-sms/add\", bytes.NewBuffer(jsonData))\r\n	if err != nil {\r\n		log.Fatalf(\"Error creating request: %v\", err)\r\n	}\r\n\r\n	req.Header.Set(\"Content-Type\", \"application/json\")\r\n\r\n	// Send POST request\r\n	resp, err := client.Do(req)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Process your response here\r\n	log.Printf(\"Response status code: %d\", resp.StatusCode)\r\n}\r\n\r\n   </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\n\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Newtonsoft.Json;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var data = new\r\n        {\r\n            apiKey = \"YOUR_API_KEY\",\r\n            phoneNumber = \"+336xxxxxxxx\"\r\n        };\r\n\r\n        var json = JsonConvert.SerializeObject(data);\r\n        var content = new StringContent(json, Encoding.UTF8, \"application/json\");\r\n\r\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/stop-sms/add\", content);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"La requête POST a échoué avec le code de statut: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Réponses\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": true,\r\n    \"code\":200\r\n    \"stopId\": 300\r\n}\r\n```\r\n', 'fr', 56);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(51, '## Request\r\nRequest example\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n  // Prepare data for POST request\r\n        $fields = array(\r\n            \'apiKey\'=> \'YOUR API KEY\',\r\n            \'phoneNumber\'=> \'+336xxxxxxxx\'\r\n        );\r\n \r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/stop-sms/add\');\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n        curl_setopt($curl, CURLOPT_POST, 1);\r\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #send sms\r\n    url = base_url & \"stop-sms/add\"\r\n    #note : utiliser une librairie JSON en production, par exemple :\r\n    #https//www.nuget.org/packages/Newtonsoft.Json/\r\n    Dim parameters As String = String.Format(\r\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"phoneNumbers\"\":\"\"{1}\"\"}}\",\r\n        apiKey,\r\n        \"+33XXXXXXXXX\")\r\n    Console.Write(parameters)\r\n    apiRequest(\"POST\", url, parameters)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n # std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def add_stop(self,phone_numbers):\r\n \r\n		data = OrderedDict([\r\n			(\"apiKey\", API_KEY),\r\n			(\"phoneNumbers\", phone_numbers)\r\n		])\r\n \r\n		url = URL + \"/stop-sms/add\"\r\n		r = requests.post(url, data=json.dumps(data), verify=False)\r\n \r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" \r\n-X POST -d \'{\"apiKey\":\"xxxxx\",\"phoneNumber\":\"xxxx\"}\'\r\n https://api.smspartner.fr/v1/stop-sms/add\r\n    </code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst https = require(\'https\');\r\n\r\n// ce code permet d\'ajouter un numéro à la liste des numéros stop SMS\r\nlet data = JSON.stringify({\r\n  apiKey: \'VOTRE_API_KEY\',\r\n  phoneNumber: \'+336XXXXXXXX\',\r\n});\r\n\r\nlet options = {\r\n  hostname: \'api.smspartner.fr\',\r\n  path: \'/v1/stop-sms/add\',\r\n  method: \'POST\',\r\n  headers: {\r\n    \'Content-Type\': \'application/json\',\r\n    \'Content-Length\': data.length\r\n  }\r\n};\r\n\r\nlet req = https.request(options, (res) => {\r\n  let data = \'\';\r\n\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  console.log(\"Error: \" + err.message);\r\n});\r\n\r\nreq.write(data);\r\nreq.end();\r\n\r\n        </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\n\r\nimport java.io.OutputStream;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class StopSmsAddList {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for POST request\r\n            String apiKey = \"YOUR_API_KEY\";\r\n            String phoneNumber = \"+336xxxxxxxx\";\r\n\r\n            // Create JSON payload\r\n            String jsonPayload = \"{\"apiKey\": \"\" + apiKey + \"\", \"phoneNumber\": \"\" + phoneNumber + \"\"}\";\r\n\r\n            // Create POST request\r\n            URL url = new URL(\"https://api.smspartner.fr/v1/stop-sms/add\");\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"POST\");\r\n            connection.setRequestProperty(\"Content-Type\", \"application/json\");\r\n            connection.setDoOutput(true);\r\n\r\n            // Send POST request\r\n            OutputStream outputStream = connection.getOutputStream();\r\n            outputStream.write(jsonPayload.getBytes());\r\n            outputStream.flush();\r\n            outputStream.close();\r\n\r\n            // Get response\r\n            int responseCode = connection.getResponseCode();\r\n            if (responseCode >= 200 && responseCode <= 299) {\r\n                // Process your successful response here\r\n                System.out.println(\"Stop SMS request successful\");\r\n            } else {\r\n                // Process your error response here\r\n                System.out.println(\"Stop SMS request failed\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\n \r\n import SwiftUI\r\n\r\nstruct StopSmsAddList: View {\r\n    @State private var result: String = \"Loading...\"\r\n    \r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Stop SMS Add\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: addStopSms)\r\n    }\r\n    \r\n    func addStopSms() {\r\n        let apiKey = \"YOUR API KEY\"\r\n        let phoneNumber = \"+336xxxxxxxx\"\r\n        let urlString = \"https://api.smspartner.fr/v1/stop-sms/add\"\r\n        \r\n        guard let url = URL(string: urlString) else {\r\n            print(\"Invalid URL\")\r\n            return\r\n        }\r\n        \r\n        let fields = [\"apiKey\": apiKey, \"phoneNumber\": phoneNumber]\r\n        \r\n        var request = URLRequest(url: url)\r\n        request.httpMethod = \"POST\"\r\n        request.setValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\r\n        \r\n        do {\r\n            request.httpBody = try JSONSerialization.data(withJSONObject: fields, options: [])\r\n        } catch {\r\n            print(\"Failed to serialize data: (error.localizedDescription)\")\r\n            return\r\n        }\r\n        \r\n        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n            } else if let data = data {\r\n                let result = String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = result ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n        \r\n        task.resume()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n<pre><code class=\"language-go\">\r\n\r\n  package main\r\n\r\nimport (\r\n	\"bytes\"\r\n	\"encoding/json\"\r\n	\"log\"\r\n	\"net/http\"\r\n	\"time\"\r\n)\r\n\r\nfunc main() {\r\n	// Prepare data for POST request\r\n	data := map[string]string{\r\n		\"apiKey\":      \"YOUR_API_KEY\",\r\n		\"phoneNumber\": \"+336xxxxxxxx\",\r\n	}\r\n	jsonData, err := json.Marshal(data)\r\n	if err != nil {\r\n		log.Fatalf(\"Error marshaling data: %v\", err)\r\n	}\r\n\r\n	// Create HTTP client\r\n	client := &http.Client{Timeout: 10 * time.Second}\r\n\r\n	// Create POST request\r\n	req, err := http.NewRequest(\"POST\", \"https://api.smspartner.fr/v1/stop-sms/add\", bytes.NewBuffer(jsonData))\r\n	if err != nil {\r\n		log.Fatalf(\"Error creating request: %v\", err)\r\n	}\r\n\r\n	req.Header.Set(\"Content-Type\", \"application/json\")\r\n\r\n	// Send POST request\r\n	resp, err := client.Do(req)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Process your response here\r\n	log.Printf(\"Response status code: %d\", resp.StatusCode)\r\n}\r\n\r\n   </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\n\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Newtonsoft.Json;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var data = new\r\n        {\r\n            apiKey = \"YOUR_API_KEY\",\r\n            phoneNumber = \"+336xxxxxxxx\"\r\n        };\r\n\r\n        var json = JsonConvert.SerializeObject(data);\r\n        var content = new StringContent(json, Encoding.UTF8, \"application/json\");\r\n\r\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/stop-sms/add\", content);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"La requête POST a échoué avec le code de statut: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n## Response\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": true,\r\n    \"code\":200\r\n    \"stopId\": 300\r\n}\r\n```\r\n', 'en', 57),
(52, '## Requête\r\nExemple de requête :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n       // Prepare data for GET request\r\n        $data = \'apiKey=YOUR_API_KEY&id=666\';\r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/stop-sms/delete?\'.$data);\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n \r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n    Dim id As Integer = XXX\r\n \r\n    #check credits\r\n    Dim url As String\r\n    url = base_url & \"stop-sms/delete\" & \"?apiKey=\" & apiKey & \"&id=\" & id\r\n \r\n    Dim credits As String\r\n    credits = apiRequest(\"GET\", url, Nothing)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def del_stop(self,id):\r\n		url = URL + \"/stop-sms/delete?apiKey=\" + API_KEY + \"&id=\" + id\r\n		r = requests.get(url)\r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" \r\n-X GET  https://api.smspartner.fr/v1/stop-sms/delete?apiKey=xxx&id=300\r\n    </code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\n\r\nconst https = require(\'https\');\r\n\r\nlet data = \'apiKey=your-api-key&id=333\';\r\nlet url = \'https://api.smspartner.fr/v1/stop-sms/delete?\' + data;\r\n\r\nhttps.get(url, (res) => {\r\n  let data = \'\';\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  console.log(\"Erreur: \" + err.message);\r\n});\r\n        </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class StopSmsDeleteList {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for GET request\r\n            String apiKey = \"YOUR_API_KEY\";\r\n            String id = \"666\";\r\n\r\n            // Create GET request URL\r\n            String urlString = \"https://api.smspartner.fr/v1/stop-sms/delete?\" +\r\n                    \"apiKey=\" + apiKey + \"&id=\" + id;\r\n\r\n            // Create URL object\r\n            URL url = new URL(urlString);\r\n\r\n            // Create HTTP connection\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"GET\");\r\n            connection.setConnectTimeout(10000);\r\n            connection.setReadTimeout(10000);\r\n\r\n            // Send GET request\r\n            int responseCode = connection.getResponseCode();\r\n\r\n            // Get response\r\n            BufferedReader reader;\r\n            if (responseCode >= 200 && responseCode <= 299) {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\r\n            } else {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));\r\n            }\r\n\r\n            StringBuilder response = new StringBuilder();\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                response.append(line);\r\n            }\r\n            reader.close();\r\n\r\n            // Process your response here\r\n            System.out.println(response.toString());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\n \r\nimport SwiftUI\r\n\r\nstruct StopSmsDeleteList: View {\r\n    @State private var result: String = \"Loading...\"\r\n    \r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Stop Sms Delete\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: deleteStopSms)\r\n    }\r\n\r\n    func deleteStopSms() {\r\n        let apiKey = \"YOUR_API_KEY\"\r\n        let id = \"666\"\r\n        let urlString = \"https://api.smspartner.fr/v1/stop-sms/delete?apiKey=(apiKey)&id=(id)\"\r\n\r\n        guard let url = URL(string: urlString) else {\r\n            print(\"URL inválida\")\r\n            return\r\n        }\r\n\r\n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n            } else if let data = data {\r\n                let result = String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = result ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n<pre><code class=\"language-go\">\r\n\r\npackage main\r\n\r\nimport (\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n	\"time\"\r\n)\r\n\r\nfunc main() {\r\n	// Prepare data for GET request\r\n	apiKey := \"YOUR_API_KEY\"\r\n	id := \"666\"\r\n\r\n	// Create HTTP client with timeout\r\n	client := &http.Client{Timeout: 10 * time.Second}\r\n\r\n	// Create GET request URL\r\n	url := \"https://api.smspartner.fr/v1/stop-sms/delete?apiKey=\" + apiKey + \"&id=\" + id\r\n\r\n	// Send GET request\r\n	resp, err := client.Get(url)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Process your response here\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response: %v\", err)\r\n	}\r\n\r\n	log.Printf(\"Response: %s\", body)\r\n}\r\n   </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\n\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var apiKey = \"VOTRE_CLÉ_API\";\r\n        var id = \"666\";\r\n        var uri = new Uri($\"https://api.smspartner.fr/v1/stop-sms/delete?apiKey={apiKey}&id={id}\");\r\n\r\n        HttpResponseMessage response = await client.GetAsync(uri);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"La demande GET a échoué avec le code d\'état : \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Réponses\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": true,\r\n    \"code\":200\r\n}\r\n```\r\n', 'fr', 58),
(53, '## Request\nRequest example\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;? \n       // Prepare data for GET request\n        $data = \'apiKey=YOUR_API_KEY&id=666\';\n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/stop-sms/delete?\'.$data);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n \n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n    Dim id As Integer = XXX\n \n    #check credits\n    Dim url As String\n    url = base_url & \"stop-sms/delete\" & \"?apiKey=\" & apiKey & \"&id=\" & id\n \n    Dim credits As String\n    credits = apiRequest(\"GET\", url, Nothing)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def del_stop(self,id):\n		url = URL + \"/stop-sms/delete?apiKey=\" + API_KEY + \"&id=\" + id\n		r = requests.get(url)\n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n\n   </code></pre>\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -H  \"Content-Type: application/json\" \n-X GET  https://api.smspartner.fr/v1/stop-sms/delete?apiKey=xxx&id=300\n    </code></pre>\n  </div>\n\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\n\nconst https = require(\'https\');\n\nlet data = \'apiKey=your-api-key&id=333\';\nlet url = \'https://api.smspartner.fr/v1/stop-sms/delete?\' + data;\n\nhttps.get(url, (res) => {\n  let data = \'\';\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  console.log(\"Erreur: \" + err.message);\n});\n        </code></pre>\n  </div>\n\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class StopSmsDeleteList {\n    public static void main(String[] args) {\n        try {\n            // Prepare data for GET request\n            String apiKey = \"YOUR_API_KEY\";\n            String id = \"666\";\n\n            // Create GET request URL\n            String urlString = \"https://api.smspartner.fr/v1/stop-sms/delete?\" +\n                    \"apiKey=\" + apiKey + \"&id=\" + id;\n\n            // Create URL object\n            URL url = new URL(urlString);\n\n            // Create HTTP connection\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n            connection.setConnectTimeout(10000);\n            connection.setReadTimeout(10000);\n\n            // Send GET request\n            int responseCode = connection.getResponseCode();\n\n            // Get response\n            BufferedReader reader;\n            if (responseCode >= 200 && responseCode <= 299) {\n                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n            } else {\n                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));\n            }\n\n            StringBuilder response = new StringBuilder();\n            String line;\n            while ((line = reader.readLine()) != null) {\n                response.append(line);\n            }\n            reader.close();\n\n            // Process your response here\n            System.out.println(response.toString());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\n \nimport SwiftUI\n\nstruct StopSmsDeleteList: View {\n    @State private var result: String = \"Loading...\"\n    \n    var body: some View {\n        VStack {\n            Text(\"Stop Sms Delete\")\n                .font(.title)\n                .padding()\n\n            Text(result)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: deleteStopSms)\n    }\n\n    func deleteStopSms() {\n        let apiKey = \"YOUR_API_KEY\"\n        let id = \"666\"\n        let urlString = \"https://api.smspartner.fr/v1/stop-sms/delete?apiKey=(apiKey)&id=(id)\"\n\n        guard let url = URL(string: urlString) else {\n            print(\"URL inválida\")\n            return\n        }\n\n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let result = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    self.result = result ?? \"Error\"\n                }\n            }\n        }\n\n        task.resume()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n<pre><code class=\"language-go\">\n\npackage main\n\nimport (\n	\"io/ioutil\"\n	\"log\"\n	\"net/http\"\n	\"time\"\n)\n\nfunc main() {\n	// Prepare data for GET request\n	apiKey := \"YOUR_API_KEY\"\n	id := \"666\"\n\n	// Create HTTP client with timeout\n	client := &http.Client{Timeout: 10 * time.Second}\n\n	// Create GET request URL\n	url := \"https://api.smspartner.fr/v1/stop-sms/delete?apiKey=\" + apiKey + \"&id=\" + id\n\n	// Send GET request\n	resp, err := client.Get(url)\n	if err != nil {\n		log.Fatalf(\"Error sending request: %v\", err)\n	}\n	defer resp.Body.Close()\n\n	// Process your response here\n	body, err := ioutil.ReadAll(resp.Body)\n	if err != nil {\n		log.Fatalf(\"Error reading response: %v\", err)\n	}\n\n	log.Printf(\"Response: %s\", body)\n}\n   </code></pre>\n  </div>\n\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\n\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var apiKey = \"VOTRE_CLÉ_API\";\n        var id = \"666\";\n        var uri = new Uri($\"https://api.smspartner.fr/v1/stop-sms/delete?apiKey={apiKey}&id={id}\");\n\n        HttpResponseMessage response = await client.GetAsync(uri);\n\n        if (response.IsSuccessStatusCode)\n        {\n            var result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"La demande GET a échoué avec le code d\'état : \" + response.StatusCode);\n        }\n    }\n}\n   </code></pre>\n  </div>\n</div>\n## Response\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\":200\n}\n```\n', 'en', 59),
(54, '# Réponse sur un numéro long\n\nSMS Partner vous propose la location d’un numéro long (exemple : 06 XX XX XX XX).\nPour en savoir plus sur la création d’un numéro dédié, [contactez-nous](https://www.smspartner.fr/contact).\n\n   <div class=\"alert alert-info\">\nA noter : Pour recevoir les réponses: paramétrer votre <strong> URL de réception des réponses </strong> dans votre onglet   <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">API SMS </a>. </div>\n\n## Exemple de réponse sur un SMS simple (160 caractères maximum)\n\n``` json\nArray\n(\n    \'msisdn\' => \'33xxxxxxxxx\', //numéro de la personne qui envoi le SMS\n    \'to\' => \'33xxxxxxxxx\',\n    \'messageId\' => \'02000000XXXXXXXXX\',\n    \'text\' => \'Test\',\n    \'type\' =>  \'text\',\n    \'keyword\' => \'Test\',\n    \'message-timestamp\' => \'2016-03-10 09:51:46\'\n)\n\n```\n<br>\n## Exemple de réponse sur un SMS long (plus de 160 caractères)\n``` json\nArray\n(\n    \'msisdn\' =&gt; \'33xxxxxxxxx\', //numéro de la personne qui envoi le SMS\n    \'to\' =&gt; \'33xxxxxxxxx\',\n    \'messageId\' =&gt; \'02000000YYYYYYYY\',\n    \'concat\' =&gt; \'true\',\n    \'concat-ref\' =&gt; \'171\',\n    \'concat-total\' =&gt; \'2\',\n    \'concat-part\' =&gt; \'1\',\n    \'text\' =&gt; \'   Message long....\',\n    \'type\' =&gt; \'text\',\n    \'keyword\' =&gt; \'MESSAGELONG\',\n    \'message-timestamp\' =&gt; \'2016-03-09 16:00:30\'\n)\n \nArray\n(\n    \'msisdn\' =&gt; \'33xxxxxxxxx\', //numéro de la personne qui envoi le SMS\n    \'to\' =&gt; \'33xxxxxxxxx\',\n    \'messageId\' =&gt; \'02000000XXXXXXXX\',\n    \'concat\' =&gt; \'true\',\n    \'concat-ref\' =&gt; \'171\',\n    \'concat-total\' =&gt; \'2\',\n    \'concat-part\' =&gt; \'2\',\n    \'text\' =&gt; \'....très long\',\n    \'type\' =&gt; \'text\',\n    \'keyword\' =&gt; \'TRESLONG\',\n    \'message-timestamp\' =&gt; \'2016-03-09 16:00:31\'\n)\n```\n# Réponse sur un numéro court (SMS Premium)\n\nAprès l’envoi d’une campagne depuis notre numéro court, SMS Partner vous permet de recevoir des réponses.\nPour en savoir plus, [contactez-nous](https://www.smspartner.fr/contact).\n<div class=\"alert alert-info\">\nA noter : Pour recevoir les réponses: paramétrer votre <strong> URL de réception des réponses </strong> dans votre onglet   <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">API SMS </a>. </div>\n\n## Exemple de réponse depuis notre numéro court\n\n```json\nArray (\n  \'type\' => \'response\',\n  \'phone_number\' => \'+336XXXXXXX1\',\n  \'text\' => \'Ma réponse\',\n  \'message_id\' => \'123\'\n)\n```\n', 'fr', 60),
(55, '\n\n# Response on a long number\n\nSMS Partner offers you the rental of a long number (example: 06 XX XX XX XX).\nTo learn more about creating a dedicated number, [contact us](https://www.smspartner.fr/contact).\n\n   <div class=\"alert alert-info\">\nNote: To receive responses: configure your <strong> response reception URL </strong> in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS API </a> </div>\n\n## Example of a response on a simple SMS (160 characters maximum)\n\n``` json\nArray\n(\n    \'msisdn\' => \'33xxxxxxxxx\', //number of the person sending the SMS\n    \'to\' => \'33xxxxxxxxx\',\n    \'messageId\' => \'02000000XXXXXXXXX\',\n    \'text\' => \'Test\',\n    \'type\' =>  \'text\',\n    \'keyword\' => \'Test\',\n    \'message-timestamp\' => \'2016-03-10 09:51:46\'\n\n)\n```\n## Example of a response on a long SMS (more than 160 characters)\n``` json\nArray\n(\n    \'msisdn\' => \'33xxxxxxxxx\', //number of the person sending the SMS\n    \'to\' => \'33xxxxxxxxx\',\n    \'messageId\' => \'02000000YYYYYYYY\',\n    \'concat\' => \'true\',\n    \'concat-ref\' => \'171\',\n    \'concat-total\' => \'2\',\n    \'concat-part\' => \'1\',\n    \'text\' => \'   Long message....\',\n    \'type\' => \'text\',\n    \'keyword\' => \'LONGMESSAGE\',\n    \'message-timestamp\' => \'2016-03-09 16:00:30\'\n)\n \nArray\n(\n    \'msisdn\' => \'33xxxxxxxxx\', //number of the person sending the SMS\n    \'to\' => \'33xxxxxxxxx\',\n    \'messageId\' => \'02000000XXXXXXXX\',\n    \'concat\' => \'true\',\n    \'concat-ref\' => \'171\',\n    \'concat-total\' => \'2\',\n    \'concat-part\' => \'2\',\n    \'text\' => \'....very long\',\n    \'type\' => \'text\',\n    \'keyword\' => \'VERYLONG\',\n    \'message-timestamp\' => \'2016-03-09 16:00:31\'\n)\n```\n<br> \n# Response on a short number (SMS Premium) \n\nAfter sending a campaign from our short number, SMS Partner allows you to receive responses.\nTo learn more,  [contact us](https://www.smspartner.fr/contact). \n<div class=\"alert alert-info\"> Note: To receive responses: configure your <strong> response reception URL </strong> in your <a href=\"https://my.smspartner.fr/connexion\" style=\"background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;\">SMS API </a> </div>\n\n## Example of a response from our short number\n\n```json\nArray (\n  \'type\' => \'response\',\n  \'phone_number\' => \'+336XXXXXXX1\',\n  \'text\' => \'My response\',\n  \'message_id\' => \'123\'\n)\n```\n', 'en', 61);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(56, '## Requête\r\nExemple de requête :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n       // Prepare data for POST request\r\n        $fields = array(\r\n            \'apiKey\'=> \'YOUR API KEY\',\r\n            \'type\'=> \'advanced\',\r\n            \'parameters\'=>array(\r\n                \'email\':\'aaaa@bbb.ccc\',\r\n    	        \'creditToAttribute\':10,\r\n    	        \'isBuyer\':0,\r\n    	        \'firstname\':\'prenom\',\r\n    	        \'lastname\':\'nom\'\r\n            ));\r\n \r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/subaccount/create\');\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n        curl_setopt($curl, CURLOPT_POST, 1);\r\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #send sms\r\n    url = base_url & \"subaccount/create\"\r\n    #note : utiliser une librairie JSON en production, par exemple :\r\n    #https//www.nuget.org/packages/Newtonsoft.Json/\r\n    Dim parameters As String = String.Format(\r\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"type\"\":\"\"{1}\"\",\"\"parameters\"\":\"\"{2}\"\"}}\",\r\n        apiKey,\r\n        \"advanced\",\r\n        {\"email\":\"aaaa@bbb.ccc\",\"creditToAttribute\":10,\"isBuyer\":0,\"firstname\":\"prenom\",\"lastname\":\"nom\"})\r\n    Console.Write(parameters)\r\n    apiRequest(\"POST\", url, parameters)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def create(self,creditToAdd,userId):\r\n \r\n		data = {\"apiKey\":APIKEY,\"type\":\"advanced\",\"parameters\": {\"email\":\"aaaa@bbb.ccc\",\"creditToAttribute\":10,\"isBuyer\":0,\"firstname\":\"prenom\",\"lastname\":\"nom\"}}\r\n \r\n \r\n		url = URL + \"/subaccount/create\"\r\n		r = requests.post(url, data=json.dumps(data), verify=False)\r\n \r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" \r\ncurl -H  \"Content-Type: application/json\" -X POST -d \'{\"apiKey\":\"xxxxx\",\"type\":\"advanced\",\"parameters\":\r\n{\"email\":\"aaaa@bbb.ccc\",\"creditToAttribute\":10,\"isBuyer\":0,\"firstname\":\"prenom\",\"lastname\":\"nom\"}}\'\r\n https://api.smspartner.fr/v1/subaccount/create\r\n  </code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\n\r\nconst https = require(\"https\");\r\n\r\n// Remplacez par votre clé API\r\nconst apiKey = \"VOTRE_CLÉ_API\";\r\n\r\n// Préparer les données pour la requête POST\r\nconst data = JSON.stringify({\r\n  apiKey: apiKey,\r\n  type: \"advanced\",\r\n  parameters: {\r\n    email: \"aaaa@bbb.ccc\",\r\n    creditToAttribute: 10,\r\n    isBuyer: 0,\r\n    firstname: \"prenom\",\r\n    lastname: \"nom\",\r\n  },\r\n});\r\n\r\n// Définir les options pour la requête HTTP POST vers l\'API SMS Partner\r\nconst options = {\r\n  hostname: \"api.smspartner.fr\",\r\n  port: 443,\r\n  path: \"/v1/subaccount/create\",\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Content-Length\": data.length,\r\n    \"cache-control\": \"no-cache\",\r\n  },\r\n};\r\n\r\n// Effectuer la requête HTTP POST avec les options et données définies précédemment\r\nconst req = https.request(options, (res) => {\r\n  console.log(`statusCode: ${res.statusCode}`);\r\n\r\n  // Afficher les données de réponse de l\'API sur la sortie standard\r\n  res.on(\"data\", (d) => {\r\n    process.stdout.write(d);\r\n  });\r\n});\r\n\r\n// Afficher en cas d\'erreur lors de l\'exécution de la requête HTTP POST\r\nreq.on(\"error\", (error) => {\r\n  console.error(error);\r\n});\r\n\r\n// Envoyer les données de l\'objet \'data\' à la demande\r\nreq.write(data);\r\n// Terminer la demande HTTP POST\r\nreq.end();\r\n        </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.io.OutputStream;\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.util.stream.Collectors;\r\nimport org.json.JSONObject;\r\n\r\n\r\npublic class SubAccountCreation {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Remplacez par votre clé API\r\n            String apiKey = \"VOTRE_CLÉ_API\";\r\n\r\n            // Préparer les données pour la requête POST\r\n            JSONObject parameters = new JSONObject();\r\n            parameters.put(\"email\", \"aaaa@bbb.ccc\");\r\n            parameters.put(\"creditToAttribute\", 10);\r\n            parameters.put(\"isBuyer\", 0);\r\n            parameters.put(\"firstname\", \"prenom\");\r\n            parameters.put(\"lastname\", \"nom\");\r\n\r\n            JSONObject json = new JSONObject();\r\n            json.put(\"apiKey\", apiKey);\r\n            json.put(\"type\", \"advanced\");\r\n            json.put(\"parameters\", parameters);\r\n\r\n            URL url = new URL(\"https://api.smspartner.fr/v1/subaccount/create\");\r\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\r\n            conn.setRequestMethod(\"POST\");\r\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\r\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\r\n            conn.setDoOutput(true);\r\n\r\n            // Écriture des données JSON dans le corps de la requête HTTP\r\n            OutputStream os = conn.getOutputStream();\r\n            os.write(json.toString().getBytes());\r\n            os.flush();\r\n\r\n            // Lecture de la réponse de l\'API\r\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\r\n            String response = br.lines().collect(Collectors.joining());\r\n\r\n            // Afficher la réponse JSON\r\n            System.out.println(response);\r\n\r\n            // Fermeture de la connexion HTTP\r\n            conn.disconnect();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\n \r\nimport SwiftUI\r\n\r\n// Structure pour la vue \"CreationSubCompte\"\r\nstruct CreationSubCompte: View {\r\n    var body: some View {\r\n        // Un bouton qui appelle la fonction createSubaccount() lorsqu\'il est pressé\r\n        Button(action: {\r\n            createSubaccount()\r\n        }) {\r\n            Text(\"Créer sous-compte\")\r\n                .font(.system(size: 20))\r\n                .foregroundColor(.white)\r\n                .frame(minWidth: 0, maxWidth: .infinity)\r\n                .padding()\r\n                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))\r\n                .cornerRadius(10)\r\n                .padding(.horizontal)\r\n        }\r\n    }\r\n\r\n    // Fonction pour créer un sous-compte\r\n    func createSubaccount() {\r\n        let url = URL(string: \"https://api.smspartner.fr/v1/subaccount/create\")! // URL pour créer un sous-compte\r\n\r\n        // Paramètres pour la requête\r\n        let parameters: [String: Any] = [\r\n            \"apiKey\": \"TU_CLAVE_API\", // Votre clé API\r\n            \"type\": \"advanced\",\r\n            \"parameters\": [\r\n                \"email\": \"aaaa@bbb.ccc\", // Adresse e-mail du sous-compte\r\n                \"creditToAttribute\": 10, // Crédit à attribuer\r\n                \"isBuyer\": 0, // Indique si le sous-compte est un acheteur\r\n                \"firstname\": \"prenom\", // Prénom de l\'utilisateur du sous-compte\r\n                \"lastname\": \"nom\" // Nom de l\'utilisateur du sous-compte\r\n            ] as [String : Any]\r\n        ]\r\n\r\n        // Création de la requête\r\n        var request = URLRequest(url: url)\r\n        request.httpMethod = \"POST\"\r\n        request.setValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\r\n        request.setValue(\"no-cache\", forHTTPHeaderField: \"cache-control\")\r\n\r\n        // Ajout du corps de la requête\r\n        do {\r\n            request.httpBody = try JSONSerialization.data(withJSONObject: parameters, options: .prettyPrinted)\r\n        } catch let error {\r\n            print(error.localizedDescription)\r\n        }\r\n\r\n        // Tâche pour envoyer la requête et recevoir la réponse\r\n        let task = URLSession.shared.dataTask(with: request) { data, response, error in\r\n            // Si une erreur survient, on l\'affiche\r\n            if let error = error {\r\n                print(\"Erreur : (error)\")\r\n            }\r\n            // Sinon, on traite les données reçues\r\n            else if let data = data {\r\n                do {\r\n                    // On tente de convertir les données reçues en JSON\r\n                    if let json = try JSONSerialization.jsonObject(with: data, options: .mutableContainers) as? [String: Any] {\r\n                        print(json) // On affiche le JSON obtenu\r\n                    }\r\n                } catch let error {\r\n                    print(\"Erreur : (error)\")\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume() // On lance la tâche\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n<pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"bytes\"\r\n	\"encoding/json\"\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n)\r\n\r\ntype Fields struct {\r\n	APIKey     string      `json:\"apiKey\"`\r\n	Type       string      `json:\"type\"`\r\n	Parameters Parameters `json:\"parameters\"`\r\n}\r\n\r\ntype Parameters struct {\r\n	Email            string `json:\"email\"`\r\n	CreditToAttribute int    `json:\"creditToAttribute\"`\r\n	IsBuyer          int    `json:\"isBuyer\"`\r\n	Firstname        string `json:\"firstname\"`\r\n	Lastname         string `json:\"lastname\"`\r\n}\r\n\r\nfunc main() {\r\n	// Prepare data for POST request\r\n	data := Fields{\r\n		APIKey: \"YOUR_API_KEY\",\r\n		Type:   \"advanced\",\r\n		Parameters: Parameters{\r\n			Email:            \"aaaa@bbb.ccc\",\r\n			CreditToAttribute: 10,\r\n			IsBuyer:          0,\r\n			Firstname:        \"prenom\",\r\n			Lastname:         \"nom\",\r\n		},\r\n	}\r\n\r\n	payloadBuf := new(bytes.Buffer)\r\n	json.NewEncoder(payloadBuf).Encode(data)\r\n\r\n	// Create POST request\r\n	req, err := http.NewRequest(\"POST\", \"https://api.smspartner.fr/v1/subaccount/create\", payloadBuf)\r\n	if err != nil {\r\n		log.Fatalf(\"Error creating request: %v\", err)\r\n	}\r\n	req.Header.Add(\"Content-Type\", \"application/json\")\r\n\r\n	// Create HTTP client and send the request\r\n	client := &http.Client{}\r\n	resp, err := client.Do(req)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Read the response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response: %v\", err)\r\n	}\r\n\r\n	// Print the response status and body\r\n	log.Printf(\"Response status: %s\", resp.Status)\r\n	log.Printf(\"Response body: %s\", string(body))\r\n}\r\n   </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Newtonsoft.Json;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var fields = new\r\n        {\r\n            apiKey = \"VOTRE_CLÉ_API\",\r\n            type = \"advanced\",\r\n            parameters = new \r\n            {\r\n                email = \"aaaa@bbb.ccc\",\r\n                creditToAttribute = 10,\r\n                isBuyer = 0,\r\n                firstname = \"prenom\",\r\n                lastname = \"nom\"\r\n            }\r\n        };\r\n\r\n        var json = JsonConvert.SerializeObject(fields);\r\n\r\n        var uri = new Uri(\"https://api.smspartner.fr/v1/subaccount/create\");\r\n        var content = new StringContent(json, Encoding.UTF8, \"application/json\");\r\n\r\n        HttpResponseMessage response = await client.PostAsync(uri, content);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"La requête POST a échoué avec le code d\'état : \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Réponses\r\n\r\n### JSON\r\n```json\r\n{\r\n \"success\":true,\r\n \"code\":200,\r\n \"subaccount\":\r\n {\r\n    \"email\":\"aaaa@bbb.ccc\",\r\n    \"token\":\"token\"\r\n },\r\n \"sendConfirmMailTo\":\"aaaa@bbb.ccc\",\r\n \"parent_email\":\"emailparent@ddd.eee\"\r\n}\r\n```\r\n', 'fr', 64),
(57, '## Request\r\nRequest example\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n       // Prepare data for POST request\r\n        $fields = array(\r\n            \'apiKey\'=> \'YOUR API KEY\',\r\n            \'type\'=> \'advanced\',\r\n            \'parameters\'=>array(\r\n                \'email\':\'aaaa@bbb.ccc\',\r\n    	        \'creditToAttribute\':10,\r\n    	        \'isBuyer\':0,\r\n    	        \'firstname\':\'prenom\',\r\n    	        \'lastname\':\'nom\'\r\n            ));\r\n \r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/subaccount/create\');\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n        curl_setopt($curl, CURLOPT_POST, 1);\r\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #send sms\r\n    url = base_url & \"subaccount/create\"\r\n    #note : utiliser une librairie JSON en production, par exemple :\r\n    #https//www.nuget.org/packages/Newtonsoft.Json/\r\n    Dim parameters As String = String.Format(\r\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"type\"\":\"\"{1}\"\",\"\"parameters\"\":\"\"{2}\"\"}}\",\r\n        apiKey,\r\n        \"advanced\",\r\n        {\"email\":\"aaaa@bbb.ccc\",\"creditToAttribute\":10,\"isBuyer\":0,\"firstname\":\"prenom\",\"lastname\":\"nom\"})\r\n    Console.Write(parameters)\r\n    apiRequest(\"POST\", url, parameters)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def create(self,creditToAdd,userId):\r\n \r\n		data = {\"apiKey\":APIKEY,\"type\":\"advanced\",\"parameters\": {\"email\":\"aaaa@bbb.ccc\",\"creditToAttribute\":10,\"isBuyer\":0,\"firstname\":\"prenom\",\"lastname\":\"nom\"}}\r\n \r\n \r\n		url = URL + \"/subaccount/create\"\r\n		r = requests.post(url, data=json.dumps(data), verify=False)\r\n \r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" \r\ncurl -H  \"Content-Type: application/json\" -X POST -d \'{\"apiKey\":\"xxxxx\",\"type\":\"advanced\",\"parameters\":\r\n{\"email\":\"aaaa@bbb.ccc\",\"creditToAttribute\":10,\"isBuyer\":0,\"firstname\":\"prenom\",\"lastname\":\"nom\"}}\'\r\n https://api.smspartner.fr/v1/subaccount/create\r\n  </code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\n\r\nconst https = require(\"https\");\r\n\r\n// Remplacez par votre clé API\r\nconst apiKey = \"VOTRE_CLÉ_API\";\r\n\r\n// Préparer les données pour la requête POST\r\nconst data = JSON.stringify({\r\n  apiKey: apiKey,\r\n  type: \"advanced\",\r\n  parameters: {\r\n    email: \"aaaa@bbb.ccc\",\r\n    creditToAttribute: 10,\r\n    isBuyer: 0,\r\n    firstname: \"prenom\",\r\n    lastname: \"nom\",\r\n  },\r\n});\r\n\r\n// Définir les options pour la requête HTTP POST vers l\'API SMS Partner\r\nconst options = {\r\n  hostname: \"api.smspartner.fr\",\r\n  port: 443,\r\n  path: \"/v1/subaccount/create\",\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Content-Length\": data.length,\r\n    \"cache-control\": \"no-cache\",\r\n  },\r\n};\r\n\r\n// Effectuer la requête HTTP POST avec les options et données définies précédemment\r\nconst req = https.request(options, (res) => {\r\n  console.log(`statusCode: ${res.statusCode}`);\r\n\r\n  // Afficher les données de réponse de l\'API sur la sortie standard\r\n  res.on(\"data\", (d) => {\r\n    process.stdout.write(d);\r\n  });\r\n});\r\n\r\n// Afficher en cas d\'erreur lors de l\'exécution de la requête HTTP POST\r\nreq.on(\"error\", (error) => {\r\n  console.error(error);\r\n});\r\n\r\n// Envoyer les données de l\'objet \'data\' à la demande\r\nreq.write(data);\r\n// Terminer la demande HTTP POST\r\nreq.end();\r\n        </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.io.OutputStream;\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.util.stream.Collectors;\r\nimport org.json.JSONObject;\r\n\r\n\r\npublic class SubAccountCreation {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Remplacez par votre clé API\r\n            String apiKey = \"VOTRE_CLÉ_API\";\r\n\r\n            // Préparer les données pour la requête POST\r\n            JSONObject parameters = new JSONObject();\r\n            parameters.put(\"email\", \"aaaa@bbb.ccc\");\r\n            parameters.put(\"creditToAttribute\", 10);\r\n            parameters.put(\"isBuyer\", 0);\r\n            parameters.put(\"firstname\", \"prenom\");\r\n            parameters.put(\"lastname\", \"nom\");\r\n\r\n            JSONObject json = new JSONObject();\r\n            json.put(\"apiKey\", apiKey);\r\n            json.put(\"type\", \"advanced\");\r\n            json.put(\"parameters\", parameters);\r\n\r\n            URL url = new URL(\"https://api.smspartner.fr/v1/subaccount/create\");\r\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\r\n            conn.setRequestMethod(\"POST\");\r\n            conn.setRequestProperty(\"Content-Type\", \"application/json\");\r\n            conn.setRequestProperty(\"cache-control\", \"no-cache\");\r\n            conn.setDoOutput(true);\r\n\r\n            // Écriture des données JSON dans le corps de la requête HTTP\r\n            OutputStream os = conn.getOutputStream();\r\n            os.write(json.toString().getBytes());\r\n            os.flush();\r\n\r\n            // Lecture de la réponse de l\'API\r\n            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));\r\n            String response = br.lines().collect(Collectors.joining());\r\n\r\n            // Afficher la réponse JSON\r\n            System.out.println(response);\r\n\r\n            // Fermeture de la connexion HTTP\r\n            conn.disconnect();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\n \r\nimport SwiftUI\r\n\r\n// Structure pour la vue \"CreationSubCompte\"\r\nstruct CreationSubCompte: View {\r\n    var body: some View {\r\n        // Un bouton qui appelle la fonction createSubaccount() lorsqu\'il est pressé\r\n        Button(action: {\r\n            createSubaccount()\r\n        }) {\r\n            Text(\"Créer sous-compte\")\r\n                .font(.system(size: 20))\r\n                .foregroundColor(.white)\r\n                .frame(minWidth: 0, maxWidth: .infinity)\r\n                .padding()\r\n                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))\r\n                .cornerRadius(10)\r\n                .padding(.horizontal)\r\n        }\r\n    }\r\n\r\n    // Fonction pour créer un sous-compte\r\n    func createSubaccount() {\r\n        let url = URL(string: \"https://api.smspartner.fr/v1/subaccount/create\")! // URL pour créer un sous-compte\r\n\r\n        // Paramètres pour la requête\r\n        let parameters: [String: Any] = [\r\n            \"apiKey\": \"TU_CLAVE_API\", // Votre clé API\r\n            \"type\": \"advanced\",\r\n            \"parameters\": [\r\n                \"email\": \"aaaa@bbb.ccc\", // Adresse e-mail du sous-compte\r\n                \"creditToAttribute\": 10, // Crédit à attribuer\r\n                \"isBuyer\": 0, // Indique si le sous-compte est un acheteur\r\n                \"firstname\": \"prenom\", // Prénom de l\'utilisateur du sous-compte\r\n                \"lastname\": \"nom\" // Nom de l\'utilisateur du sous-compte\r\n            ] as [String : Any]\r\n        ]\r\n\r\n        // Création de la requête\r\n        var request = URLRequest(url: url)\r\n        request.httpMethod = \"POST\"\r\n        request.setValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\r\n        request.setValue(\"no-cache\", forHTTPHeaderField: \"cache-control\")\r\n\r\n        // Ajout du corps de la requête\r\n        do {\r\n            request.httpBody = try JSONSerialization.data(withJSONObject: parameters, options: .prettyPrinted)\r\n        } catch let error {\r\n            print(error.localizedDescription)\r\n        }\r\n\r\n        // Tâche pour envoyer la requête et recevoir la réponse\r\n        let task = URLSession.shared.dataTask(with: request) { data, response, error in\r\n            // Si une erreur survient, on l\'affiche\r\n            if let error = error {\r\n                print(\"Erreur : (error)\")\r\n            }\r\n            // Sinon, on traite les données reçues\r\n            else if let data = data {\r\n                do {\r\n                    // On tente de convertir les données reçues en JSON\r\n                    if let json = try JSONSerialization.jsonObject(with: data, options: .mutableContainers) as? [String: Any] {\r\n                        print(json) // On affiche le JSON obtenu\r\n                    }\r\n                } catch let error {\r\n                    print(\"Erreur : (error)\")\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume() // On lance la tâche\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n<pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"bytes\"\r\n	\"encoding/json\"\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n)\r\n\r\ntype Fields struct {\r\n	APIKey     string      `json:\"apiKey\"`\r\n	Type       string      `json:\"type\"`\r\n	Parameters Parameters `json:\"parameters\"`\r\n}\r\n\r\ntype Parameters struct {\r\n	Email            string `json:\"email\"`\r\n	CreditToAttribute int    `json:\"creditToAttribute\"`\r\n	IsBuyer          int    `json:\"isBuyer\"`\r\n	Firstname        string `json:\"firstname\"`\r\n	Lastname         string `json:\"lastname\"`\r\n}\r\n\r\nfunc main() {\r\n	// Prepare data for POST request\r\n	data := Fields{\r\n		APIKey: \"YOUR_API_KEY\",\r\n		Type:   \"advanced\",\r\n		Parameters: Parameters{\r\n			Email:            \"aaaa@bbb.ccc\",\r\n			CreditToAttribute: 10,\r\n			IsBuyer:          0,\r\n			Firstname:        \"prenom\",\r\n			Lastname:         \"nom\",\r\n		},\r\n	}\r\n\r\n	payloadBuf := new(bytes.Buffer)\r\n	json.NewEncoder(payloadBuf).Encode(data)\r\n\r\n	// Create POST request\r\n	req, err := http.NewRequest(\"POST\", \"https://api.smspartner.fr/v1/subaccount/create\", payloadBuf)\r\n	if err != nil {\r\n		log.Fatalf(\"Error creating request: %v\", err)\r\n	}\r\n	req.Header.Add(\"Content-Type\", \"application/json\")\r\n\r\n	// Create HTTP client and send the request\r\n	client := &http.Client{}\r\n	resp, err := client.Do(req)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Read the response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response: %v\", err)\r\n	}\r\n\r\n	// Print the response status and body\r\n	log.Printf(\"Response status: %s\", resp.Status)\r\n	log.Printf(\"Response body: %s\", string(body))\r\n}\r\n   </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Newtonsoft.Json;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        var fields = new\r\n        {\r\n            apiKey = \"VOTRE_CLÉ_API\",\r\n            type = \"advanced\",\r\n            parameters = new \r\n            {\r\n                email = \"aaaa@bbb.ccc\",\r\n                creditToAttribute = 10,\r\n                isBuyer = 0,\r\n                firstname = \"prenom\",\r\n                lastname = \"nom\"\r\n            }\r\n        };\r\n\r\n        var json = JsonConvert.SerializeObject(fields);\r\n\r\n        var uri = new Uri(\"https://api.smspartner.fr/v1/subaccount/create\");\r\n        var content = new StringContent(json, Encoding.UTF8, \"application/json\");\r\n\r\n        HttpResponseMessage response = await client.PostAsync(uri, content);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"La requête POST a échoué avec le code d\'état : \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n## Response\r\n\r\n### JSON\r\n```json\r\n{\r\n \"success\":true,\r\n \"code\":200,\r\n \"subaccount\":\r\n {\r\n    \"email\":\"aaaa@bbb.ccc\",\r\n    \"token\":\"token\"\r\n },\r\n \"sendConfirmMailTo\":\"aaaa@bbb.ccc\",\r\n \"parent_email\":\"emailparent@ddd.eee\"\r\n}\r\n```\r\n', 'en', 65),
(58, '\r\n## Requête\r\nExemple de requête :\r\n\r\n``` bash\r\n{\r\ncurl --location --request DELETE \'http://api.smspartner.fr/v1/subaccount/remove\' \r\n--header \'Content-Type: application/json\' \r\n--data-raw \'{\r\n   \"apiKey\": \"YOUR_API_KEY\",\r\n   \"token\": \"TOKEN SUBACCOUNT\"}\'\r\n}\r\n```\r\n## Réponses\r\n``` json\r\n{\r\n   \"success\": true,\r\n   \"code\": 200,\r\n}\r\n```\r\n', 'fr', 66),
(59, '\r\n## Request\r\nExample request:\r\n\r\n``` bash\r\n{\r\ncurl --location --request DELETE \'http://api.smspartner.fr/v1/subaccount/remove\' \r\n--header \'Content-Type: application/json\' \r\n--data-raw \'{\r\n   \"apiKey\": \"YOUR_API_KEY\",\r\n   \"token\": \"TOKEN SUBACCOUNT\"}\'\r\n}\r\n```\r\n ## Responses\r\n``` json   \r\n{\r\n   \"success\": true,\r\n   \"code\": 200,\r\n}\r\n``` \r\n', 'en', 67),
(60, '## Requête\r\nExemple de requête :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n        // Prepare data for GET request\r\n        $data = \'apiKey=YOUR_API_KEY\';\r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/subaccount/list?\'.$data);\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n \r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #check credits\r\n    Dim url As String\r\n    url = base_url & \"subaccount/list\" & \"?apiKey=\" & apiKey\r\n \r\n    Dim credits As String\r\n    credits = apiRequest(\"GET\", url, Nothing)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def get_list_subaccount(self):\r\n		url = URL + \"/subaccount/list?apiKey=\" + API_KEY\r\n		r = requests.get(url)\r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" -X\r\n GET  https://api.smspartner.fr/v1/subaccount/list?apiKey=xxx&page=1\r\n  </code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\n\r\nconst https = require(\'https\');\r\n\r\n// Permets de récupérer la liste des sous-comptes\r\nlet data = \'apiKey=YOUR_API_KEY\';\r\nlet url = \'https://api.smspartner.fr/v1/subaccount/list?\' + data;\r\n\r\nhttps.get(url, (res) => {\r\n  let data = \'\';\r\n\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  console.log(\"Erreur: \" + err.message);\r\n});\r\n        </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class RécupérationDesSousComptes {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for GET request\r\n            String apiKey = \"YOUR_API_KEY\";\r\n\r\n            // Create GET request URL\r\n            String urlString = \"https://api.smspartner.fr/v1/subaccount/list?\" +\r\n                    \"apiKey=\" + apiKey;\r\n\r\n            // Create URL object\r\n            URL url = new URL(urlString);\r\n\r\n            // Create HTTP connection\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"GET\");\r\n            connection.setConnectTimeout(10000);\r\n            connection.setReadTimeout(10000);\r\n\r\n            // Send GET request\r\n            int responseCode = connection.getResponseCode();\r\n\r\n            // Get response\r\n            BufferedReader reader;\r\n            if (responseCode >= 200 && responseCode <= 299) {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\r\n            } else {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));\r\n            }\r\n\r\n            StringBuilder response = new StringBuilder();\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                response.append(line);\r\n            }\r\n            reader.close();\r\n\r\n            // Process your response here\r\n            System.out.println(response.toString());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\n import SwiftUI\r\n\r\nstruct ListeDesSousComptes: View {\r\n    @State private var result: String = \"Loading...\"\r\n\r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Liste Des Sous Comptes\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: loadSubAccounts)\r\n    }\r\n\r\n    func loadSubAccounts() {\r\n        let apiKey = \"YOUR_API_KEY\"\r\n        let urlString = \"https://api.smspartner.fr/v1/subaccount/list?apiKey=(apiKey)\"\r\n\r\n        guard let url = URL(string: urlString) else {\r\n            print(\"Invalid URL\")\r\n            return\r\n        }\r\n\r\n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n            } else if let data = data {\r\n                let resultString = String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = resultString ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume()\r\n    }\r\n}\r\n\r\nstruct ListeDesSousComptes_Previews: PreviewProvider {\r\n    static var previews: some View {\r\n        ListeDesSousComptes()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n<pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n)\r\n\r\nfunc main() {\r\n	apiKey := \"YOUR_API_KEY\"\r\n	url := \"https://api.smspartner.fr/v1/subaccount/list?apiKey=\" + apiKey\r\n\r\n	// Create GET request\r\n	resp, err := http.Get(url)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Read the response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response: %v\", err)\r\n	}\r\n\r\n	// Print the response body\r\n	log.Printf(\"Response body: %s\", string(body))\r\n}\r\n   </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        string apiKey = \"YOUR_API_KEY\";\r\n        var uri = new Uri($\"https://api.smspartner.fr/v1/subaccount/list?apiKey={apiKey}\");\r\n\r\n        HttpResponseMessage response = await client.GetAsync(uri);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            string result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Réponses\r\n\r\n### JSON\r\n```json\r\n{\r\n  \"success\": true,\r\n  \"code\": 200,\r\n  \"total\": 29,\r\n  \"nb_per_page\": 20,\r\n  \"page\": 1,\r\n  \"data\": [\r\n    {\r\n      \"id\": 1,\r\n      \"email\": \"email1\",\r\n      \"type\": \"simple\",\r\n      \"token\": \"token1\", //Est utilisé comme identifiant du sous-compte pour ajouter des crédits\r\n      \"apiKey\": \"ApiKey sous compte\",\r\n      \"createdAt\": \"2016-03-04 11:23:14\",\r\n      \"credits\": {\r\n          \"balance\": \"0.800\",\r\n          \"currency\": \"EUR\"\r\n      }\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"email\": \"email2\",\r\n      \"type\": \"simple\",\r\n      \"token\": \"token2\",\r\n      \"apiKey\": \"ApiKey2 du sous compte\",\r\n      \"createdAt\": \"2016-03-04 11:23:14\",\r\n      \"credits\": {\r\n          \"balance\": \"10.245\",\r\n          \"currency\": \"EUR\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n', 'fr', 68);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(61, '## Request\r\nRequest example\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n        // Prepare data for GET request\r\n        $data = \'apiKey=YOUR_API_KEY\';\r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/subaccount/list?\'.$data);\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n \r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #check credits\r\n    Dim url As String\r\n    url = base_url & \"subaccount/list\" & \"?apiKey=\" & apiKey\r\n \r\n    Dim credits As String\r\n    credits = apiRequest(\"GET\", url, Nothing)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def get_list_subaccount(self):\r\n		url = URL + \"/subaccount/list?apiKey=\" + API_KEY\r\n		r = requests.get(url)\r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" -X\r\n GET  https://api.smspartner.fr/v1/subaccount/list?apiKey=xxx&page=1\r\n  </code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\n\r\nconst https = require(\'https\');\r\n\r\n// Permets de récupérer la liste des sous-comptes\r\nlet data = \'apiKey=YOUR_API_KEY\';\r\nlet url = \'https://api.smspartner.fr/v1/subaccount/list?\' + data;\r\n\r\nhttps.get(url, (res) => {\r\n  let data = \'\';\r\n\r\n  res.on(\'data\', (chunk) => {\r\n    data += chunk;\r\n  });\r\n\r\n  res.on(\'end\', () => {\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n}).on(\"error\", (err) => {\r\n  console.log(\"Erreur: \" + err.message);\r\n});\r\n        </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class RécupérationDesSousComptes {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // Prepare data for GET request\r\n            String apiKey = \"YOUR_API_KEY\";\r\n\r\n            // Create GET request URL\r\n            String urlString = \"https://api.smspartner.fr/v1/subaccount/list?\" +\r\n                    \"apiKey=\" + apiKey;\r\n\r\n            // Create URL object\r\n            URL url = new URL(urlString);\r\n\r\n            // Create HTTP connection\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"GET\");\r\n            connection.setConnectTimeout(10000);\r\n            connection.setReadTimeout(10000);\r\n\r\n            // Send GET request\r\n            int responseCode = connection.getResponseCode();\r\n\r\n            // Get response\r\n            BufferedReader reader;\r\n            if (responseCode >= 200 && responseCode <= 299) {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\r\n            } else {\r\n                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));\r\n            }\r\n\r\n            StringBuilder response = new StringBuilder();\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                response.append(line);\r\n            }\r\n            reader.close();\r\n\r\n            // Process your response here\r\n            System.out.println(response.toString());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\r\n    <!-- SWIFT code example goes here -->\r\n    <pre><code class=\"language-swift\">\r\n import SwiftUI\r\n\r\nstruct ListeDesSousComptes: View {\r\n    @State private var result: String = \"Loading...\"\r\n\r\n    var body: some View {\r\n        VStack {\r\n            Text(\"Liste Des Sous Comptes\")\r\n                .font(.title)\r\n                .padding()\r\n\r\n            Text(result)\r\n                .font(.system(size: 20))\r\n                .padding()\r\n        }\r\n        .onAppear(perform: loadSubAccounts)\r\n    }\r\n\r\n    func loadSubAccounts() {\r\n        let apiKey = \"YOUR_API_KEY\"\r\n        let urlString = \"https://api.smspartner.fr/v1/subaccount/list?apiKey=(apiKey)\"\r\n\r\n        guard let url = URL(string: urlString) else {\r\n            print(\"Invalid URL\")\r\n            return\r\n        }\r\n\r\n        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\r\n            if let error = error {\r\n                print(\"Error: (error)\")\r\n            } else if let data = data {\r\n                let resultString = String(data: data, encoding: .utf8)\r\n                DispatchQueue.main.async {\r\n                    self.result = resultString ?? \"Error\"\r\n                }\r\n            }\r\n        }\r\n\r\n        task.resume()\r\n    }\r\n}\r\n\r\nstruct ListeDesSousComptes_Previews: PreviewProvider {\r\n    static var previews: some View {\r\n        ListeDesSousComptes()\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n<pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"io/ioutil\"\r\n	\"log\"\r\n	\"net/http\"\r\n)\r\n\r\nfunc main() {\r\n	apiKey := \"YOUR_API_KEY\"\r\n	url := \"https://api.smspartner.fr/v1/subaccount/list?apiKey=\" + apiKey\r\n\r\n	// Create GET request\r\n	resp, err := http.Get(url)\r\n	if err != nil {\r\n		log.Fatalf(\"Error sending request: %v\", err)\r\n	}\r\n	defer resp.Body.Close()\r\n\r\n	// Read the response\r\n	body, err := ioutil.ReadAll(resp.Body)\r\n	if err != nil {\r\n		log.Fatalf(\"Error reading response: %v\", err)\r\n	}\r\n\r\n	// Print the response body\r\n	log.Printf(\"Response body: %s\", string(body))\r\n}\r\n   </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    private static readonly HttpClient client = new HttpClient();\r\n\r\n    static async Task Main(string[] args)\r\n    {\r\n        string apiKey = \"YOUR_API_KEY\";\r\n        var uri = new Uri($\"https://api.smspartner.fr/v1/subaccount/list?apiKey={apiKey}\");\r\n\r\n        HttpResponseMessage response = await client.GetAsync(uri);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            string result = await response.Content.ReadAsStringAsync();\r\n            Console.WriteLine(result);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"GET request failed with status code: \" + response.StatusCode);\r\n        }\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Response\r\n\r\n### JSON\r\n```json\r\n{\r\n  \"success\": true,\r\n  \"code\": 200,\r\n  \"total\": 29,\r\n  \"nb_per_page\": 20,\r\n  \"page\": 1,\r\n  \"data\": [\r\n    {\r\n      \"id\": 1,\r\n      \"email\": \"email1\",\r\n      \"type\": \"simple\",\r\n      \"token\": \"token1\", //Est utilisé comme identifiant du sous-compte pour ajouter des crédits\r\n      \"apiKey\": \"ApiKey sous compte\",\r\n      \"createdAt\": \"2016-03-04 11:23:14\",\r\n      \"credits\": {\r\n          \"balance\": \"0.800\",\r\n          \"currency\": \"EUR\"\r\n      }\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"email\": \"email2\",\r\n      \"type\": \"simple\",\r\n      \"token\": \"token2\",\r\n      \"apiKey\": \"ApiKey2 du sous compte\",\r\n      \"createdAt\": \"2016-03-04 11:23:14\",\r\n      \"credits\": {\r\n          \"balance\": \"10.245\",\r\n          \"currency\": \"EUR\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n', 'en', 69),
(62, '## Requête\nExemple de requête :\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;? \n        // Prepare data for POST request\n        $fields = array(\n            \'apiKey\'=> \'YOUR API KEY\',\n            \'credit\'=> \'100\',\n            \'tokenSubaccount\'=>\'identifiant du sous-compte\'\n            );\n \n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/subaccount/credit/add\');\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #send sms\n    url = base_url & \"subaccount/credit/sms\"\n    #note : utiliser une librairie JSON en production, par exemple :\n    #https//www.nuget.org/packages/Newtonsoft.Json/\n    Dim parameters As String = String.Format(\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"credit\"\":\"\"{1}\"\",\"\"tokenSubaccount\"\":\"\"{2}\"\"}}\",\n        apiKey,\n        50,\n        \"identifiant du sous-compte\")\n    Console.Write(parameters)\n    apiRequest(\"POST\", url, parameters)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def add_credit(self,creditToAdd,tokenSubaccount):\n \n		data = OrderedDict([\n			(\"apiKey\", API_KEY),\n			(\"credit\",creditToAdd),\n			(\"tokenSubaccount\",tokenSubaccount)\n \n		])\n \n		url = URL + \"/subaccount/credit/add\"\n		r = requests.post(url, data=json.dumps(data), verify=False)\n \n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n   </code></pre>\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -H  \"Content-Type: application/json\" -X POST -d\n \'{\"apiKey\":\"xxxxx\",\"credit\":\"10\",\"tokenSubaccount\":\n \"identifiant du sous-compte\"}\' https://api.smspartner.fr/v1/subaccount/credit/add\n  </code></pre>\n  </div>\n\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n\n// permet d\'ajouter des crédits à un sous-compte\n//Depuis votre compte, il vous est possible d’ajouter des crédits sur vos sous comptes. Les crédits seront débités de votre compte principal.\nlet data = JSON.stringify({\n  apiKey: \'YOUR API KEY\',\n  credit: \'100\',\n  tokenSubaccount: \'identifiant du sous-compte\'\n});\n\nlet options = {\n  hostname: \'api.smspartner.fr\',\n  path: \'/v1/subaccount/credit/add\',\n  method: \'POST\',\n  headers: {\n    \'Content-Type\': \'application/json\',\n    \'Content-Length\': data.length\n  }\n};\n\nlet req = https.request(options, (res) => {\n  let data = \'\';\n\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  console.log(\"Error: \" + err.message);\n});\n\nreq.write(data);\nreq.end();\n        </code></pre>\n  </div>\n\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class AjouterRetirerDesCredits {\n    public static void main(String[] args) {\n        try {\n            // Prepare data for POST request\n            String apiKey = \"YOUR API KEY\";\n            int credit = 100;\n            String tokenSubaccount = \"identifiant du sous-compte\";\n\n            // Create JSON payload\n            String jsonPayload = \"{\"apiKey\": \"\" + apiKey + \"\", \"credit\": \" + credit + \", \"tokenSubaccount\": \"\" + tokenSubaccount + \"\"}\";\n\n            // Create POST request\n            URL url = new URL(\"https://api.smspartner.fr/v1/subaccount/credit/add\");\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"POST\");\n            connection.setRequestProperty(\"Content-Type\", \"application/json\");\n            connection.setDoOutput(true);\n\n            // Send POST request\n            OutputStream outputStream = connection.getOutputStream();\n            outputStream.write(jsonPayload.getBytes());\n            outputStream.flush();\n            outputStream.close();\n\n            // Get response\n            int responseCode = connection.getResponseCode();\n            BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n            StringBuilder response = new StringBuilder();\n            String line;\n            while ((line = reader.readLine()) != null) {\n                response.append(line);\n            }\n            reader.close();\n\n            // Process your response here\n            System.out.println(response.toString());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\nstruct AjoutCreditSousCompte: View {\n    @State private var result: String = \"Loading...\"\n\n    var body: some View {\n        VStack {\n            Text(\"Ajout Credit Sous Compte\")\n                .font(.title)\n                .padding()\n\n            Text(result)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: ajoutCreditSousCompte)\n    }\n\n    func ajoutCreditSousCompte() {\n        let apiKey = \"YOUR_API_KEY\"\n        let credit = \"100\"\n        let tokenSubaccount = \"identifiant du sous-compte\"\n\n        let urlString = \"https://api.smspartner.fr/v1/subaccount/credit/add\"\n        let url = URL(string: urlString)!\n\n        var request = URLRequest(url: url)\n        request.httpMethod = \"POST\"\n        request.addValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\n\n        let parameters: [String: Any] = [\n            \"apiKey\": apiKey,\n            \"credit\": credit,\n            \"tokenSubaccount\": tokenSubaccount\n        ]\n\n        request.httpBody = try? JSONSerialization.data(withJSONObject: parameters)\n\n        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let resultString = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    self.result = resultString ?? \"Error\"\n                }\n            }\n        }\n\n        task.resume()\n    }\n}\n\nstruct AjoutCreditSousCompte_Previews: PreviewProvider {\n    static var previews: some View {\n        AjoutCreditSousCompte()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n<pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"bytes\"\n	\"encoding/json\"\n	\"io/ioutil\"\n	\"log\"\n	\"net/http\"\n)\n\ntype SubaccountData struct {\n	APIKey         string `json:\"apiKey\"`\n	Credit         string `json:\"credit\"`\n	TokenSubaccount string `json:\"tokenSubaccount\"`\n}\n\nfunc main() {\n	apiKey := \"YOUR_API_KEY\"\n	credit := \"100\"\n	tokenSubaccount := \"identifiant du sous-compte\"\n\n	// Create POST request data\n	data := SubaccountData{\n		APIKey:         apiKey,\n		Credit:         credit,\n		TokenSubaccount: tokenSubaccount,\n	}\n	jsonData, _ := json.Marshal(data)\n\n	// Create POST request\n	req, err := http.NewRequest(\"POST\", \"https://api.smspartner.fr/v1/subaccount/credit/add\", bytes.NewBuffer(jsonData))\n	if err != nil {\n		log.Fatalf(\"Error creating request: %v\", err)\n	}\n	req.Header.Set(\"Content-Type\", \"application/json\")\n\n	// Send the request\n	client := &http.Client{}\n	resp, err := client.Do(req)\n	if err != nil {\n		log.Fatalf(\"Error sending request: %v\", err)\n	}\n	defer resp.Body.Close()\n\n	// Read the response\n	body, err := ioutil.ReadAll(resp.Body)\n	if err != nil {\n		log.Fatalf(\"Error reading response: %v\", err)\n	}\n\n	// Print the response body\n	log.Printf(\"Response body: %s\", string(body))\n}\n   </code></pre>\n  </div>\n\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var data = new\n        {\n            apiKey = \"YOUR API KEY\",\n            credit = \"100\",\n            tokenSubaccount = \"Subaccount ID\"\n        };\n\n        string jsonString = JsonConvert.SerializeObject(data);\n\n        var content = new StringContent(jsonString, Encoding.UTF8, \"application/json\");\n\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/subaccount/credit/add\", content);\n\n        if (response.IsSuccessStatusCode)\n        {\n            string result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"POST request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n  </code></pre>\n  </div>\n</div>\n\n## Réponses\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"credit\": 2869.2,\n    \"subaccountCredit\": 61.8,\n    \"currency\": \"EUR\"\n}\n```\n', 'fr', 70),
(63, '## Request\nRequest example\n\n<!-- Nav tabs -->\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"swift-tab\" data-toggle=\"tab\" href=\"#swift\" role=\"tab\" aria-controls=\"swift\" aria-selected=\"false\">SWIFT</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\n  </li>\n</ul>\n\n\n<!-- Tab panes -->\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\n    <pre><code class=\"language-php\">\n&lt;? \n        // Prepare data for POST request\n        $fields = array(\n            \'apiKey\'=> \'YOUR API KEY\',\n            \'credit\'=> \'100\',\n            \'tokenSubaccount\'=>\'identifiant du sous-compte\'\n            );\n \n \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/subaccount/credit/add\');\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\n \n        $result = curl_exec($curl);\n        curl_close($curl);\n \n        // Process your response here\n        echo $result;\n?&gt;\n    </code></pre>\n  </div>\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\n   <pre><code class=\"language-vbnet\">\nImports System.IO\nImports System.Net\n \nModule Module1\n \n  Sub Main()\n \n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\n    Dim apiKey As String = \"VOTRE_APIKEY\"\n \n    #send sms\n    url = base_url & \"subaccount/credit/sms\"\n    #note : utiliser une librairie JSON en production, par exemple :\n    #https//www.nuget.org/packages/Newtonsoft.Json/\n    Dim parameters As String = String.Format(\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"credit\"\":\"\"{1}\"\",\"\"tokenSubaccount\"\":\"\"{2}\"\"}}\",\n        apiKey,\n        50,\n        \"identifiant du sous-compte\")\n    Console.Write(parameters)\n    apiRequest(\"POST\", url, parameters)\n \n  End Sub\n \n  Function apiRequest(method As String, url As String, parameters As String) As String\n \n    Dim request As HttpWebRequest\n    request = WebRequest.Create(url)\n    request.Method = method\n    request.Timeout = 10000   # timeout in ms\n    request.ContentType = \"application/json; charset=utf-8\"\n    request.ContentLength = 0\n \n    #set POST data\n    If Not String.IsNullOrEmpty(parameters) Then\n      request.ContentLength = parameters.Length\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\n        reqStream.Write(parameters)\n      End Using\n    End If\n \n    #get response\n    Dim returnValue As String = Nothing\n    Using response As HttpWebResponse = request.GetResponse()\n      If response.StatusCode = HttpStatusCode.OK Then\n        Using resStream = response.GetResponseStream()\n          If resStream IsNot Nothing Then\n            Using reader As New StreamReader(resStream)\n              returnValue = reader.ReadToEnd()\n            End Using\n          End If\n        End Using\n      End If\n    End Using\n    apiRequest = returnValue\n \n  End Function\n \nEnd Module\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\n <pre><code class=\"language-python\">\n# std\nimport logging\nimport json\nfrom collections import OrderedDict\n \n# 3p\nimport requests\n \nAPI_KEY = \"MY API KEY\"\nURL = \"https://api.smspartner.fr/v1\"\n \nclass SMSPartner():\n    def add_credit(self,creditToAdd,tokenSubaccount):\n \n		data = OrderedDict([\n			(\"apiKey\", API_KEY),\n			(\"credit\",creditToAdd),\n			(\"tokenSubaccount\",tokenSubaccount)\n \n		])\n \n		url = URL + \"/subaccount/credit/add\"\n		r = requests.post(url, data=json.dumps(data), verify=False)\n \n		r_json = r.json()\n		if r_json.get(\"success\") == True:\n			print(r_json)\n			status = True\n		else:\n			print(r_json)\n			status = False\n		return status\n   </code></pre>\n  </div>\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\n    <!-- cURL code example goes here -->\n    <pre><code class=\"language-bash\">\ncurl -H  \"Content-Type: application/json\" -X POST -d\n \'{\"apiKey\":\"xxxxx\",\"credit\":\"10\",\"tokenSubaccount\":\n \"identifiant du sous-compte\"}\' https://api.smspartner.fr/v1/subaccount/credit/add\n  </code></pre>\n  </div>\n\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\n    <!-- NodeJS code example goes here -->\n    <pre><code class=\"language-javascript\">\nconst https = require(\'https\');\n\n// permet d\'ajouter des crédits à un sous-compte\n//Depuis votre compte, il vous est possible d’ajouter des crédits sur vos sous comptes. Les crédits seront débités de votre compte principal.\nlet data = JSON.stringify({\n  apiKey: \'YOUR API KEY\',\n  credit: \'100\',\n  tokenSubaccount: \'identifiant du sous-compte\'\n});\n\nlet options = {\n  hostname: \'api.smspartner.fr\',\n  path: \'/v1/subaccount/credit/add\',\n  method: \'POST\',\n  headers: {\n    \'Content-Type\': \'application/json\',\n    \'Content-Length\': data.length\n  }\n};\n\nlet req = https.request(options, (res) => {\n  let data = \'\';\n\n  res.on(\'data\', (chunk) => {\n    data += chunk;\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data));\n  });\n\n}).on(\"error\", (err) => {\n  console.log(\"Error: \" + err.message);\n});\n\nreq.write(data);\nreq.end();\n        </code></pre>\n  </div>\n\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\n    <!-- JAVA code example goes here -->\n   <pre><code class=\"language-java\">\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class AjouterRetirerDesCredits {\n    public static void main(String[] args) {\n        try {\n            // Prepare data for POST request\n            String apiKey = \"YOUR API KEY\";\n            int credit = 100;\n            String tokenSubaccount = \"identifiant du sous-compte\";\n\n            // Create JSON payload\n            String jsonPayload = \"{\"apiKey\": \"\" + apiKey + \"\", \"credit\": \" + credit + \", \"tokenSubaccount\": \"\" + tokenSubaccount + \"\"}\";\n\n            // Create POST request\n            URL url = new URL(\"https://api.smspartner.fr/v1/subaccount/credit/add\");\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"POST\");\n            connection.setRequestProperty(\"Content-Type\", \"application/json\");\n            connection.setDoOutput(true);\n\n            // Send POST request\n            OutputStream outputStream = connection.getOutputStream();\n            outputStream.write(jsonPayload.getBytes());\n            outputStream.flush();\n            outputStream.close();\n\n            // Get response\n            int responseCode = connection.getResponseCode();\n            BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n            StringBuilder response = new StringBuilder();\n            String line;\n            while ((line = reader.readLine()) != null) {\n                response.append(line);\n            }\n            reader.close();\n\n            // Process your response here\n            System.out.println(response.toString());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"swift\" role=\"tabpanel\" aria-labelledby=\"swift-tab\">\n    <!-- SWIFT code example goes here -->\n    <pre><code class=\"language-swift\">\nimport SwiftUI\n\nstruct AjoutCreditSousCompte: View {\n    @State private var result: String = \"Loading...\"\n\n    var body: some View {\n        VStack {\n            Text(\"Ajout Credit Sous Compte\")\n                .font(.title)\n                .padding()\n\n            Text(result)\n                .font(.system(size: 20))\n                .padding()\n        }\n        .onAppear(perform: ajoutCreditSousCompte)\n    }\n\n    func ajoutCreditSousCompte() {\n        let apiKey = \"YOUR_API_KEY\"\n        let credit = \"100\"\n        let tokenSubaccount = \"identifiant du sous-compte\"\n\n        let urlString = \"https://api.smspartner.fr/v1/subaccount/credit/add\"\n        let url = URL(string: urlString)!\n\n        var request = URLRequest(url: url)\n        request.httpMethod = \"POST\"\n        request.addValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\n\n        let parameters: [String: Any] = [\n            \"apiKey\": apiKey,\n            \"credit\": credit,\n            \"tokenSubaccount\": tokenSubaccount\n        ]\n\n        request.httpBody = try? JSONSerialization.data(withJSONObject: parameters)\n\n        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n            if let error = error {\n                print(\"Error: (error)\")\n            } else if let data = data {\n                let resultString = String(data: data, encoding: .utf8)\n                DispatchQueue.main.async {\n                    self.result = resultString ?? \"Error\"\n                }\n            }\n        }\n\n        task.resume()\n    }\n}\n\nstruct AjoutCreditSousCompte_Previews: PreviewProvider {\n    static var previews: some View {\n        AjoutCreditSousCompte()\n    }\n}\n   </code></pre>\n  </div>\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\n<pre><code class=\"language-go\">\npackage main\n\nimport (\n	\"bytes\"\n	\"encoding/json\"\n	\"io/ioutil\"\n	\"log\"\n	\"net/http\"\n)\n\ntype SubaccountData struct {\n	APIKey         string `json:\"apiKey\"`\n	Credit         string `json:\"credit\"`\n	TokenSubaccount string `json:\"tokenSubaccount\"`\n}\n\nfunc main() {\n	apiKey := \"YOUR_API_KEY\"\n	credit := \"100\"\n	tokenSubaccount := \"identifiant du sous-compte\"\n\n	// Create POST request data\n	data := SubaccountData{\n		APIKey:         apiKey,\n		Credit:         credit,\n		TokenSubaccount: tokenSubaccount,\n	}\n	jsonData, _ := json.Marshal(data)\n\n	// Create POST request\n	req, err := http.NewRequest(\"POST\", \"https://api.smspartner.fr/v1/subaccount/credit/add\", bytes.NewBuffer(jsonData))\n	if err != nil {\n		log.Fatalf(\"Error creating request: %v\", err)\n	}\n	req.Header.Set(\"Content-Type\", \"application/json\")\n\n	// Send the request\n	client := &http.Client{}\n	resp, err := client.Do(req)\n	if err != nil {\n		log.Fatalf(\"Error sending request: %v\", err)\n	}\n	defer resp.Body.Close()\n\n	// Read the response\n	body, err := ioutil.ReadAll(resp.Body)\n	if err != nil {\n		log.Fatalf(\"Error reading response: %v\", err)\n	}\n\n	// Print the response body\n	log.Printf(\"Response body: %s\", string(body))\n}\n   </code></pre>\n  </div>\n\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\n    <!-- C# code example goes here -->\n    <pre><code class=\"language-csharp\">\nusing System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\n\nclass Program\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    static async Task Main(string[] args)\n    {\n        var data = new\n        {\n            apiKey = \"YOUR API KEY\",\n            credit = \"100\",\n            tokenSubaccount = \"Subaccount ID\"\n        };\n\n        string jsonString = JsonConvert.SerializeObject(data);\n\n        var content = new StringContent(jsonString, Encoding.UTF8, \"application/json\");\n\n        HttpResponseMessage response = await client.PostAsync(\"https://api.smspartner.fr/v1/subaccount/credit/add\", content);\n\n        if (response.IsSuccessStatusCode)\n        {\n            string result = await response.Content.ReadAsStringAsync();\n            Console.WriteLine(result);\n        }\n        else\n        {\n            Console.WriteLine(\"POST request failed with status code: \" + response.StatusCode);\n        }\n    }\n}\n  </code></pre>\n  </div>\n</div>\n\n## Response\n\n### JSON\n```json\n{\n    \"success\": true,\n    \"code\": 200,\n    \"credit\": 2869.2,\n    \"subaccountCredit\": 61.8,\n    \"currency\": \"EUR\"\n}\n```\n', 'en', 71),
(64, '## Requête\r\nExemple de requête :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n        // Prepare data for POST request\r\n        $fields = array(\r\n            \'apiKey\'=> \'YOUR API KEY\',\r\n           \'credit\'=> \'100\',\r\n            \'tokenSubaccount\'=>\'identifiant du sous-compte\'\r\n            );\r\n \r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/subaccount/credit/add\');\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n        curl_setopt($curl, CURLOPT_POST, 1);\r\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #send sms\r\n    url = base_url & \"subaccount/credit/sms\"\r\n    #note : utiliser une librairie JSON en production, par exemple :\r\n    #https//www.nuget.org/packages/Newtonsoft.Json/\r\n    Dim parameters As String = String.Format(\r\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"credit\"\":\"\"{1}\"\",\"\"tokenSubaccount\"\":\"\"{2}\"\"}}\",\r\n        apiKey,\r\n        50,\r\n        \"identifiant du sous-compte\")\r\n    Console.Write(parameters)\r\n    apiRequest(\"POST\", url, parameters)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def add_credit(self,creditToAdd,tokenSubaccount):\r\n \r\n		data = OrderedDict([\r\n			(\"apiKey\", API_KEY),\r\n			(\"credit\",creditToAdd),\r\n			(\"tokenSubaccount\",tokenSubaccount)\r\n \r\n		])\r\n \r\n		url = URL + \"/subaccount/credit/add\"\r\n		r = requests.post(url, data=json.dumps(data), verify=False)\r\n \r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" -X \r\nPOST -d \'{\"apiKey\":\"xxxxx\",\"credit\":\"10\",\"tokenSubaccount\":\"identifiant du sous-compte\"}\r\n\' https://api.smspartner.fr/v1/subaccount/credit/add  \r\n\r\n</code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Réponses\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": true,\r\n    \"code\": 200,\r\n    \"credit\": 2869.2,\r\n    \"subaccountCredit\": 61.8,\r\n    \"currency\": \"EUR\"\r\n}\r\n```\r\n', 'fr', 73);
INSERT INTO `requete_reponse` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(65, '## Request\r\nRequest example\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n</ul>\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n        // Prepare data for POST request\r\n        $fields = array(\r\n            \'apiKey\'=> \'YOUR API KEY\',\r\n           \'credit\'=> \'100\',\r\n            \'tokenSubaccount\'=>\'identifiant du sous-compte\'\r\n            );\r\n \r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.smspartner.fr/v1/subaccount/credit/add\');\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n        curl_setopt($curl, CURLOPT_POST, 1);\r\n        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));\r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"http://api.smspartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #send sms\r\n    url = base_url & \"subaccount/credit/sms\"\r\n    #note : utiliser une librairie JSON en production, par exemple :\r\n    #https//www.nuget.org/packages/Newtonsoft.Json/\r\n    Dim parameters As String = String.Format(\r\n        \"{{\"\"apiKey\"\":\"\"{0}\"\",\"\"credit\"\":\"\"{1}\"\",\"\"tokenSubaccount\"\":\"\"{2}\"\"}}\",\r\n        apiKey,\r\n        50,\r\n        \"identifiant du sous-compte\")\r\n    Console.Write(parameters)\r\n    apiRequest(\"POST\", url, parameters)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.smspartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def add_credit(self,creditToAdd,tokenSubaccount):\r\n \r\n		data = OrderedDict([\r\n			(\"apiKey\", API_KEY),\r\n			(\"credit\",creditToAdd),\r\n			(\"tokenSubaccount\",tokenSubaccount)\r\n \r\n		])\r\n \r\n		url = URL + \"/subaccount/credit/add\"\r\n		r = requests.post(url, data=json.dumps(data), verify=False)\r\n \r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n   </code></pre>\r\n  </div>\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H  \"Content-Type: application/json\" -X \r\nPOST -d \'{\"apiKey\":\"xxxxx\",\"credit\":\"10\",\"tokenSubaccount\":\"identifiant du sous-compte\"}\r\n\' https://api.smspartner.fr/v1/subaccount/credit/add  \r\n\r\n</code></pre>\r\n  </div>\r\n</div>\r\n\r\n## Response\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": true,\r\n    \"code\": 200,\r\n    \"credit\": 2869.2,\r\n    \"subaccountCredit\": 61.8,\r\n    \"currency\": \"EUR\"\r\n}\r\n```\r\n', 'en', 74),
(66, '\r\n## Requête\r\nExemple de requête :\r\n\r\n``` bash\r\n{\r\ncurl --location \'https://api.smspartner.fr/v1/vn/callforward\' \r\n--header \'Content-Type: application/json\' \r\n--data \'{\r\n    \"apiKey\": \"API_KEY\",\r\n    \"number\": \"NUMBET\",\r\n    \"type\": 0, \r\n    \"param\": \"\"\r\n}\'\r\n```\r\n## Réponses\r\n``` json\r\n{\r\n    \"success\": true,\r\n    \"code\": 2,\r\n    \"message\": \"Callforward disabled\"\r\n}\r\n```\r\n', 'fr', 75),
(67, '\r\n## Request\r\nExample request:\r\n\r\n``` bash\r\n{\r\ncurl --location \'https://api.smspartner.fr/v1/vn/callforward\' \r\n--header \'Content-Type: application/json\' \r\n--data \'{\r\n    \"apiKey\": \"API_KEY\",\r\n    \"number\": \"NUMBET\",\r\n    \"type\": 0, \r\n    \"param\": \"\"\r\n}\'\r\n ```\r\n  ## Responses\r\n``` json   \r\n{\r\n    \"success\": true,\r\n    \"code\": 2,\r\n    \"message\": \"Callforward disabled\"\r\n}\r\n``` \r\n', 'en', 76),
(68, '## Requête\r\nExemple de requête :\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n                // Prepare data for GET request\r\n        $data = \'YOUR_API_KEY\';\r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.voicepartner.fr/v1/me/\'.$data);\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n \r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\ncURL\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"https://api.voicepartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #check credits\r\n    Dim url As String\r\n    url = base_url & \"me\" & \"/\" & apiKey\r\n \r\n    Dim credits As String\r\n    credits = apiRequest(\"GET\", url, Nothing)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.voicepartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def get_balance(self):\r\n		url = URL + \"/me/\" + API_KEY\r\n		r = requests.get(url)\r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n  \r\n\r\n   </code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H \"Content-Type: application/json\" -X \r\nGET  https://api.voicepartner.fr/v1/me/xxx\r\n</code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst axios = require(\'axios\');\r\n\r\n// Replace \'YOUR_API_KEY\' with your actual API key\r\nconst apiKey = \'YOUR_API_KEY\';\r\n\r\n// The URL of the API with the API key appended\r\nconst url = `https://api.voicepartner.fr/v1/me/${apiKey}`;\r\n\r\naxios.get(url)\r\n.then(response => {\r\nconsole.log(\'Response:\', response.data);\r\n})\r\n.catch(error => {\r\nconsole.error(\'Error:\', error.response ? error.response.data : error.message);\r\n});\r\n        </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\npackage com.example.API;\r\n\r\nimport java.net.URI;\r\nimport java.net.http.HttpClient;\r\nimport java.net.http.HttpRequest;\r\nimport java.net.http.HttpResponse;\r\nimport java.net.http.HttpResponse.BodyHandlers;\r\n\r\npublic class CreditVoix {\r\n    public static void main(String[] args) {\r\n        // Replace \'YOUR_API_KEY\' with your actual API key\r\n        String apiKey = \"YOUR_API_KEY\";\r\n        String url = \"https://api.voicepartner.fr/v1/me/\" + apiKey;\r\n\r\n        HttpClient client = HttpClient.newHttpClient();\r\n        HttpRequest request = HttpRequest.newBuilder()\r\n                .uri(URI.create(url))\r\n                .build();\r\n\r\n        client.sendAsync(request, BodyHandlers.ofString())\r\n                .thenApply(HttpResponse::body)\r\n                .thenAccept(System.out::println)\r\n                .exceptionally(e -> {\r\n                    System.out.println(\"Error: \" + e.getMessage());\r\n                    return null;\r\n                })\r\n                .join();\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n \r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n<pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"io/ioutil\"\r\n	\"net/http\"\r\n)\r\n\r\nfunc main() {\r\n	apiKey := \"YOUR_API_KEY\"\r\n	url := fmt.Sprintf(\"https://api.voicepartner.fr/v1/me/%s\", apiKey)\r\n\r\n	response, err := http.Get(url)\r\n	if err != nil {\r\n		fmt.Printf(\"Error: %s\n\", err.Error())\r\n		return\r\n	}\r\n	defer response.Body.Close()\r\n\r\n	body, err := ioutil.ReadAll(response.Body)\r\n	if err != nil {\r\n		fmt.Printf(\"Error: %s\n\", err.Error())\r\n		return\r\n	}\r\n\r\n	fmt.Printf(\"Response: %s\n\", string(body))\r\n}\r\n   </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace API.ApiClients\r\n{\r\n    public class CreditVoix\r\n    {\r\n        public static async Task Main()\r\n        {\r\n            var apiKey = \"YOUR_API_KEY\";\r\n            var url = $\"https://api.voicepartner.fr/v1/me/{apiKey}\";\r\n\r\n            using (var client = new HttpClient())\r\n            {\r\n                try\r\n                {\r\n                    var response = await client.GetAsync(url);\r\n                    var content = await response.Content.ReadAsStringAsync();\r\n                    Console.WriteLine(\"Response: \" + content);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    Console.WriteLine(\"Error: \" + ex.Message);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n  </code></pre>\r\n  </div>\r\n</div>\r\n## Réponses\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": true,\r\n    \"credit\": \"19\",\r\n    \"currency\": \"€\",\r\n    \"details\": {\r\n        \"tts\": {\r\n            \"h\": 5,\r\n            \"m\": 55,\r\n            \"s\": 66\r\n        },\r\n        \"tts_fixe\": {\r\n            \"h\": 3,\r\n            \"m\": 44,\r\n            \"s\": 55\r\n        },\r\n        \"voice\": {\r\n            \"message\": 10\r\n        }\r\n    }\r\n}\r\n```\r\n', 'fr', 81),
(69, '## Request\r\nRequest example\r\n\r\n<!-- Nav tabs -->\r\n<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"php-tab\" data-toggle=\"tab\" href=\"#php\" role=\"tab\" aria-controls=\"php\" aria-selected=\"true\">PHP</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"vbnet-tab\" data-toggle=\"tab\" href=\"#vbnet\" role=\"tab\" aria-controls=\"vbnet\" aria-selected=\"false\">VB.net</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"python-tab\" data-toggle=\"tab\" href=\"#python\" role=\"tab\" aria-controls=\"python\" aria-selected=\"false\">Python</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"curl-tab\" data-toggle=\"tab\" href=\"#curl\" role=\"tab\" aria-controls=\"curl\" aria-selected=\"false\">cURL</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"nodejs-tab\" data-toggle=\"tab\" href=\"#nodejs\" role=\"tab\" aria-controls=\"nodejs\" aria-selected=\"false\">NodeJS</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"java-tab\" data-toggle=\"tab\" href=\"#java\" role=\"tab\" aria-controls=\"java\" aria-selected=\"false\">JAVA</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"go-tab\" data-toggle=\"tab\" href=\"#go\" role=\"tab\" aria-controls=\"go\" aria-selected=\"false\">GO</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"csharp-tab\" data-toggle=\"tab\" href=\"#csharp\" role=\"tab\" aria-controls=\"csharp\" aria-selected=\"false\">C#</a>\r\n  </li>\r\n</ul>\r\n\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n  <div class=\"tab-pane fade show active\" id=\"php\" role=\"tabpanel\" aria-labelledby=\"php-tab\">\r\n    <pre><code class=\"language-php\">\r\n&lt;? \r\n                // Prepare data for GET request\r\n        $data = \'YOUR_API_KEY\';\r\n \r\n        $curl = curl_init();\r\n        curl_setopt($curl, CURLOPT_URL,\'https://api.voicepartner.fr/v1/me/\'.$data);\r\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\r\n        curl_setopt($curl, CURLOPT_TIMEOUT, 10);\r\n \r\n \r\n        $result = curl_exec($curl);\r\n        curl_close($curl);\r\n \r\n        // Process your response here\r\n        echo $result;\r\n?&gt;\r\n    </code></pre>\r\n  </div>\r\n <div class=\"tab-pane fade\" id=\"vbnet\" role=\"tabpanel\" aria-labelledby=\"vbnet-tab\">\r\n   <pre><code class=\"language-vbnet\">\r\ncURL\r\nImports System.IO\r\nImports System.Net\r\n \r\nModule Module1\r\n \r\n  Sub Main()\r\n \r\n    Dim base_url As String = \"https://api.voicepartner.fr/v1/\"\r\n    Dim apiKey As String = \"VOTRE_APIKEY\"\r\n \r\n    #check credits\r\n    Dim url As String\r\n    url = base_url & \"me\" & \"/\" & apiKey\r\n \r\n    Dim credits As String\r\n    credits = apiRequest(\"GET\", url, Nothing)\r\n \r\n  End Sub\r\n \r\n  Function apiRequest(method As String, url As String, parameters As String) As String\r\n \r\n    Dim request As HttpWebRequest\r\n    request = WebRequest.Create(url)\r\n    request.Method = method\r\n    request.Timeout = 10000   # timeout in ms\r\n    request.ContentType = \"application/json; charset=utf-8\"\r\n    request.ContentLength = 0\r\n \r\n    #set POST data\r\n    If Not String.IsNullOrEmpty(parameters) Then\r\n      request.ContentLength = parameters.Length\r\n      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())\r\n        reqStream.Write(parameters)\r\n      End Using\r\n    End If\r\n \r\n    #get response\r\n    Dim returnValue As String = Nothing\r\n    Using response As HttpWebResponse = request.GetResponse()\r\n      If response.StatusCode = HttpStatusCode.OK Then\r\n        Using resStream = response.GetResponseStream()\r\n          If resStream IsNot Nothing Then\r\n            Using reader As New StreamReader(resStream)\r\n              returnValue = reader.ReadToEnd()\r\n            End Using\r\n          End If\r\n        End Using\r\n      End If\r\n    End Using\r\n    apiRequest = returnValue\r\n \r\n  End Function\r\n \r\nEnd Module\r\n   </code></pre>\r\n  </div>\r\n  <div class=\"tab-pane fade\" id=\"python\" role=\"tabpanel\" aria-labelledby=\"python-tab\">\r\n <pre><code class=\"language-python\">\r\n# std\r\nimport logging\r\nimport json\r\nfrom collections import OrderedDict\r\n \r\n# 3p\r\nimport requests\r\n \r\nAPI_KEY = \"MY API KEY\"\r\nURL = \"https://api.voicepartner.fr/v1\"\r\n \r\nclass SMSPartner():\r\n    def get_balance(self):\r\n		url = URL + \"/me/\" + API_KEY\r\n		r = requests.get(url)\r\n		r_json = r.json()\r\n		if r_json.get(\"success\") == True:\r\n			print(r_json)\r\n			status = True\r\n		else:\r\n			print(r_json)\r\n			status = False\r\n		return status\r\n  \r\n\r\n   </code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"curl\" role=\"tabpanel\" aria-labelledby=\"curl-tab\">\r\n    <!-- cURL code example goes here -->\r\n    <pre><code class=\"language-bash\">\r\ncurl -H \"Content-Type: application/json\" -X \r\nGET  https://api.voicepartner.fr/v1/me/xxx\r\n</code></pre>\r\n  </div>\r\n\r\n    <div class=\"tab-pane fade\" id=\"nodejs\" role=\"tabpanel\" aria-labelledby=\"nodejs-tab\">\r\n    <!-- NodeJS code example goes here -->\r\n    <pre><code class=\"language-javascript\">\r\nconst axios = require(\'axios\');\r\n\r\n// Replace \'YOUR_API_KEY\' with your actual API key\r\nconst apiKey = \'YOUR_API_KEY\';\r\n\r\n// The URL of the API with the API key appended\r\nconst url = `https://api.voicepartner.fr/v1/me/${apiKey}`;\r\n\r\naxios.get(url)\r\n.then(response => {\r\nconsole.log(\'Response:\', response.data);\r\n})\r\n.catch(error => {\r\nconsole.error(\'Error:\', error.response ? error.response.data : error.message);\r\n});\r\n        </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"java\" role=\"tabpanel\" aria-labelledby=\"java-tab\">\r\n    <!-- JAVA code example goes here -->\r\n   <pre><code class=\"language-java\">\r\npackage com.example.API;\r\n\r\nimport java.net.URI;\r\nimport java.net.http.HttpClient;\r\nimport java.net.http.HttpRequest;\r\nimport java.net.http.HttpResponse;\r\nimport java.net.http.HttpResponse.BodyHandlers;\r\n\r\npublic class CreditVoix {\r\n    public static void main(String[] args) {\r\n        // Replace \'YOUR_API_KEY\' with your actual API key\r\n        String apiKey = \"YOUR_API_KEY\";\r\n        String url = \"https://api.voicepartner.fr/v1/me/\" + apiKey;\r\n\r\n        HttpClient client = HttpClient.newHttpClient();\r\n        HttpRequest request = HttpRequest.newBuilder()\r\n                .uri(URI.create(url))\r\n                .build();\r\n\r\n        client.sendAsync(request, BodyHandlers.ofString())\r\n                .thenApply(HttpResponse::body)\r\n                .thenAccept(System.out::println)\r\n                .exceptionally(e -> {\r\n                    System.out.println(\"Error: \" + e.getMessage());\r\n                    return null;\r\n                })\r\n                .join();\r\n    }\r\n}\r\n   </code></pre>\r\n  </div>\r\n \r\n  <div class=\"tab-pane fade\" id=\"go\" role=\"tabpanel\" aria-labelledby=\"go-tab\">\r\n<pre><code class=\"language-go\">\r\npackage main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"io/ioutil\"\r\n	\"net/http\"\r\n)\r\n\r\nfunc main() {\r\n	apiKey := \"YOUR_API_KEY\"\r\n	url := fmt.Sprintf(\"https://api.voicepartner.fr/v1/me/%s\", apiKey)\r\n\r\n	response, err := http.Get(url)\r\n	if err != nil {\r\n		fmt.Printf(\"Error: %s\n\", err.Error())\r\n		return\r\n	}\r\n	defer response.Body.Close()\r\n\r\n	body, err := ioutil.ReadAll(response.Body)\r\n	if err != nil {\r\n		fmt.Printf(\"Error: %s\n\", err.Error())\r\n		return\r\n	}\r\n\r\n	fmt.Printf(\"Response: %s\n\", string(body))\r\n}\r\n   </code></pre>\r\n  </div>\r\n\r\n  <div class=\"tab-pane fade\" id=\"csharp\" role=\"tabpanel\" aria-labelledby=\"csharp-tab\">\r\n    <!-- C# code example goes here -->\r\n    <pre><code class=\"language-csharp\">\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace API.ApiClients\r\n{\r\n    public class CreditVoix\r\n    {\r\n        public static async Task Main()\r\n        {\r\n            var apiKey = \"YOUR_API_KEY\";\r\n            var url = $\"https://api.voicepartner.fr/v1/me/{apiKey}\";\r\n\r\n            using (var client = new HttpClient())\r\n            {\r\n                try\r\n                {\r\n                    var response = await client.GetAsync(url);\r\n                    var content = await response.Content.ReadAsStringAsync();\r\n                    Console.WriteLine(\"Response: \" + content);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    Console.WriteLine(\"Error: \" + ex.Message);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n  </code></pre>\r\n  </div>\r\n</div>\r\n## Response\r\n\r\n### JSON\r\n```json\r\n{\r\n    \"success\": true,\r\n    \"credit\": \"19\",\r\n    \"currency\": \"€\",\r\n    \"details\": {\r\n        \"tts\": {\r\n            \"h\": 5,\r\n            \"m\": 55,\r\n            \"s\": 66\r\n        },\r\n        \"tts_fixe\": {\r\n            \"h\": 3,\r\n            \"m\": 44,\r\n            \"s\": 55\r\n        },\r\n        \"voice\": {\r\n            \"message\": 10\r\n        }\r\n    }\r\n}\r\n```\r\n', 'en', 82);

-- --------------------------------------------------------

--
-- Structure de la table `suitecode`
--

CREATE TABLE `suitecode` (
  `id` int(11) NOT NULL,
  `textcode` text NOT NULL,
  `langue` varchar(50) DEFAULT NULL,
  `id_chemin` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Déchargement des données de la table `suitecode`
--

INSERT INTO `suitecode` (`id`, `textcode`, `langue`, `id_chemin`) VALUES
(1, '## Télécharger un exemple en PHP\n\n<a href=\"https://github.com/smspartnerfr/SMS-API-PHP\" class=\"btn btn-success btn-sm text-white\">Exemple API</a>\n\nN’hésitez pas à consulter nos [SDK](https://docpartner.dev/sdks).disponible sur ce site.\n', 'fr', 1),
(2, '## Download an example in PHP\n\n<a href=\"https://github.com/smspartnerfr/SMS-API-PHP\" class=\"btn btn-success btn-sm text-white\">API Example </a>\n\n\n\nFeel free to consult our [SDK](https://docpartner.dev/sdks). available on this site.', 'en', 5),
(3, '## Descargar un ejemplo en PHP\n\n <a href=\"https://github.com/smspartnerfr/SMS-API-PHP\" class=\"btn btn-success btn-sm text-white\">Ejemplo de API</a>\n\n\nNo dude en consultar nuestros [SDK](https://docpartner.dev/sdks).disponibles en este sitio.', 'es', 6),
(4, '## Scarica un esempio in PHP\n<a href=\"https://github.com/smspartnerfr/SMS-API-PHP\" class=\"btn btn-success btn-sm text-white\">Esempio API</a>\n\nNon esitare a consultare i nostri [SDK](https://docpartner.dev/sdks). disponibili su questo sito.\n', 'it', 7),
(5, '## Baixar um exemplo em PHP\r\n\r\n<a href=\"https://github.com/smspartnerfr/SMS-API-PHP\" class=\"btn btn-success btn-sm text-white\">Exemplo de API </a>\r\n\r\nNão hesite em consultar nossos [SDK](https://docpartner.dev/sdks) disponíveis neste site.\r\n\r\n', 'pt', 8),
(7, '---\ntitle: Liste des caractères remplacés\ndescription: Liste des caractères remplacés\n---\n<br>\n# Liste des caractères remplacés\n\n\n| Caractères | Remplacé par |\n|:------------:|:---------------:|\n| ą          | à             |\n| ’          | ‘             |\n| ÿ          | y             |\n| ç          | Ç             |\n| û          | u             |\n| ü          | u             |\n| ï          | i             |\n| ô          | o             |\n| ö          | o             |\n| ó          | o             |\n| î          | i             |\n| ë          | e             |\n| ê          | e             |\n| [          | (             |\n| ]          | )             |\n| {          | (             |\n| }          | )             |\n| `          | ‘             |\n| µ          | u             |\n| Ä          | A             |\n| À          | A             |\n| Á          | A             |\n| Â          | A             |\n| Ã          | A             |\n| È          | E             |\n| Ê          | E             |\n| Ë          | E             |\n| Î          | I             |\n| Ü          | U             |\n| Ù          | U             |\n| Ú          | U             |\n| Û          | U             |\n| Ý          | Y             |\n| ä          | a             |\n| á          | a             |\n| â          | a             |\n| ã          | a             |\n| Ö          | O             |\n| Ô          | O             |\n| œ          | oe            |\n| ^          | Supprimé      |\n| ~          | Supprimé      |\n| \\|          | Supprimé      |\n|  \\          | Supprimé      |\n| ¨          | Supprimé      |\n| °          | .             |\n| ‘          | ‘             |\n| “          | ‘             |\n| ñ          | n             |\n| Ñ          | N             |\n| §          | Supprimé      |\n| «          | “             |\n| »          | “             |', 'fr', 15),
(9, '---\ntitle: List of Replaced Characters\ndescription: List of Replaced Characters\n---\n<br>\n# List of Replaced Characters\n\n| Characters | Replaced by |\n|:------------:|:---------------:|\n| ą          | à             |\n| ’          | ‘             |\n| ÿ          | y             |\n| ç          | Ç             |\n| û          | u             |\n| ü          | u             |\n| ï          | i             |\n| ô          | o             |\n| ö          | o             |\n| ó          | o             |\n| î          | i             |\n| ë          | e             |\n| ê          | e             |\n| [          | (             |\n| ]          | )             |\n| {          | (             |\n| }          | )             |\n| `          | ‘             |\n| µ          | u             |\n| Ä          | A             |\n| À          | A             |\n| Á          | A             |\n| Â          | A             |\n| Ã          | A             |\n| È          | E             |\n| Ê          | E             |\n| Ë          | E             |\n| Î          | I             |\n| Ü          | U             |\n| Ù          | U             |\n| Ú          | U             |\n| Û          | U             |\n| Ý          | Y             |\n| ä          | a             |\n| á          | a             |\n| â          | a             |\n| ã          | a             |\n| Ö          | O             |\n| Ô          | O             |\n| œ          | oe            |\n| ^          | Removed      |\n| ~          | Removed      |\n| \\|         | Removed      |\n| \\         | Removed      |\n| ¨          | Removed      |\n| °          | .             |\n| ‘          | ‘             |\n| “          | ‘             |\n| ñ          | n             |\n| Ñ          | N             |\n| §          | Removed      |\n| «          | “             |\n| »          | “             |\n\n', 'en', 16);

-- --------------------------------------------------------

--
-- Structure de la table `urlapi`
--

CREATE TABLE `urlapi` (
  `id` int(11) NOT NULL,
  `textcode` text NOT NULL,
  `id_chemin` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Déchargement des données de la table `urlapi`
--

INSERT INTO `urlapi` (`id`, `textcode`, `id_chemin`) VALUES
(1, '## URL\n\n<div>\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/me</span>\n</div>', 2),
(3, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/me</span>\r\n</div>', 9),
(4, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/me</span>\r\n</div>\r\n\r\n', 10),
(5, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/me</span>\r\n</div>\r\n\r\n', 11),
(7, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/me</span>\r\n</div>', 12),
(8, '## URL\n\n<div>\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.smspartner.fr/v1/send</span>\n</div>\n', 13),
(9, '## URL\n\n<div>\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.smspartner.fr/v1/send</span>\n</div>\n', 14),
(10, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/bulk-send</span>\r\n</div>', 17),
(11, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.smspartner.fr/v1/send</span>\r\n</div>\r\n', 18),
(12, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">http://api.smspartner.fr/v1/vn/send</span>\r\n</div>\r\n', 19),
(13, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">http://api.smspartner.fr/v1/vn/send</span>\r\n</div>\r\n', 20),
(14, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.smspartner.fr/v1/sondage/to/send</span>\r\n</div>\r\n', 21),
(15, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.smspartner.fr/v1/sondage/to/send</span>\r\n</div>\r\n\r\n', 22),
(16, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/message-cancel</span>\r\n</div>\r\n\r\n', 23),
(17, '## URL\n\n<div>\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/message-cancel</span>\n</div>', 24),
(18, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/message-status</span>\r\n</div>\r\n', 25),
(19, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/message-status</span>\r\n</div>\r\n', 26),
(20, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/bulk-status</span>\r\n</div>\r\n', 29),
(21, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/bulk-status</span>\r\n</div>\r\n', 30),
(22, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/multi-status</span>\r\n</div>\r\n', 27),
(23, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/multi-status</span>\r\n</div>\r\n', 28),
(24, '## URL\n\n<div>\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/bulk-status-by-tag</span>\n</div>\n', 31),
(25, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/bulk-status-by-tag</span>\r\n</div>\r\n', 32),
(26, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/statistics/cost-resume</span>\r\n</div>\r\n', 33),
(27, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/statistics/cost-resume</span>\r\n</div>\r\n', 34),
(28, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/group/add</span>\r\n</div>\r\n\r\n', 36),
(29, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/group/add</span>\r\n</div>\r\n\r\n', 37),
(30, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/contact/add</span>\r\n</div>\r\n\r\n', 38),
(31, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/contact/add</span>\r\n</div>\r\n\r\n', 39),
(32, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">DELETE</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">  http://api.smspartner.fr/v1/groupe/delete</span>\r\n</div>\r\n\r\n', 40),
(33, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">DELETE</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">  http://api.smspartner.fr/v1/group/delete</span>\r\n</div>\r\n\r\n', 41),
(34, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/contact/add</span>\r\n\r\n</div>\r\n\r\nCette requête est utilisée pour ajouter un lot de 500 contacts (maximum).\r\n', 42),
(35, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/contact/add</span>\r\n\r\n</div>\r\n\r\nThis request is used to add a batch of 500 contacts (maximum).\r\n', 43),
(36, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/contact/update</span>\r\n</div>\r\n\r\n', 44),
(37, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/contact/update</span>\r\n</div>\r\n\r\n', 45),
(38, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">http://api.smspartner.fr/v1/contact/delete</span>\r\n</div>\r\n\r\n', 46),
(39, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">http://api.smspartner.fr/v1/contact/delete</span>\r\n</div>\r\n\r\n', 47),
(40, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/group/list</span>\r\n</div>\r\n\r\n', 48),
(41, '## URL\r\n<div>\r\n  <div style=\"background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/group/list</span>\r\n</div>\r\n\r\n', 49),
(42, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.smspartner.fr/v1/contact/detail</span>\r\n</div>\r\n\r\n', 52),
(43, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.smspartner.fr/v1/contact/detail</span>\r\n</div>\r\n\r\n', 53),
(44, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/stop-sms/list</span>\r\n</div>\r\n', 54),
(45, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: red; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/stop-sms/list</span>\r\n</div>\r\n', 55),
(46, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/stop-sms/add</span>\r\n</div>\r\n', 56),
(47, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/stop-sms/add</span>\r\n</div>\r\n', 57),
(48, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.smspartner.fr/v1/stop-sms/delete</span>\r\n</div>\r\n', 58),
(49, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.smspartner.fr/v1/stop-sms/delete</span>\r\n</div>\r\n', 59),
(50, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/subaccount/create</span>\r\n</div>\r\n', 64),
(51, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/subaccount/create</span>\r\n</div>\r\n', 65),
(52, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">DELETE</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/subaccount/remove</span>\r\n</div>\r\n\r\n', 66),
(53, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">DELETE</div> \r\n  <span style=\"display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/subaccount/remove</span>\r\n</div>\r\n\r\n', 67),
(54, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/subaccount/list</span>\r\n</div>\r\n', 68),
(55, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/subaccount/list</span>\r\n</div>\r\n', 69),
(56, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/subaccount/credit/add</span>\r\n</div>\r\n', 70),
(57, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/subaccount/credit/add</span>\r\n</div>\r\n', 71),
(58, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/subaccount/credit/remove</span>\r\n</div>\r\n', 73),
(59, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\">https://api.smspartner.fr/v1/subaccount/credit/remove</span>\r\n</div>\r\n', 74),
(60, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/vn/callforward</span>\r\n</div>\r\n\r\n', 75),
(61, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">POST</div> \r\n  <span style=\" display: inline-block; vertical-align: middle; margin-left: 10px;\"> http://api.smspartner.fr/v1/vn/callforward</span>\r\n</div>\r\n\r\n', 76),
(62, '## URL\n\n<div>\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.voicepartner.fr/v1/me</span>\n</div>\n', 81),
(63, '## URL\r\n\r\n<div>\r\n  <div style=\"background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;\">GET</div> \r\n  <span style=\"color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;\"> https://api.voicepartner.fr/v1/me</span>\r\n</div>\r\n', 82);

--
-- Index pour les tables déchargées
--

--
-- Index pour la table `chemin`
--
ALTER TABLE `chemin`
  ADD PRIMARY KEY (`id`);

--
-- Index pour la table `erreur_controlecode`
--
ALTER TABLE `erreur_controlecode`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id_chemin` (`id_chemin`);

--
-- Index pour la table `introduction`
--
ALTER TABLE `introduction`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id_chemin` (`id_chemin`);

--
-- Index pour la table `parametre`
--
ALTER TABLE `parametre`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id_chemin` (`id_chemin`);

--
-- Index pour la table `requete_reponse`
--
ALTER TABLE `requete_reponse`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id_chemin` (`id_chemin`);

--
-- Index pour la table `suitecode`
--
ALTER TABLE `suitecode`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id_chemin` (`id_chemin`);

--
-- Index pour la table `urlapi`
--
ALTER TABLE `urlapi`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id_chemin` (`id_chemin`);

--
-- AUTO_INCREMENT pour les tables déchargées
--

--
-- AUTO_INCREMENT pour la table `chemin`
--
ALTER TABLE `chemin`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=91;

--
-- AUTO_INCREMENT pour la table `erreur_controlecode`
--
ALTER TABLE `erreur_controlecode`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=61;

--
-- AUTO_INCREMENT pour la table `introduction`
--
ALTER TABLE `introduction`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=80;

--
-- AUTO_INCREMENT pour la table `parametre`
--
ALTER TABLE `parametre`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=68;

--
-- AUTO_INCREMENT pour la table `requete_reponse`
--
ALTER TABLE `requete_reponse`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=70;

--
-- AUTO_INCREMENT pour la table `suitecode`
--
ALTER TABLE `suitecode`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=10;

--
-- AUTO_INCREMENT pour la table `urlapi`
--
ALTER TABLE `urlapi`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=64;

--
-- Contraintes pour les tables déchargées
--

--
-- Contraintes pour la table `erreur_controlecode`
--
ALTER TABLE `erreur_controlecode`
  ADD CONSTRAINT `erreur_controlecode_ibfk_1` FOREIGN KEY (`id_chemin`) REFERENCES `chemin` (`id`);

--
-- Contraintes pour la table `introduction`
--
ALTER TABLE `introduction`
  ADD CONSTRAINT `introduction_ibfk_1` FOREIGN KEY (`id_chemin`) REFERENCES `chemin` (`id`);

--
-- Contraintes pour la table `parametre`
--
ALTER TABLE `parametre`
  ADD CONSTRAINT `parametre_ibfk_1` FOREIGN KEY (`id_chemin`) REFERENCES `chemin` (`id`);

--
-- Contraintes pour la table `requete_reponse`
--
ALTER TABLE `requete_reponse`
  ADD CONSTRAINT `requete_reponse_ibfk_1` FOREIGN KEY (`id_chemin`) REFERENCES `chemin` (`id`);

--
-- Contraintes pour la table `suitecode`
--
ALTER TABLE `suitecode`
  ADD CONSTRAINT `suitecode_ibfk_1` FOREIGN KEY (`id_chemin`) REFERENCES `chemin` (`id`);

--
-- Contraintes pour la table `urlapi`
--
ALTER TABLE `urlapi`
  ADD CONSTRAINT `urlapi_ibfk_1` FOREIGN KEY (`id_chemin`) REFERENCES `chemin` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
