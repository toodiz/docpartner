<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/es/xsl/atom.xsl" media="all"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
  <id>http://localhost:8000/es/docs/</id>
  <title>Doc Partner - Docs</title>
  <subtitle><![CDATA[Site description.]]></subtitle>
  <link href="http://localhost:8000/es/docs/atom.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:8000/es/docs/" rel="alternate" type="text/html" />
  <updated>2024-07-19T08:25:07+00:00</updated>
  <author>
    <name>NDA MEDIA</name>
    <uri>https://ndamedia.fr/</uri>
  </author>
  <entry xml:lang="es">
    <id>http://localhost:8000/es/docs/sms/smsp2/</id>
    <title>Créditos</title>
    <content type="html">
      <![CDATA[<h1 id="introduccion-a-la-api-de-sms-partner">Introducción a la API de SMS Partner</h1>
<p>Esta solicitud se utiliza para recuperar su crédito disponible de SMS y el número de SMS pendiente de inicio.</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: red; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/me</span>
</div>
<h2 id="configuraciones">Configuraciones</h2>
<p>Cada solicitud de API es compatible con los siguientes parámetros :</p>
<table>
<thead>
<tr>
<th style="text-align: left;">Parámetro</th>
<th style="text-align: left;">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><strong>apiKey</strong></td>
<td style="text-align: left;"><strong>Clave de API de su cuenta. Usted lo consigue en su Cuenta de SMS Partner.</strong></td>
</tr>
</tbody>
</table>
<h3 id="ajustes-opcionales">Ajustes opcionales</h3>
<table>
<thead>
<tr>
<th style="text-align: left;">Parámetro</th>
<th style="text-align: left;">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><strong>_format</strong></td>
<td style="text-align: left;">Formato de la respuesta. Se puede elegir entre JSON o XML. Por defecto, el formato de respuesta es JSON.</td>
</tr>
</tbody>
</table>
<h2 id="solicitud">Solicitud</h2>
<p>Ejemplos de solicitudes:</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?php
// Prepare data for GET request
$data = 'apiKey=YOUR_API_KEY';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, 'https://api.smspartner.fr/v1/me?' . $data);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_TIMEOUT, 10);

$result = curl_exec($curl);
curl_close($curl);

// Process your response here
echo $result;
?&gt;
    </code></pre>
  </div>
  <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
cURL
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #check credits
    Dim url As String
    url = base_url &amp; "me" &amp; "?apiKey=" &amp; apiKey

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def get_balance(self):
        url = URL + "/me?apiKey=" + API_KEY
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
   </code></pre>
  </div>
  <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-curl">
    curl -H "Content-Type: application/json" -X GET  https://api.smspartner.fr/v1/me?apiKey=xxx
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require('https');
// Préparer les données pour la requête GET
let data = 'apiKey=YOUR API KEY';
let url = 'https://api.smspartner.fr/v1/me?' + data;

https.get(url, (res) =&gt; {
  let data = ';

  // Un morceau de données a été reçu.
  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  // La totalité de la réponse a été reçue. Imprimer le résultat.
  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  // Un message d'erreur sera imprimé en cas d'erreur.
  console.log("Erreur: " + err.message);
});
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class CreditsSms {
    public static void main(String[] args) {
        try {
            String apiKey = "your_api_key";
            String url = "https://api.smspartner.fr/v1/me?apiKey=" + apiKey;

            URL obj = new URL(url);
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setRequestMethod("GET");

            int responseCode = con.getResponseCode();

            if (responseCode == HttpURLConnection.HTTP_OK) {
                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
                String inputLine;
                StringBuilder response = new StringBuilder();

                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                System.out.println(response.toString());
            } else {
                System.out.println("GET request failed. Response Code: " + responseCode);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

struct Credits: View {
    @State private var credit: String = "Loading..."

    var body: some View {
        VStack {
            Text("Mon crédit")
                .font(.title)
                .padding()

            Text(credit)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: getCredit)
    }

    func getCredit() {
        let apiKey = "Your-api-key"
        let urlString = "https://api.smspartner.fr/v1/me?apiKey=(apiKey)"

        guard let url = URL(string: urlString) else {
            print("URL inválida")
            return
        }

        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            if let error = error {
                print("Error: (error)")
            } else if let data = data {
                let result = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    credit = result ?? "Error"
                }
            }
        }

        task.resume()
    }
}

struct CreditView_Previews: PreviewProvider {
    static var previews: some View {
        Credits()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code class="language-go">
package main

import (
    "fmt"
    "io/ioutil"
    "net/http"
)

func main() {
    apiKey := "your_api_key"
    url := "https://api.smspartner.fr/v1/me?apiKey=" + apiKey

    response, err := http.Get(url)
    if err != nil {
        fmt.Println("GET request failed:", err)
        return
    }
    defer response.Body.Close()

    if response.StatusCode == http.StatusOK {
        bodyBytes, err := ioutil.ReadAll(response.Body)
        if err != nil {
            fmt.Println("Failed to read response body:", err)
            return
        }
        fmt.Println(string(bodyBytes))
    } else {
        fmt.Println("GET request failed. Response Code:", response.StatusCode)
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "YOUR_API_KEY";
        var uri = new Uri($"https://api.smspartner.fr/v1/me?apiKey={apiKey}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("GET request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="responses">Responses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
    <span class="hljs-attr">"user"</span>: {
        <span class="hljs-attr">"username"</span>: <span class="hljs-string">"example@email.com"</span>,
        <span class="hljs-attr">"firstname"</span>: <span class="hljs-string">"John"</span>,
        <span class="hljs-attr">"lastname"</span>: <span class="hljs-string">"Doe"</span>
    },
    <span class="hljs-attr">"credits"</span>: {
        <span class="hljs-attr">"creditSms"</span>: <span class="hljs-number">269082</span>,
        <span class="hljs-attr">"creditSmsECO"</span>: <span class="hljs-number">444570</span>,
        <span class="hljs-attr">"creditHlr"</span>: <span class="hljs-number">2045023</span>,
        <span class="hljs-attr">"toSend"</span>: <span class="hljs-number">0</span>,
        <span class="hljs-attr">"balance"</span>: <span class="hljs-string">"10225.119"</span>,
        <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
    }
}</code></pre>
<h3 id="xml">XML</h3>
<pre><code class="language-xml hljs xml">    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">code</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"language-xml"</span>&gt;</span>
<span class="hljs-meta">&lt;?xml version='1.0' encoding='UTF-8'?&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>200<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>exemple@email.com<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">firstname</span>&gt;</span>John<span class="hljs-tag">&lt;/<span class="hljs-name">firstname</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">lastname</span>&gt;</span>Doe<span class="hljs-tag">&lt;/<span class="hljs-name">lastname</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>269070<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>444551<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>2044937<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
            &lt;![CDATA[10224.688]]&gt;
        <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
            &lt;![CDATA[EUR]]&gt;
        <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
            &lt;![CDATA[10224.688]]&gt;
        <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span></code></pre>
<h2 id="codigo-de-control">Código de control</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Respuesta</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clave de API no válido</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">¡Todo paso bien!</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/es/docs/sms/smsp2/" rel="alternate" type="text/html" />
    <published>2024-07-24T13:15:10+00:00</published>
    <updated>2024-07-24T13:15:10+00:00</updated>
  </entry>
  <entry xml:lang="es">
    <id>http://localhost:8000/es/docs/sms/smsp1/</id>
    <title>Introduction</title>
    <content type="html">
      <![CDATA[<h1 id="introduccion-a-la-api-de-sms-partner">Introducción a la API de SMS Partner</h1>
<p>Los envíos de SMS se realizan desde <a href="https://www.smspartner.fr/api-sms/" rel="noopener noreferrer nofollow">la plataforma SMS Partner</a> de SMS Partner.. Desde el sitio, usted tiene acceso inmediato a nuestra API gratuita, la cual le permitirá integrar fácilmente nuestros servicios de SMS a su sitio web, software o aplicación de CRM en PHP, ASP, .NET, Java o cualquier otro lenguaje.</p>
<h2 id="configuraciones">Configuraciones</h2>
<p>Cada solicitud de API es compatible con al menos los siguientes parámetros :</p>
<table>
<thead>
<tr>
<th style="text-align: left;">Parámetro</th>
<th style="text-align: left;">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><code>apiKey</code></td>
<td style="text-align: left;">Clave de API de su cuenta. Usted lo consigue en su  <a href="https://my.smspartner.fr/connexion" rel="noopener noreferrer nofollow">Cuenta de SMS Partner</a>.</td>
</tr>
</tbody>
</table>
<h3 id="ajustes-opcionales">Ajustes opcionales</h3>
<table>
<thead>
<tr>
<th style="text-align: left;">Parámetro</th>
<th style="text-align: left;">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><code>_format</code></td>
<td style="text-align: left;">Formato de la respuesta. Usted tiene la posibilidad de elegir entre <code>json</code> y <code>xml</code>. Por defecto, el formato de respuesta es  <code>json</code>. Ejemplo : <code>https://api.smspartner.fr/v1/me?apiKey=YOUR_API_KEY&amp;_format=json</code></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align: left;">_<em>format</em></th>
<th style="text-align: left;"><em>Content-Type</em></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;">json</td>
<td style="text-align: left;">application/json</td>
</tr>
<tr>
<td style="text-align: left;">xml</td>
<td style="text-align: left;">application/xml</td>
</tr>
</tbody>
</table>
<p>Puede, por ejemplo, dar formato al mensaje SMS a formatos JSON , pero debe introducir la cabecera Content-Type en consecuencia :</p>
<h4 id="json">JSON</h4>
<pre><code class="language-json hljs json">POST /v1/send HTTP/<span class="hljs-number">1.1</span>
Host: api.smspartner.fr
Content-Type: application/json

{
    <span class="hljs-attr">"apiKey"</span>: <span class="hljs-string">"API_KEY"</span>,
    <span class="hljs-attr">"phoneNumbers"</span>: <span class="hljs-string">"+33600000000"</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Hello world"</span>
}</code></pre>
<h2 id="solicitudes">Solicitudes</h2>
<p>Todas las solicitudes de API deben enviarse a <a href="http://api.smspartner.fr/v1/orden">http://api.smspartner.fr/v1/orden</a>, orden el mando es la llamada a la API que desea ejecutar con los parámetros incluidos en el body POST o la dirección URL (GET ).</p>
<h2 id="descargar-un-ejemplo-en-php">Descargar un ejemplo en PHP</h2>
<p><a href="https://github.com/smspartnerfr/SMS-API-PHP" class="btn btn-success btn-sm text-white">Ejemplo de API</a></p>
<p>No dude en consultar nuestros <a href="https://docpartner.dev/sdks" rel="noopener noreferrer nofollow">SDK</a>.disponibles en este sitio.</p>]]>
    </content>
    <link href="http://localhost:8000/es/docs/sms/smsp1/" rel="alternate" type="text/html" />
    <published>2024-07-19T08:25:07+00:00</published>
    <updated>2024-07-19T08:25:07+00:00</updated>
  </entry>
</feed>
