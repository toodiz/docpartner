<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/xsl/atom.xsl" media="all"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="fr">
  <id>http://localhost:8000/docs/</id>
  <title>Doc Partner - Docs</title>
  <subtitle><![CDATA[Site description.]]></subtitle>
  <link href="http://localhost:8000/docs/atom.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:8000/docs/" rel="alternate" type="text/html" />
  <updated>2024-07-31T13:21:39+00:00</updated>
  <author>
    <name>NDA MEDIA</name>
    <uri>https://ndamedia.fr/</uri>
  </author>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/mailp1/</id>
    <title>Introduction Mail</title>
    <content type="html">
      <![CDATA[<h1 id="introduction-a-l-api-mail-partner">Introduction à l’API Mail Partner</h1>
<p>Les envois de mail sont effectués à partir de la plateforme <a href="shttps://mailpartner.fr">Mail Partner</a> ou d’effectuer des <a href="message-vocal/message_vocalp3/">dépôts de messages directement sur répondeur.</a> Ces fonctionnalités sont proposées à partir de la plateforme <a href="https://www.voicepartner.fr/" rel="noopener noreferrer nofollow">Voice Partner</a>.Depuis le site, vous avez un accès immédiat à notre API gratuite : elle vous permet d’intégrer facilement nos services de mail à votre site web, logiciel ou application CRM en PHP, ASP, .NET, Java ou tout autre langage.</p>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.mailpartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>_format</strong></td>
<td>Format de la réponse. Vous avez le choix entre json et xml. Par défaut, le format de réponse est json. <br> Exemple : <a href="https://api.mailpartner.fr/v1/me?apiKey=YOUR_API_KEY&amp;_format=json">https://api.mailpartner.fr/v1/me?apiKey=YOUR_API_KEY&amp;_format=json</a></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align: center;">_format</th>
<th>Content-Type</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>json</strong></td>
<td>application/json</td>
</tr>
<tr>
<td style="text-align: center;"><strong>xml</strong></td>
<td>application/xml</td>
</tr>
</tbody>
</table>
<p>Vous pouvez, par exemple, formater la requête au format json ou xml, mais vous devez renseigner l’en-tête Content-Type en conséquence:</p>
<pre><code class="language-json hljs json">POST /v1/send HTTP/<span class="hljs-number">1.1</span>
Host: api.mailpartner.fr
Content-Type: application/json
{
    <span class="hljs-attr">"apiKey"</span>: <span class="hljs-string">"API_KEY"</span>,
    <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Mon premier email"</span>,
    <span class="hljs-attr">"htmlContent"</span>: <span class="hljs-string">"Hello world"</span>,
    <span class="hljs-attr">"params"</span>:{
        <span class="hljs-attr">"to"</span>:[
             {
                <span class="hljs-attr">"email"</span>:<span class="hljs-string">"mon@email2.com"</span>
             }
         ]
    }
}</code></pre>
<h2 id="requetes">Requêtes</h2>
<p>Toutes les demandes de l’API doivent être envoyées à <strong><a href="http://api.mailpartner.fr/v1/commande">http://api.mailpartner.fr/v1/commande</a></strong>, <strong>commande</strong> est l’appel API que vous souhaitez exécuter, avec les paramètres inclus dans le <strong>body POST</strong> ou <strong>l’URL (GET)</strong>.</p>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/mailp1/" rel="alternate" type="text/html" />
    <published>2024-08-01T07:05:15+00:00</published>
    <updated>2024-08-01T07:05:15+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/sous-comptes/sous_comptep4/</id>
    <title>Activation4</title>
    <content type="html">
      <![CDATA[<h1 id="activation-et-creation-des-sous-comptes">Activation et création des sous-comptes</h1>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/sous-comptes/sous_comptep4/" rel="alternate" type="text/html" />
    <published>2024-07-31T15:08:08+00:00</published>
    <updated>2024-07-31T15:08:08+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/sous-comptes/sous_comptep3/</id>
    <title>Activation3</title>
    <content type="html">
      <![CDATA[<h1 id="activation-et-creation-des-sous-comptes">Activation et création des sous-comptes</h1>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/sous-comptes/sous_comptep3/" rel="alternate" type="text/html" />
    <published>2024-07-31T15:08:04+00:00</published>
    <updated>2024-07-31T15:08:04+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/sous-comptes/sous_comptep2/</id>
    <title>Création de sous-compte</title>
    <content type="html">
      <![CDATA[<h1 id="creation-de-sous-compte-mail">Création de sous-compte mail</h1>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/sous-comptes/sous_comptep2/" rel="alternate" type="text/html" />
    <published>2024-07-31T15:07:57+00:00</published>
    <updated>2024-07-31T15:07:57+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/sous-comptes/sous_comptep1/</id>
    <title>Activation</title>
    <content type="html">
      <![CDATA[<h1 id="activation-et-creation-des-sous-comptes">Activation et création des sous-comptes</h1>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/sous-comptes/sous_comptep1/" rel="alternate" type="text/html" />
    <published>2024-07-31T15:06:14+00:00</published>
    <updated>2024-07-31T15:06:14+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/gestion-des-desabonnements/desabonnementsp3/</id>
    <title>Supprimer un mail</title>
    <content type="html">
      <![CDATA[<h1 id="supprimer-un-mail-de-la-liste-des-desabonnements">Supprimer un mail de la liste des désabonnements</h1>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/gestion-des-desabonnements/desabonnementsp3/" rel="alternate" type="text/html" />
    <published>2024-07-31T15:05:12+00:00</published>
    <updated>2024-07-31T15:05:12+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/gestion-des-desabonnements/desabonnementsp2/</id>
    <title>Liste des désabonnements</title>
    <content type="html">
      <![CDATA[<h1 id="liste-des-desabonnements">Liste des désabonnements</h1>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/gestion-des-desabonnements/desabonnementsp2/" rel="alternate" type="text/html" />
    <published>2024-07-31T15:04:54+00:00</published>
    <updated>2024-07-31T15:04:54+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/gestion-des-desabonnements/desabonnementsp1/</id>
    <title>Ajouter un mail</title>
    <content type="html">
      <![CDATA[<h1 id="ajouter-un-mail-a-la-liste-des-desinscriptions">Ajouter un mail à la liste des désinscriptions</h1>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/gestion-des-desabonnements/desabonnementsp1/" rel="alternate" type="text/html" />
    <published>2024-07-31T15:04:07+00:00</published>
    <updated>2024-07-31T15:04:07+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/status-de-remise/status_de_remisep1/</id>
    <title>Statut par message</title>
    <content type="html">
      <![CDATA[<h1 id="statut-par-message-mail">Statut par message mail</h1>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/status-de-remise/status_de_remisep1/" rel="alternate" type="text/html" />
    <published>2024-07-31T15:02:37+00:00</published>
    <updated>2024-07-31T15:02:37+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/envoyer-des-mails/envoyer_des_mailsp1/</id>
    <title>Envoi unitaire de mail</title>
    <content type="html">
      <![CDATA[<h1 id="envoyer-des-mails">Envoyer des mails</h1>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/envoyer-des-mails/envoyer_des_mailsp1/" rel="alternate" type="text/html" />
    <published>2024-07-31T15:00:27+00:00</published>
    <updated>2024-07-31T15:00:27+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/mailp3/</id>
    <title>Annuler l’envoi d’un Mail</title>
    <content type="html">
      <![CDATA[<h1 id="annuler-l-envoi-d-un-mail-differe">Annuler l’envoi d’un mail différé</h1>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/mailp3/" rel="alternate" type="text/html" />
    <published>2024-07-31T14:59:06+00:00</published>
    <updated>2024-07-31T14:59:06+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/mail/mailp2/</id>
    <title>Crédits mails</title>
    <content type="html">
      <![CDATA[<h1 id="introduction-a-l-api-mail-partner">Introduction à l’API Mail Partner</h1>
<p>Cette requête est utilisée pour récupérer votre crédit disponible de SMS, ainsi que le nombre de SMS en instance de départ.</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: red; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/me</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d'API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: left;">Paramètre</th>
<th style="text-align: left;">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><strong>apiKey</strong></td>
<td style="text-align: left;">Clé API de votre compte. Vous l'obtenez dans votre compte SMS Partner.</td>
</tr>
</tbody>
</table>
<h3 id="parametres-optionnels">Paramètres optionnels</h3>
<table>
<thead>
<tr>
<th style="text-align: left;">Paramètre</th>
<th style="text-align: left;">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><strong>_format</strong></td>
<td style="text-align: left;">Format de la réponse. Vous pouvez choisir entre JSON ou XML. Par défaut, le format de réponse est JSON.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?php
// Prepare data for GET request
$data = 'apiKey=YOUR_API_KEY';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, 'https://api.smspartner.fr/v1/me?' . $data);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_TIMEOUT, 10);

$result = curl_exec($curl);
curl_close($curl);

// Process your response here
echo $result;
?&gt;
    </code></pre>
  </div>
  <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code>
cURL
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #check credits
    Dim url As String
    url = base_url &amp; "me" &amp; "?apiKey=" &amp; apiKey

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code>
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def get_balance(self):
        url = URL + "/me?apiKey=" + API_KEY
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
   </code></pre>
  </div>
  <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code>
    curl -H "Content-Type: application/json" -X GET  https://api.smspartner.fr/v1/me?apiKey=xxx
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code>
const https = require('https');
// Préparer les données pour la requête GET
let data = 'apiKey=YOUR API KEY';
let url = 'https://api.smspartner.fr/v1/me?' + data;

https.get(url, (res) =&gt; {
  let data = '';

  // Un morceau de données a été reçu.
  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  // La totalité de la réponse a été reçue. Imprimer le résultat.
  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  // Un message d'erreur sera imprimé en cas d'erreur.
  console.log("Erreur: " + err.message);
});
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code>
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class CreditsSms {
    public static void main(String[] args) {
        try {
            String apiKey = "your_api_key";
            String url = "https://api.smspartner.fr/v1/me?apiKey=" + apiKey;

            URL obj = new URL(url);
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setRequestMethod("GET");

            int responseCode = con.getResponseCode();

            if (responseCode == HttpURLConnection.HTTP_OK) {
                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
                String inputLine;
                StringBuilder response = new StringBuilder();

                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                System.out.println(response.toString());
            } else {
                System.out.println("GET request failed. Response Code: " + responseCode);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code>
import SwiftUI

struct Credits: View {
    @State private var credit: String = "Loading..."

    var body: some View {
        VStack {
            Text("Mon crédit")
                .font(.title)
                .padding()

            Text(credit)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: getCredit)
    }

    func getCredit() {
        let apiKey = "Your-api-key"
        let urlString = "https://api.smspartner.fr/v1/me?apiKey=\(apiKey)"

        guard let url = URL(string: urlString) else {
            print("URL inválida")
            return
        }

        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            if let error = error {
                print("Error: \(error)")
            } else if let data = data {
                let result = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    credit = result ?? "Error"
                }
            }
        }

        task.resume()
    }
}

struct CreditView_Previews: PreviewProvider {
    static var previews: some View {
        Credits()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code>
package main

import (
    "fmt"
    "io/ioutil"
    "net/http"
)

func main() {
    apiKey := "your_api_key"
    url := "https://api.smspartner.fr/v1/me?apiKey=" + apiKey

    response, err := http.Get(url)
    if err != nil {
        fmt.Println("GET request failed:", err)
        return
    }
    defer response.Body.Close()

    if response.StatusCode == http.StatusOK {
        bodyBytes, err := ioutil.ReadAll(response.Body)
        if err != nil {
            fmt.Println("Failed to read response body:", err)
            return
        }
        fmt.Println(string(bodyBytes))
    } else {
        fmt.Println("GET request failed. Response Code:", response.StatusCode)
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code>
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "YOUR_API_KEY";
        var uri = new Uri($"https://api.smspartner.fr/v1/me?apiKey={apiKey}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("GET request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<!-- Nouvelle section de navigation tabs pour JSON et XML -->
<ul class="nav nav-tabs" id="formatTab" role="tablist" style="margin-top: 20px;">
  <li class="nav-item">
    <a class="nav-link active" id="json-tab" data-toggle="tab" href="#json" role="tab" aria-controls="json" aria-selected="true">JSON</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="xml-tab" data-toggle="tab" href="#xml" role="tab" aria-controls="xml" aria-selected="false">XML</a>
  </li>
</ul>
<!-- Tab panes pour JSON et XML -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="json" role="tabpanel" aria-labelledby="json-tab">
    <pre><code class="language-json">
{
    "success": true,
    "code": 200,
    "user": {
        "username": "exemple@email.com",
        "firstname": "John",
        "lastname": "Doe"
    },
    "credits": {
        "creditSms": 269082,
        "creditSmsLowCost": 444570 (Ce paramètre sera prochainement supprimé, il est actuellement remplacé par creditSmsECO)
        "creditSmsECO": 444570,
        "creditHlr": 2045023,
        "toSend": 0,
        "solde": "10225.119",
        "currency": "EUR",
        "balance": "10225.119"
    }
}
    </code></pre>
  </div>
  <div class="tab-pane fade" id="xml" role="tabpanel" aria-labelledby="xml-tab">
    <pre><code class="language-xml">
<?xml version='1.0' encoding='UTF-8'?>
<result>
    <entry>true</entry>
    <entry>200</entry>
    <entry>
        <username>exemple@email.com</username>
        <firstname>John</firstname>
        <lastname>Doe</lastname>
    </entry>
    <entry>
        <entry>269070</entry>
        <entry>444551</entry>
        <entry>2044937</entry>
        <entry>0</entry>
        <entry>
            
        </entry>
        <entry>
            
        </entry>
        <entry>
            
        </entry>
    </entry>
</result>
    </code></pre>
  </div>
</div>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Réponse</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>]]>
    </content>
    <link href="http://localhost:8000/docs/mail/mailp2/" rel="alternate" type="text/html" />
    <published>2024-07-31T14:57:35+00:00</published>
    <updated>2024-07-31T14:57:35+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/voix/sms-vocaux/sms_vocauxp2/</id>
    <title>Supprimer un envoi différé</title>
    <content type="html">
      <![CDATA[<h1 id="supprimer-un-envoi-differe">Supprimer un envoi différé</h1>
<p>Permet d’annuler un envoi</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red ; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">DELETE</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;">  https://api.voicepartner.fr/v1/campaign/cancel</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>campaignId</strong></td>
<td>id de message</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
// Activer l'affichage des erreurs pour le débogage
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// L'URL de l'API pour annuler la campagne
$apiKey = 'YOUR_API_KEY'; // Remplacez par votre clé API réelle
$campaignId = 'CAMPAIGN_ID'; // Remplacez par l'ID de campagne réel

// Construction de l'URL avec la clé API et l'ID de campagne
$url = "https://api.voicepartner.fr/v1/campaign/cancel/$apiKey/$campaignId";

// Initialisation de cURL
$curl = curl_init($url);

// Configuration des options de cURL pour une requête DELETE
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'DELETE');
curl_setopt($curl, CURLOPT_HTTPHEADER, array(
    'Cache-Control: no-cache'
));

// Exécution de la requête cURL et enregistrement de la réponse
$response = curl_exec($curl);

// Vérification s'il y a eu des erreurs pendant l'exécution de la requête
if (curl_errno($curl)) {
    echo 'Erreur cURL : ' . curl_error($curl);
} else {
    // Affichage de la réponse
    echo 'Réponse : ' . $response;
}

// Fermeture de la session cURL
curl_close($curl);
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.Net.Http

Public Class SupprimeEnvoiDiffere
    Public Async Function CancelCampaignAsync() As Task
        Using client As New HttpClient()
            Dim apiKey As String = "YOUR_API_KEY"
            Dim campaignId As String = "CAMPAIGN_ID"
            Dim url As String = $"https://api.voicepartner.fr/v1/campaign/cancel/{apiKey}/{campaignId}"

            Try
                Dim response = Await client.DeleteAsync(url)
                Dim responseContent = Await response.Content.ReadAsStringAsync()

                If response.IsSuccessStatusCode Then
                    Console.WriteLine(responseContent)
                Else
                    Console.WriteLine($"Erreur: {response.StatusCode}")
                    Console.WriteLine($"Contenu : {responseContent}")
                End If
            Catch ex As Exception
                Console.WriteLine($"Exception: {ex.Message}")
            End Try
        End Using
    End Function
End Class
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
import requests

# Activer l'affichage des erreurs pour le débogage
# En Python, les erreurs sont affichées par défaut lorsqu'elles se produisent.

# L'URL de l'API pour annuler la campagne
apiKey = 'YOUR_API_KEY'  # Remplacez par votre clé API réelle
campaignId = 'CAMPAIGN_ID'  # Remplacez par l'ID de campagne réel

# Construction de l'URL avec la clé API et l'ID de campagne
url = f"https://api.voicepartner.fr/v1/campaign/cancel/{apiKey}/{campaignId}"

# Configuration des en-têtes HTTP
headers = {
    'Cache-Control': 'no-cache'
}

# Exécution de la requête DELETE
response = requests.delete(url, headers=headers)

# Vérification s'il y a eu des erreurs pendant l'exécution de la requête
if response.status_code != 200:
    print(f'Erreur cURL : {response.status_code}')
else:
    # Affichage de la réponse
    print(f'Réponse : {response.text}')
   </code></pre>
  </div>

    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -X DELETE 'https://api.voicepartner.fr/v1/campaign/cancel/YOUR_API_KEY/CAMPAIGN_ID'

 </code></pre>
  </div>
    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
     <pre><code class="language-javascript">

    <!-- NodeJS code example goes here -->
const axios = require('axios');

// L'URL de l'API pour annuler la campagne
const apiKey = 'YOUR_API_KEY';
const campaignId = 'CAMPAIGN_ID';
const url = `https://api.voicepartner.fr/v1/campaign/cancel/${apiKey}/${campaignId}`;

axios.delete(url)
    .then(response =&gt; {
        console.log(response.data);
    })
    .catch(error =&gt; {
        console.error('Erreur lors de la requête:', error);
    });
        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
package com.example.API;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

public class SupprimeEnvoiDiffere {
    public static void main(String[] args) {
        // L'URL de l'API pour annuler la campagne
        String apiKey = "YOUR_API_KEY";
        String campaignId = "CAMPAIGN_ID";
        String url = "https://api.voicepartner.fr/v1/campaign/cancel/" + apiKey + "/" + campaignId;

        HttpClient client = HttpClient.newHttpClient();
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(url))
                .DELETE() // This sets the request method to DELETE.
                .build();

        client.sendAsync(request, HttpResponse.BodyHandlers.ofString())
                .thenApply(HttpResponse::body)
                .thenAccept(System.out::println)
                .exceptionally(e -&gt; {
                    System.out.println("Erreur lors de la requête: " + e.getMessage());
                    return null;
                })
                .join(); // Wait for the async operation to complete
    }
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
package main

import (
    "fmt"
    "io/ioutil"
    "net/http"
)

func main() {
    apiKey := "YOUR_API_KEY"
    campaignId := "CAMPAIGN_ID"
    url := fmt.Sprintf("https://api.voicepartner.fr/v1/campaign/cancel/%s/%s", apiKey, campaignId)

    req, err := http.NewRequest("DELETE", url, nil)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }

    resp, err := http.DefaultClient.Do(req)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    defer resp.Body.Close()

    respBody, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }

    fmt.Printf("Response: %s
", string(respBody))
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

namespace API.ApiClients
{
    public class SupprimeEnvoiDiffere
    {
        public static async Task Main()
        {
            var apiKey = "YOUR_API_KEY";
            var campaignId = "CAMPAIGN_ID";
            var url = $"https://api.voicepartner.fr/v1/campaign/cancel/{apiKey}/{campaignId}";

            using (var client = new HttpClient())
            {
                try
                {
                    var response = await client.DeleteAsync(url);
                    var content = await response.Content.ReadAsStringAsync();
                    Console.WriteLine("Response: " + content);
                }
                catch (Exception ex)
                {
                    Console.WriteLine("Error: " + ex.Message);
                }
            }
        }
    }
}
  </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"campaignId"</span>: <span class="hljs-string">"D572M"</span>,
    <span class="hljs-attr">"assignedCredit"</span>: <span class="hljs-string">"1.8"</span>,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
}</code></pre>
<h2 id="exemple">Exemple</h2>
<pre><code class="language-bash hljs bash">curl -X DELETE 
  http://api.voicepartner.fr/v1/campaign/cancel/YOUR-API-KEY/CAMPAIGN-ID 
  -H <span class="hljs-string">'cache-control: no-cache'</span></code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
<tr>
<td style="text-align: center;">400</td>
<td style="text-align: left;">Mauvaise requête</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Action non autorisé.</td>
</tr>
<tr>
<td style="text-align: center;">404</td>
<td style="text-align: left;">Ressource non trouvé.</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/voix/sms-vocaux/sms_vocauxp2/" rel="alternate" type="text/html" />
    <published>2024-07-31T14:31:16+00:00</published>
    <updated>2024-07-31T14:31:16+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/voix/sms-vocaux/smskj/l/</id>
    <title>L</title>
    <content type="html">
      <![CDATA[<p>// Activer l\'affichage des erreurs pour le débogage
ini_set(\'display_errors\', 1);
ini_set(\'display_startup_errors\', 1);
error_reporting(E_ALL);</p>
<p>// L\'URL de l\'API pour annuler la campagne
$apiKey = \'YOUR_API_KEY\'; // Remplacez par votre clé API réelle
$campaignId = \'CAMPAIGN_ID\'; // Remplacez par l\'ID de campagne réel</p>
<p>// Construction de l\'URL avec la clé API et l\'ID de campagne
$url = &quot;<a href="https://api.voicepartner.fr/v1/campaign/cancel/$apiKey/$campaignId">https://api.voicepartner.fr/v1/campaign/cancel/$apiKey/$campaignId</a>&quot;;</p>
<p>// Initialisation de cURL
$curl = curl_init($url);</p>
<p>// Configuration des options de cURL pour une requête DELETE
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_CUSTOMREQUEST, \'DELETE\');
curl_setopt($curl, CURLOPT_HTTPHEADER, array(
\'Cache-Control: no-cache\'
));</p>
<p>// Exécution de la requête cURL et enregistrement de la réponse
$response = curl_exec($curl);</p>
<p>// Vérification s\'il y a eu des erreurs pendant l\'exécution de la requête
if (curl_errno($curl)) {
echo \'Erreur cURL : \' . curl_error($curl);
} else {
// Affichage de la réponse
echo \'Réponse : \' . $response;
}</p>
<p>// Fermeture de la session cURL
curl_close($curl);</p>]]>
    </content>
    <link href="http://localhost:8000/docs/voix/sms-vocaux/smskj/l/" rel="alternate" type="text/html" />
    <published>2024-07-31T14:24:56+00:00</published>
    <updated>2024-07-31T14:24:56+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/voix/voixp1/</id>
    <title>Introduction</title>
    <content type="html">
      <![CDATA[<h1 id="introduction-a-l-api-voice-partner">Introduction à l’API VOICE Partner</h1>
<p>L’API permet d’effectuer des envois de <a href="sms-vocaux/sms_vocauxp1/">SMS Vocaux</a> ou d’effectuer des <a href="message-vocal/message_vocalp3/">dépôts de messages directement sur répondeur.</a> Ces fonctionnalités sont proposées à partir de la plateforme <a href="https://www.voicepartner.fr/" rel="noopener noreferrer nofollow">Voice Partner</a>. Depuis le site, vous avez un accès immédiat à notre API gratuite : elle vous permet d’intégrer facilement nos services de voix à votre site web, logiciel ou application CRM.</p>]]>
    </content>
    <link href="http://localhost:8000/docs/voix/voixp1/" rel="alternate" type="text/html" />
    <published>2024-07-31T14:14:03+00:00</published>
    <updated>2024-07-31T14:14:03+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/voix/sms-vocaux/sms_vocauxp1/</id>
    <title>Envoyer un SMS vocal</title>
    <content type="html">
      <![CDATA[<h1 id="envoyer-un-sms-vocal">Envoyer un SMS vocal</h1>
<p>Envoyer un SMS vocal sur mobile Rate Limit: 2000 requêtes par heure</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90 ; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;">  https://api.voicepartner.fr/v1/tts/send </span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>text</strong></td>
<td>Texte du message vocal. Une pause entre les mots est possible.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>tokenAudio</strong></td>
<td>Identifiant du fichier audio, le paramètre “text” ne sera pas pris en compte.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>lang</strong></td>
<td>Langue dans laquelle le message est envoyé.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>phoneNumbers</strong></td>
<td>Numéros de téléphone mobile des destinataires.<br>Pour l’envoi de plusieurs SMS, les numéros doivent être séparés par des virgules.<br>Ils peuvent être :<br>- au format national (06xxxxxxxx) ou international (+336xxxxxxxx), pour des numéros français.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>speechRate</strong></td>
<td>La vitesse de reproduction de la parole dans le message. Efficace uniquement lorsque vous utilisez du texte. La plage prise en charge va de 0.5 (parole ralentie) à 2 (accélération de la parole). Les valeurs inférieures à 0.5 seront remplacées par 0.5 et les valeurs supérieures à 2 seront remplacées par 2. La vitesse par défaut est 1.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>notifyUrl</strong></td>
<td>Url de retour du statut du SMS vocal envoyé en POST au format JSON.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>scheduledDate</strong></td>
<td>Date d’envoi du message, au format YYYY-mm-dd H:m:00 (ex : 2021-02-02 14:15:00). À définir uniquement si vous souhaitez que les SMS soient envoyés en différé.</td>
</tr>
</tbody>
</table>
<h2 id="pause-entre-les-mots">Pause entre les mots</h2>
<div class="alert alert-info">
Il est possible d’ajouter des pauses entre les mots et d’allonger la durée du message vocal en utilisant la virgule «,».
Par exemple, si vous souhaitez avoir une pause de 3 secondes après chaque mot, le paramètre text devrait alors ressembler à ceci: «un ,,,,,, deux ,,,,,, trois ,,,,,,». Chaque virgule crée <strong> une pause de 0,5 seconde. </strong></div>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
// Activer l'affichage des erreurs pour le débogage
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// L'URL de l'API pour envoyer le message vocal
$url = 'http://api.voicepartner.fr/v1/tts/send';

// Les données à envoyer en JSON
$data = [
    'apiKey' =&gt; 'YOUR_API_KEY',         // Remplacez par votre clé API réelle
    'phoneNumbers' =&gt; '06XXXXXXXX',     // Remplacez par le(s) numéro(s) de téléphone réel(s)
    'text' =&gt; 'Mon premier test',       // Remplacez par le texte que vous souhaitez convertir en parole
    // 'speed' =&gt; '1',                  // Optionnel: Vitesse de la parole
    // 'notifyUrl' =&gt; 'http://...',     // Optionnel: URL de notification
    // 'scheduledDate' =&gt; 'YYYY-mm-dd H:i:00', // Optionnel: Date prévue pour l'envoi
];

// Encodage des données en JSON
$data_json = json_encode($data);

// Initialisation de cURL
$curl = curl_init($url);

// Configuration des options de cURL pour envoyer du JSON
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_json);
curl_setopt($curl, CURLOPT_HTTPHEADER, array(
    'Content-Type: application/json',
    'Cache-Control: no-cache'
));

// Exécution de la requête cURL et enregistrement de la réponse
$response = curl_exec($curl);

// Vérification s'il y a eu des erreurs pendant l'exécution de la requête
if (curl_errno($curl)) {
    echo 'Erreur cURL : ' . curl_error($curl);
} else {
    // Affichage de la réponse
    echo 'Réponse : ' . $response;
}

// Fermeture de la session cURL
curl_close($curl);
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.Net.Http
Imports System.Threading.Tasks
Imports Newtonsoft.Json
Imports System.Text

Public Class EnvoyerSmsVocal
    Private Const Url As String = "http://api.voicepartner.fr/v1/tts/send"

    Public Shared Async Function SendSmsVocalAsync() As Task
        Using client As New HttpClient()
            ' Remplacez ces valeurs par les vôtres
            Dim apiKey As String = "YOUR_API_KEY"
            Dim phoneNumbers As String = "06XXXXXXXX"
            Dim text As String = "Mon premier test"
            ' ... autres paramètres si nécessaire

            Dim data = New With {
                .apiKey = apiKey,
                .phoneNumbers = phoneNumbers,
                .text = text
            }

            Dim jsonContent = JsonConvert.SerializeObject(data)
            Using content As New StringContent(jsonContent, Encoding.UTF8, "application/json")
                Try
                    Dim response = Await client.PostAsync(Url, content)
                    Dim responseContent = Await response.Content.ReadAsStringAsync()

                    If response.IsSuccessStatusCode Then
                        Console.WriteLine(responseContent)
                    Else
                        Console.WriteLine($"Erreur lors de la requête: {response.StatusCode}")
                        Console.WriteLine($"Contenu: {responseContent}")
                    End If
                Catch ex As Exception
                    Console.WriteLine($"Exception: {ex.Message}")
                End Try
            End Using
        End Using
    End Function
End Class
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
import requests
import json

# Activer l'affichage des erreurs pour le débogage
# En Python, les erreurs sont affichées par défaut lorsqu'elles se produisent.

# L'URL de l'API pour envoyer le message vocal
url = 'http://api.voicepartner.fr/v1/tts/send'

# Les données à envoyer en JSON
data = {
    'apiKey': 'YOUR_API_KEY',  # Remplacez par votre clé API réelle
    'phoneNumbers': '06XXXXXXXX',  # Remplacez par le(s) numéro(s) de téléphone réel(s)
    'text': 'Mon premier test',  # Remplacez par le texte que vous souhaitez convertir en parole
    # 'speed': '1',  # Optionnel: Vitesse de la parole
    # 'notifyUrl': 'http://...',  # Optionnel: URL de notification
    # 'scheduledDate': 'YYYY-mm-dd H:i:00',  # Optionnel: Date prévue pour l'envoi
}

# Encodage des données en JSON
data_json = json.dumps(data)

# Configuration des en-têtes HTTP
headers = {
    'Content-Type': 'application/json',
    'Cache-Control': 'no-cache'
}

# Exécution de la requête POST avec les données JSON
response = requests.post(url, data=data_json, headers=headers)

# Vérification s'il y a eu des erreurs pendant l'exécution de la requête
if response.status_code != 200:
    print(f'Erreur cURL : {response.status_code}')
else:
    # Affichage de la réponse
    print(f'Réponse : {response.text}')

   </code></pre>
  </div>

    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -X POST https://api.voicepartner.fr/v1/campaign/send 
-H "Content-Type: application/json" 
-d '{
  "apiKey": "YOUR_API_KEY",
  "tokenAudio": "tokenAudio",
  "phoneNumbers": "06XXXXXXXX",
  "speechRate": 1,
  "notifyUrl": "http://votreurlderetour.com/callback",
  "scheduledDate": "2024-04-10T14:15:00"
}'

 </code></pre>
  </div>
    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
     <pre><code class="language-javascript">

    <!-- NodeJS code example goes here -->
const axios = require('axios');

// L'URL de l'API pour envoyer le message vocal
const url = 'http://api.voicepartner.fr/v1/tts/send';

// Les données à envoyer en JSON
const data = {
    apiKey: 'YOUR_API_KEY',
    phoneNumbers: '06XXXXXXXX',
    text: 'Mon premier test'
    // ... autres paramètres si nécessaire
};

axios.post(url, data)
    .then(response =&gt; {
        console.log(response.data);
    })
    .catch(error =&gt; {
        console.error('Erreur lors de la requête:', error);
    });
        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
package com.example.API;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse.BodyHandlers;

public class EnvoyerSmsVocal {
    public static void main(String[] args) {
        // L'URL de l'API
        String apiUrl = "https://api.voicepartner.fr/v1/tts/send";

        // Les données à envoyer en JSON
        String json = """
                {
                    "apiKey": "YOUR_API_KEY",
                    "phoneNumbers": "06XXXXXXXX",
                    "text": "Mon premier test",
                    "speechRate": "1",
                    "notifyUrl": "http://example.com/notify",
                }
                """;

        // Créer une instance de HttpClient
        HttpClient client = HttpClient.newHttpClient();

        // Construire la requête
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(apiUrl))
                .header("Content-Type", "application/json")
                .POST(BodyPublishers.ofString(json))
                .build();

        // Envoyer la requête de manière asynchrone
        client.sendAsync(request, BodyHandlers.ofString())
                .thenApply(response -&gt; response) // Retourner l'objet de réponse entier
                .thenAccept(response -&gt; {
                    // Maintenant, vous pouvez appeler les méthodes sur l'objet HttpResponse
                    System.out.println("Status Code: " + response.statusCode());
                    System.out.println("Response: " + response.body());
                })
                .exceptionally(e -&gt; {
                    e.printStackTrace(); // Affiche le stack trace en cas d'erreur
                    return null;
                })
                .join(); // Attendre la fin de l'opération asynchrone
    }
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
package main

import (
    "bytes"
    "encoding/json"
    "fmt"
    "io/ioutil"
    "net/http"
)

type SmsData struct {
    ApiKey        string   `json:"apiKey"`
    Text          string   `json:"text"`
    PhoneNumbers  string   `json:"phoneNumbers"`
    Lang          *string  `json:"lang,omitempty"`          // Optional: Language of the SMS
    SpeechRate    *float64 `json:"speechRate,omitempty"`    // Optional: Rate of the speech
    NotifyUrl     *string  `json:"notifyUrl,omitempty"`     // Optional: Notification URL
    ScheduledDate *string  `json:"scheduledDate,omitempty"` // Optional: Scheduled date and time
}

func main() {
    url := "http://api.voicepartner.fr/v1/tts/send"
    //lang := "fr"
    //speechRate := 1.0
    //notifyUrl := "https://yourdomain.com/notify"
    //scheduledDate := "2024-04-12 14:30:00" // Example format: 'yyyy-MM-dd HH:mm:ss'

    data := SmsData{
        ApiKey:       "YOUR_API_KEY",
        Text:         "Votre texte ici",
        PhoneNumbers: "06XXXXXXXX",
        //Lang:         &amp;lang,                  // Uncomment to use
        //SpeechRate:   &amp;speechRate,            // Uncomment to use
        //NotifyUrl:    &amp;notifyUrl,             // Uncomment to use
        //ScheduledDate: &amp;scheduledDate,        // Uncomment to use
    }

    payloadBytes, err := json.Marshal(data)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    body := bytes.NewReader(payloadBytes)

    req, err := http.NewRequest("POST", url, body)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    req.Header.Set("Content-Type", "application/json")

    resp, err := http.DefaultClient.Do(req)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    defer resp.Body.Close()

    respBody, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }

    fmt.Printf("Response: %s
", string(respBody))
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using Newtonsoft.Json;
using System.Text;

public class EnvoyerSmsVocal
{
    public static async Task Main()
    {
        var url = "http://api.voicepartner.fr/v1/tts/send";
        //var scheduledDate = "2024-04-12 10:30:00"; // Format 'yyyy-MM-dd HH:mm:ss'

        var data = new
        {
            apiKey = "YOUR_API_KEY",
            text = "Votre texte ici",
            phoneNumbers = "06XXXXXXXX",
            // Ajoutez d'autres paramètres optionnels si nécessaire
            //speechRate = 1.0, // La vitesse par défaut est 1
            //notifyUrl = "https://yourdomain.com/notify",
            //scheduledDate
        };

        using (var client = new HttpClient())
        {
            try
            {
                var json = JsonConvert.SerializeObject(data);
                var content = new StringContent(json, Encoding.UTF8, "application/json");
                var response = await client.PostAsync(url, content);
                var responseContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine("Response: " + responseContent);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error: " + ex.Message);
            }
        }
    }
}
  </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"campaignId"</span>: <span class="hljs-string">"Ff1tbu0lax"</span>,
    <span class="hljs-attr">"cost"</span>: xxx,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>,
    <span class="hljs-attr">"nbSms"</span>: <span class="hljs-number">1</span>,
    <span class="hljs-attr">"lang"</span>: <span class="hljs-string">"en"</span>,
    <span class="hljs-attr">"duration"</span>: <span class="hljs-number">6.3</span>,
    <span class="hljs-attr">"detail"</span>: {
        <span class="hljs-attr">"33"</span>: {
            <span class="hljs-attr">"nbSms"</span>: <span class="hljs-number">1</span>,
            <span class="hljs-attr">"cost_unity"</span>: xxx,
            <span class="hljs-attr">"cost"</span>: xxx,
            <span class="hljs-attr">"country_code"</span>: <span class="hljs-string">"fr"</span>,
            <span class="hljs-attr">"duration"</span>: <span class="hljs-number">6.3</span>
        }
    }
}</code></pre>
<h2 id="exemple">Exemple</h2>
<pre><code class="language-bash hljs bash">curl -X POST 
  http://api.voicepartner.fr/v1/tts/send 
  -H <span class="hljs-string">'Content-Type: application/json'</span> 
  -H <span class="hljs-string">'cache-control: no-cache'</span> 
  -d <span class="hljs-string">'{
"apiKey":"YOUR-API-KEY",
"phoneNumbers":"06XXXXXXXX",
"speed":"1",
"text":"Mon premier test",
"notifyUrl":"http://..."
}'</span></code></pre>]]>
    </content>
    <link href="http://localhost:8000/docs/voix/sms-vocaux/sms_vocauxp1/" rel="alternate" type="text/html" />
    <published>2024-07-31T14:04:24+00:00</published>
    <updated>2024-07-31T14:04:24+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/gestion-des-erreurs/erreurp1/</id>
    <title>Code d’erreurs</title>
    <content type="html">
      <![CDATA[<h1 id="codes-erreurs-api">Codes erreurs API</h1>
<p>Vous trouverez ci dessous, les codes erreurs pour l’API SMS :</p>
<ul>
<li>Envoi de SMS</li>
<li>Annulation des SMS</li>
<li>Récupération des statuts</li>
<li>Liste des statuts</li>
<li>Codes erreurs des statuts</li>
<li>Vérification des numéros</li>
<li>Location</li>
<li>Sous-compte</li>
<li>Envoi de messages vocaux / VMS</li>
<li>Envoi des mails</li>
</ul>
<h2 id="envoi-de-sms">Envoi de SMS</h2>
<p>992 Sender non autorisé</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Codes</th>
<th>Message</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td>La clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td>Le champ phoneNumbers est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td>message introuvable</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td>Clef API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">11</td>
<td>Crédit insuffisant</td>
</tr>
<tr>
<td style="text-align: center;">13</td>
<td>Aucun prix par défaut n’a été trouvé pour les numéros suivant</td>
</tr>
<tr>
<td style="text-align: center;">14</td>
<td>Le numéro est dans la liste des STOP SMS</td>
</tr>
<tr>
<td style="text-align: center;">15</td>
<td>Le numéro est déjà présent dans la liste</td>
</tr>
<tr>
<td style="text-align: center;">20</td>
<td>Compte désactivé</td>
</tr>
<tr>
<td style="text-align: center;">22</td>
<td>SMS Marketing: L’heure d’envoi n’est pas valide, elle doit être comprise entre 8h et 22h.</td>
</tr>
<tr>
<td style="text-align: center;">23</td>
<td>SMS Marketing: La date […] n’est pas valide, L’envoi des sms n’est pas possible le dimanche et jours fériés.</td>
</tr>
<tr>
<td style="text-align: center;">30</td>
<td>Compte bloqué</td>
</tr>
<tr>
<td style="text-align: center;">40</td>
<td>L’accès à l’API est refusé</td>
</tr>
<tr>
<td style="text-align: center;">42</td>
<td>Le nombre de caractères pour un sms Low Cost est 160 caractères</td>
</tr>
<tr>
<td style="text-align: center;">43</td>
<td>Le message est requis</td>
</tr>
<tr>
<td style="text-align: center;">44</td>
<td>L’émetteur est invalide</td>
</tr>
<tr>
<td style="text-align: center;">45</td>
<td>La date est requise</td>
</tr>
<tr>
<td style="text-align: center;">46</td>
<td>L’heure est requise</td>
</tr>
<tr>
<td style="text-align: center;">47</td>
<td>Le chiffre des minutes est invalide</td>
</tr>
<tr>
<td style="text-align: center;">48</td>
<td>Les minutes doivent-être comprise entre 5 et 55 dans un interval de 5 minutes</td>
</tr>
<tr>
<td style="text-align: center;">49</td>
<td>La date est invalide</td>
</tr>
<tr>
<td style="text-align: center;">50</td>
<td>Le nombre de numéros autorisés est de 500 maxi</td>
</tr>
<tr>
<td style="text-align: center;">51</td>
<td>La gamme lowcost n’est pas éligible</td>
</tr>
<tr>
<td style="text-align: center;">52</td>
<td>Le nombre de SMS concaténés ne peut excéder 10 SMS</td>
</tr>
<tr>
<td style="text-align: center;">55</td>
<td>Aucun numéro à envoyer</td>
</tr>
<tr>
<td style="text-align: center;">90</td>
<td>Le JSON est malformé: erreur de syntaxe</td>
</tr>
<tr>
<td style="text-align: center;">96</td>
<td>L’IP n’est pas autorisée</td>
</tr>
<tr>
<td style="text-align: center;">500</td>
<td>Problème lors de l’ajout du sms dans la file d’attente</td>
</tr>
</tbody>
</table>
<h2 id="annulation-des-sms">Annulation des SMS</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Codes</th>
<th>Message</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">2</td>
<td>Le champ phoneNumber est requis</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td>Le champ MessageId est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td>Ce message est introuvable</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td>La liste des numéros est vide</td>
</tr>
<tr>
<td style="text-align: center;">6</td>
<td>Le format n’est pas correct</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td>Ne semble pas être un numéro de mobile</td>
</tr>
<tr>
<td style="text-align: center;">50</td>
<td>Le nombre de numéros autorisés est de 500 maxi</td>
</tr>
<tr>
<td style="text-align: center;">96</td>
<td>L’IP n’est pas autorisée</td>
</tr>
</tbody>
</table>
<h2 id="recuperation-des-statuts">Récupération des statuts</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Codes</th>
<th>Message</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">2</td>
<td>Le champ phoneNumber est requis</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td>Le champ MessageId est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td>Ce message est introuvable</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td>La liste des numéros est vide</td>
</tr>
<tr>
<td style="text-align: center;">6</td>
<td>Le format n’est pas correct</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td>Ne semble pas être un numéro de mobile</td>
</tr>
<tr>
<td style="text-align: center;">50</td>
<td>Le nombre de numéros autorisés est de 500 maxi</td>
</tr>
<tr>
<td style="text-align: center;">96</td>
<td>L’IP n’est pas autorisée</td>
</tr>
</tbody>
</table>
<h2 id="liste-des-statuts">Liste des statuts</h2>
<table>
<thead>
<tr>
<th>Codes</th>
<th>Message</th>
</tr>
</thead>
<tbody>
<tr>
<td>delivered</td>
<td>Le SMS a été délivré</td>
</tr>
<tr>
<td>not delivered</td>
<td>Le SMS n’a pas été délivré</td>
</tr>
<tr>
<td>waiting</td>
<td>Le SMS a été envoyé, en attente chez l’opérateur</td>
</tr>
<tr>
<td>ko</td>
<td>Le SMS n’a pas été envoyé, un problème est survenu veuillez contacter le SAV</td>
</tr>
</tbody>
</table>
<h2 id="codes-erreurs-des-statuts">Codes erreurs des statuts</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Statuts SMS</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">DELIVRD</mark></td>
<td>Le message a été traité et livré avec succès.</td>
</tr>
<tr>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">PENDING</mark></td>
<td>Le message a été traité et envoyé à l'instance suivante. Le rapport de livraison n'a pas encore été reçu et est attendu, le statut est toujours en attente.</td>
</tr>
<tr>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">UNDELIV</mark></td>
<td>Le message a été envoyé à l'opérateur, mais n'a pas pu être livré, car un accusé de réception avec le statut « UNDELIV » été annulé par l'opérateur.</td>
</tr>
<tr>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">ACCEPTD</mark></td>
<td>Le SMS a été accepté et sera envoyé.</td>
</tr>
<tr>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">UNKNOWN</mark></td>
<td>Une erreur inconnue s'est produite.</td>
</tr>
<tr>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">ENROUTE</mark></td>
<td>Le message est en route.</td>
</tr>
<tr>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EXPIRED</mark></td>
<td>Le message a été envoyé et a expiré en raison d'un dépassement de sa période de validité (notre plate-forme par défaut est de 48 heures), ou l'opérateur a renvoyé EXPIRED comme statut final.</td>
</tr>
<tr>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">REJECTD</mark></td>
<td>Le message a été envoyé, mais il a été rejeté par l'opérateur et a renvoyé REJECTD comme statut final</td>
</tr>
</tbody>
</table>
<h2 id="verification-des-numeros">Vérification des numéros</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Codes</th>
<th>Message</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">2</td>
<td>Le champ phoneNumber est requis</td>
</tr>
<tr>
<td style="text-align: center;">11</td>
<td>Crédit insuffisant</td>
</tr>
<tr>
<td style="text-align: center;">13</td>
<td>Aucun prix par défaut n'a été trouvé vers cette destination</td>
</tr>
<tr>
<td style="text-align: center;">14</td>
<td>Le numéro est dans la liste des STOP SMS</td>
</tr>
<tr>
<td style="text-align: center;">19</td>
<td>Les numéros doivent-être séparés par une virgule</td>
</tr>
<tr>
<td style="text-align: center;">50</td>
<td>Le nombre de numéros autorisés est de 500 maxi</td>
</tr>
<tr>
<td style="text-align: center;">55</td>
<td>Aucun numéro à envoyer</td>
</tr>
<tr>
<td style="text-align: center;">96</td>
<td>L'IP n'est pas autorisée</td>
</tr>
</tbody>
</table>
<h2 id="location">Location</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Codes</th>
<th>Message</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">3</td>
<td>Le paramètre parameters est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td>Le paramètre op est requis</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td>Le paramètre urlNotification n'est pas une URL valide</td>
</tr>
<tr>
<td style="text-align: center;">6</td>
<td>Cette opération n'est pas autorisé</td>
</tr>
<tr>
<td style="text-align: center;">7</td>
<td>Le paramètre sexe est requis</td>
</tr>
<tr>
<td style="text-align: center;">8</td>
<td>Le paramètre sexe doit être uniquement m,h or f</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td>Le paramètre minAge est requis</td>
</tr>
<tr>
<td style="text-align: center;">11</td>
<td>Crédit insuffisant</td>
</tr>
<tr>
<td style="text-align: center;">12</td>
<td>Le paramètre minAge doit être supérieur à 17</td>
</tr>
<tr>
<td style="text-align: center;">13</td>
<td>Le paramètre maxAge est requis</td>
</tr>
<tr>
<td style="text-align: center;">14</td>
<td>Le paramètre maxAge doit être inférieur à 99</td>
</tr>
<tr>
<td style="text-align: center;">15</td>
<td>Le paramètre interest doit être supérieur à 0</td>
</tr>
<tr>
<td style="text-align: center;">16</td>
<td>Le paramètre interest ne peut pas être vide</td>
</tr>
<tr>
<td style="text-align: center;">17</td>
<td>Le paramètre subInterest ne doit pas être vide</td>
</tr>
<tr>
<td style="text-align: center;">18</td>
<td>Le paramètre subInterest doit être supérieur à 0</td>
</tr>
<tr>
<td style="text-align: center;">19</td>
<td>Les paramètres interest ou subInterest sont requis</td>
</tr>
<tr>
<td style="text-align: center;">22</td>
<td>Le paramètre category ne doit pas être vide</td>
</tr>
<tr>
<td style="text-align: center;">23</td>
<td>Le paramètre category doit être supérieur à 0</td>
</tr>
<tr>
<td style="text-align: center;">24</td>
<td>Les paramètres Type est requis</td>
</tr>
<tr>
<td style="text-align: center;">25</td>
<td>Le paramètre Localite est requis</td>
</tr>
<tr>
<td style="text-align: center;">26</td>
<td>Le paramètre Volume est requis</td>
</tr>
<tr>
<td style="text-align: center;">27</td>
<td>Le volume souhaité ne peut pas être supérieur au volume disponible</td>
</tr>
<tr>
<td style="text-align: center;">28</td>
<td>Le paramètre DesiredVolume ne peux pas être supérieur au volume total</td>
</tr>
<tr>
<td style="text-align: center;">31</td>
<td>Le paramètre token est requis</td>
</tr>
<tr>
<td style="text-align: center;">32</td>
<td>La demande de location est introuvable</td>
</tr>
<tr>
<td style="text-align: center;">33</td>
<td>Le fichier de location est introuvable</td>
</tr>
<tr>
<td style="text-align: center;">34</td>
<td>Le fichier de location a déjà été utilisé</td>
</tr>
<tr>
<td style="text-align: center;">35</td>
<td>Le fichier de location est en cours de téléchargement</td>
</tr>
<tr>
<td style="text-align: center;">36</td>
<td>La location du fichier a échoué</td>
</tr>
<tr>
<td style="text-align: center;">61</td>
<td>La requête semble invalide et n'a retourné aucun résultat</td>
</tr>
<tr>
<td style="text-align: center;">96</td>
<td>L'IP n'est pas autorisée</td>
</tr>
</tbody>
</table>
<h2 id="sous-compte">Sous-compte</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Codes</th>
<th>Message</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">2</td>
<td>Vous n'êtes pas autorisé à créer des sous-comptes</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td>Le champ Credit est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td>Le champ tokenSubaccount est requis</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td>Le champ credit doit être supérieur à 0</td>
</tr>
<tr>
<td style="text-align: center;">6</td>
<td>Le sous-compte est introuvable</td>
</tr>
<tr>
<td style="text-align: center;">7</td>
<td>Crédit insuffisant pour le sous-compte</td>
</tr>
<tr>
<td style="text-align: center;">11</td>
<td>Crédit insuffisant</td>
</tr>
<tr>
<td style="text-align: center;">96</td>
<td>L'IP n'est pas autorisée</td>
</tr>
</tbody>
</table>
<h2 id="hlr">HLR</h2>
<h3 id="code-des-status-pending-statusgrpid-1">Code des status: PENDING (statusGrpId: 1)</h3>
<p>Le message a été traité et envoyé à l'opérateur mobile.</p>
<table>
<thead>
<tr>
<th style="text-align: center;">statusId</th>
<th style="text-align: center;">Status</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">3</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">PENDING_WAITING_DELIVERY</mark></td>
<td>Le message a été traité et envoyé. Le rapport de livraison n'a pas encore été reçu et est attendu, donc le statut est toujours en attente.</td>
</tr>
<tr>
<td style="text-align: center;">7</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">PENDING_ENROUTE</mark></td>
<td>Le message a été traité et envoyé à l'opérateur mobile.</td>
</tr>
<tr>
<td style="text-align: center;">26</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">PENDING_ACCEPTED</mark></td>
<td>Le message a été accepté et traité, et est prêt à être envoyé à l'opérateur.</td>
</tr>
</tbody>
</table>
<h3 id="undeliverable-statusgrpid-2">UNDELIVERABLE (statusGrpId: 2)</h3>
<p>Le message n'a pas été délivré.</p>
<table>
<thead>
<tr>
<th style="text-align: center;">statusId</th>
<th style="text-align: center;">Status</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">4</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">UNDELIVERABLE_REJECTED_OPERATOR</mark></td>
<td>Un message a été envoyé à l'opérateur, un rapport de livraison avec le statut &quot;REJECTED&quot; a été retourné.</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">UNDELIVERABLE_NOT_DELIVERED</mark></td>
<td>Le message a été envoyé à l'opérateur, mais n'a pas pu être livré, un rapport de livraison avec le statut &quot;UNDELIVERED&quot; a été renvoyé par l'opérateur.</td>
</tr>
</tbody>
</table>
<h3 id="delivered-statusgrpid-3">DELIVERED (statusGrpId: 3)</h3>
<p>Le message a été traité et délivré avec succès.</p>
<table>
<thead>
<tr>
<th style="text-align: center;">statusId</th>
<th style="text-align: center;">Status</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">DELIVERED_TO_OPERATOR</mark></td>
<td>Le message a été envoyé et livré avec succès à l'opérateur.</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">DELIVERED_TO_HANDSET</mark></td>
<td>Le message a été traité et remis au destinataire avec succès.</td>
</tr>
</tbody>
</table>
<h3 id="expired-statusgrpid-4">EXPIRED (statusGrpId: 4)</h3>
<p>Le message a été envoyé et a expiré soit parce qu'il était en attente au-delà de sa période de validité (notre plate-forme est configurée par défaut sur 48 heures), soit parce que le rapport de livraison de l'opérateur a rétabli le statut &quot;EXPIRED&quot; comme statut final.</p>
<table>
<thead>
<tr>
<th style="text-align: center;">statusId</th>
<th style="text-align: center;">Status</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">15</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EXPIRED_EXPIRED</mark></td>
<td>Le message a été reçu et envoyé à l'opérateur. Toutefois, il est resté en attente jusqu'à l'expiration de la période de validité ou jusqu'à ce que l'opérateur ait renvoyé le statut EXPIRED.</td>
</tr>
<tr>
<td style="text-align: center;">29</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EXPIRED_DLR_UNKNOWN</mark></td>
<td>Le message a été reçu et transmis à l'opérateur pour livraison. Toutefois, le rapport de livraison de l'opérateur n'a pas été formaté correctement ou n'a pas été reconnu comme valable.</td>
</tr>
</tbody>
</table>
<h3 id="rejected-statusgrpid-5">REJECTED (statusGrpId: 5)</h3>
<p>Le message a été reçu mais a été rejeté l'opérateur.</p>
<table>
<thead>
<tr>
<th style="text-align: center;">statusId</th>
<th style="text-align: center;">Status</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">6</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">REJECTED_NETWORK</mark></td>
<td>Le message a été reçu, mais le réseau est hors de notre couverture.</td>
</tr>
<tr>
<td style="text-align: center;">8</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">REJECTED_PREFIX_MISSING</mark></td>
<td>Le message a été reçu mais a été rejeté car le numéro n'est pas reconnu en raison d'un préfixe ou d'une longueur de numéro incorrecte. Ces informations sont différentes pour chaque réseau et sont régulièrement mises à jour.</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">REJECTED_DND</mark></td>
<td>Le message a été reçu et rejeté parce que l'utilisateur est abonné aux services DND (Ne pas déranger), ce qui désactive tout trafic de service vers son numéro.</td>
</tr>
<tr>
<td style="text-align: center;">11</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">REJECTED_SOURCE</mark></td>
<td>Votre compte est configuré pour n'accepter que les ID d'expéditeur enregistrés alors que l'ID d'expéditeur défini dans la demande n'a pas été enregistré sur votre compte.</td>
</tr>
<tr>
<td style="text-align: center;">21</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">REJECTED_SYSTEM_ERROR</mark></td>
<td>La demande a été rejetée en raison d'une erreur de système, veuillez réessayer la soumission ou contacter notre équipe de support technique pour plus de détails.</td>
</tr>
<tr>
<td style="text-align: center;">52</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">REJECTED_DESTINATION</mark></td>
<td>La demande a été reçue, mais la destination n'est pas valide – le préfixe du numéro n'est pas correct car il ne correspond à un préfixe valide d'aucun opérateur de téléphonie mobile. La longueur du numéro est également prise en considération pour vérifier la validité du numéro.</td>
</tr>
</tbody>
</table>
<h2 id="code-des-erreurs-hlr">Code des erreurs (HLR)</h2>
<h3 id="ok-errorgrpid-0">OK (errorGrpId: 0)</h3>
<p>La demande a été traitée avec succès.</p>
<table>
<thead>
<tr>
<th>errorId</th>
<th>Permanent</th>
<th>Error</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>false</td>
<td><mark style="background-color: #a8d3fb;">NO_ERROR</mark></td>
<td>Aucune description d'erreur n'est fournie. Généralement renvoyé pour livraison réussie ou lorsque le code d'erreur n'a pas été renvoyé par l'opérateur.</td>
</tr>
</tbody>
</table>
<h3 id="handset-errors-errorgrpid-1">HANDSET_ERRORS (errorGrpId: 1)</h3>
<p>La demande n'a pas été complétée en raison de problèmes liés au téléphone portable.</p>
<table>
<thead>
<tr>
<th style="text-align: center;">errorId</th>
<th style="text-align: center;">Permanent</th>
<th style="text-align: center;">Error</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_UNKNOWN_SUBSCRIBER</mark></td>
<td>Le numéro n'existe pas ou n'a pas été attribué à un abonné actif dans la base de données des utilisateurs de l'opérateur.</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_UNIDENTIFIED_SUBSCRIBER</mark></td>
<td>Abonné non identifié</td>
</tr>
<tr>
<td style="text-align: center;">6</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_ABSENT_SUBSCRIBER_SM</mark></td>
<td>L'abonné est détecté comme étant indisponible, car il n'y a pas eu de réponse à la radiomessagerie du combiné. Cela est souvent dû au fait que le combiné est éteint ou se trouve dans une zone de faible signal. S'applique à la version 3 du protocole MAP.</td>
</tr>
<tr>
<td style="text-align: center;">7</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_UNKNOWN_EQUIPMENT</mark></td>
<td>L'appareil mobile n'a pas été reconnu par l'EIR (Equipment Identity Register), lors de la vérification de l'appareil au niveau du protocole MAP sur l'infrastructure de l'opérateur.</td>
</tr>
<tr>
<td style="text-align: center;">8</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_ROAMING_NOT_ALLOWED</mark></td>
<td>L'abonné est actuellement en itinérance dans un autre pays ou dans l'infrastructure d'un autre opérateur – la fourniture de l'itinérance n'est pas garantie en raison de l'absence d'accords d'itinérance entre de nombreux opérateurs différents.</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_ILLEGAL_SUBSCRIBER</mark></td>
<td>Abonné illégal</td>
</tr>
<tr>
<td style="text-align: center;">11</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_TELESERVICE_NOT_PROVISIONED</mark></td>
<td>Le service mobile de l'abonné a été suspendu par l'opérateur.</td>
</tr>
<tr>
<td style="text-align: center;">12</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_ILLEGAL_EQUIPMENT</mark></td>
<td>Équipement illégal</td>
</tr>
<tr>
<td style="text-align: center;">13</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_CALL_BARRED</mark></td>
<td>Le message est rejeté en raison de l'interdiction du service de messagerie, le blocage est fixé par l'opérateur ou l'abonné pour le numéro.</td>
</tr>
<tr>
<td style="text-align: center;">27</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_ABSENT_SUBSCRIBER</mark></td>
<td>L'abonné est hors ligne dans le réseau, comme le confirme la réponse du combiné à la radiomessagerie. Cela est souvent dû au fait que le combiné est éteint.</td>
</tr>
<tr>
<td style="text-align: center;">31</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SUBSCRIBER_BUSY_FOR_MT_SMS</mark></td>
<td>L'abonné est occupé pour Mt SMS</td>
</tr>
<tr>
<td style="text-align: center;">32</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SM_DELIVERY_FAILURE</mark></td>
<td>Échec de la livraison</td>
</tr>
<tr>
<td style="text-align: center;">33</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_MESSAGE_WAITING_LIST_FULL</mark></td>
<td>Liste d'attente des messages complète</td>
</tr>
<tr>
<td style="text-align: center;">34</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SYSTEM_FAILURE</mark></td>
<td>Défaillance du système</td>
</tr>
<tr>
<td style="text-align: center;">35</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_DATA_MISSING</mark></td>
<td>Données manquantes</td>
</tr>
<tr>
<td style="text-align: center;">36</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_UNEXPECTED_DATA_VALUE</mark></td>
<td>Valeur inattendue des données</td>
</tr>
<tr>
<td style="text-align: center;">255</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_UNKNOWN_ERROR</mark></td>
<td>Erreur inconnue</td>
</tr>
<tr>
<td style="text-align: center;">256</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SM_DF_MEMORYCAPACITYEXCEEDED</mark></td>
<td>Il y a eu une erreur d'équipement de l'abonné mobile, alors que la mémoire du combiné a été dépassée.</td>
</tr>
<tr>
<td style="text-align: center;">257</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SM_DF_EQUIPMENTPROTOCOLERROR</mark></td>
<td>Il y a eu une erreur dans l'équipement de l'abonné mobile.</td>
</tr>
<tr>
<td style="text-align: center;">258</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SM_DF_EQUIPMENTNOTSM_EQUIPPED</mark></td>
<td>Il y a eu une erreur dans l'équipement de l'abonné mobile.</td>
</tr>
<tr>
<td style="text-align: center;">259</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SM_DF_UNKNOWNSERVICECENTRE</mark></td>
<td>Il y a eu une erreur dans l'équipement de l'abonné mobile.</td>
</tr>
<tr>
<td style="text-align: center;">260</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SM_DF_SC_CONGESTION</mark></td>
<td>Il y a eu une erreur dans l'équipement de l'abonné mobile.</td>
</tr>
<tr>
<td style="text-align: center;">261</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SM_DF_INVALIDSME_ADDRESS</mark></td>
<td>Il y a eu une erreur dans l'équipement de l'abonné mobile.</td>
</tr>
<tr>
<td style="text-align: center;">262</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SM_DF_SUBSCRIBERNOTSC_SUBSCRIBER</mark></td>
<td>Il y a eu une erreur dans l'équipement de l'abonné mobile.</td>
</tr>
<tr>
<td style="text-align: center;">500</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_PROVIDER_GENERAL_ERROR</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">502</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_NO_RESPONSE</mark></td>
<td>Le message a été traité et transmis avec succès à l'opérateur, mais l'opérateur n'a pas répondu à la demande de soumission du message, ou l'erreur a été annulée par l'opérateur. L'erreur s'applique également à des erreurs similaires au niveau du réseau SS7.</td>
</tr>
<tr>
<td style="text-align: center;">503</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SERVICE_COMPLETION_FAILURE</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">504</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_UNEXPECTED_RESPONSE_FROM_PEER</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">507</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_MISTYPED_PARAMETER</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">508</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_NOT_SUPPORTED_SERVICE</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">509</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_DUPLICATED_INVOKE_ID</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1024</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_OR_APPCONTEXTNOTSUPPORTED</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1025</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_OR_INVALIDDESTINATIONREFERENCE</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1026</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_OR_INVALIDORIGINATINGREFERENCE</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1027</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_OR_ENCAPSULATEDAC_NOTSUPPORTED</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1028</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_OR_TRANSPORTPROTECTIONNOTADEQUATE</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1029</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_OR_NOREASONGIVEN</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1030</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_OR_POTENTIALVERSIONINCOMPATIBILITY</mark></td>
<td>Erreur générale de protocole de réseau, causée par des versions de protocole de réseau d'opérateur ou des paramètres incompatibles entre deux composants de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1031</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_OR_REMOTENODENOTREACHABLE</mark></td>
<td>L'abonné mobile n'était pas joignable en raison d'une erreur de protocole de l'opérateur de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1152</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_NNR_NOTRANSLATIONFORANADDRESSOFSUCHNATURE</mark></td>
<td>L'abonné mobile n'était pas joignable en raison d'une erreur de protocole de l'opérateur de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1153</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_NNR_NOTRANSLATIONFORTHISSPECIFICADDRESS</mark></td>
<td>Pas de traduction pour cette adresse spécifique.</td>
</tr>
<tr>
<td style="text-align: center;">1154</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_NNR_SUBSYSTEMCONGESTION</mark></td>
<td>L'abonné mobile n'était pas joignable en raison d'une erreur de protocole de l'opérateur de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1155</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_NNR_SUBSYSTEMFAILURE</mark></td>
<td>L'abonné mobile n'était pas joignable en raison d'une erreur de protocole de l'opérateur de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1156</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_NNR_UNEQUIPPEDUSER</mark></td>
<td>L'abonné mobile n'était pas joignable en raison d'une erreur de protocole de l'opérateur de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1157</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_NNR_MTPFAILURE</mark></td>
<td>L'abonné mobile n'était pas joignable en raison d'une erreur de protocole de l'opérateur de réseau.</td>
</tr>
<tr>
<td style="text-align: center;">1158</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_NNR_NETWORKCONGESTION</mark></td>
<td>L'abonné mobile n'était pas joignable en raison d'une erreur de protocole de l'opérateur de réseau.</td>
</tr>
</tbody>
</table>
<h3 id="user-errors-errorgrpid-2">USER_ERRORS (errorGrpId: 2)</h3>
<p>Une erreur d'utilisateur s'est produite.</p>
<table>
<thead>
<tr>
<th style="text-align: center;">errorId</th>
<th style="text-align: center;">Permanent</th>
<th style="text-align: center;">Error</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">2049</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_IMSI_BLACKLISTED</mark></td>
<td>IMSI sur liste noire.</td>
</tr>
<tr>
<td style="text-align: center;">2052</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_BLACKLISTED_DESTINATIONADDRESS</mark></td>
<td>Le numéro de destination a été mis sur liste noire soit à la demande de l'opérateur, soit sur votre compte via les portails web SMSPartner – veuillez supprimer la liste noire sur votre compte via portal.infobip.com ou contactez le support pour plus d'informations.</td>
</tr>
<tr>
<td style="text-align: center;">2053</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_BLACKLISTED_SENDERADDRESS</mark></td>
<td>Le numéro de l'expéditeur a été mis sur liste noire soit à la demande de l'opérateur, soit sur votre compte via les portails web SMSPartner – veuillez supprimer la liste noire sur votre compte via portal.infobip.com ou contactez le support pour plus d'informations.</td>
</tr>
<tr>
<td style="text-align: center;">2053</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SOURCE_ADDRESS_BLACKLISTED</mark></td>
<td>L'adresse source est sur la liste noire du compte SMSPartner.</td>
</tr>
<tr>
<td style="text-align: center;">4096</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_INVALID_PDU_FORMAT</mark></td>
<td>Format PDU non valide.</td>
</tr>
<tr>
<td style="text-align: center;">4100</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_MESSAGE_CANCELED</mark></td>
<td>La demande a été reçue, mais n'a pas été envoyée à l'instance suivante pendant sa période de validité, et est expirée avec le code d'erreur approprié EC_MESSAGE_CANCELED, ou le même code d'erreur a été renvoyé par l'opérateur.</td>
</tr>
<tr>
<td style="text-align: center;">4101</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_VALIDITYEXPIRED</mark></td>
<td>Le message a été envoyé à l'instance suivante, et n'a pas été délivré dans la période de validité du message, il est donc expiré avec le code d'erreur approprié EC_VALIDITYEXPIRED ou le code d'erreur a été renvoyé par l'opérateur.</td>
</tr>
<tr>
<td style="text-align: center;">4102</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_NOTSUBMITTEDTOSMPPCHANNEL</mark></td>
<td>Ne peut pas être transférée via le SMPP en raison de l'absence de conectivité du SMPP.</td>
</tr>
<tr>
<td style="text-align: center;">4103</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_DESTINATION_FLOODING</mark></td>
<td>En ce qui concerne le statut REJECTED_FLOODING_FILTER, le message est rejeté en raison du nombre de messages envoyés à un seul numéro.</td>
</tr>
<tr>
<td style="text-align: center;">4104</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_DESTINATION_TXT_FLOODING</mark></td>
<td>En ce qui concerne le statut REJECTED_FLOODING_FILTER, le message est rejeté en raison du nombre de messages identiques envoyés à un seul numéro.</td>
</tr>
</tbody>
</table>
<h3 id="operator-errors-errorgrpid-3">OPERATOR_ERRORS (errorGrpId: 3)</h3>
<p>La demande n'a pas été complétée en raison de problèmes liés à l'opérateur.</p>
<table>
<thead>
<tr>
<th style="text-align: center;">errorId</th>
<th style="text-align: center;">Permanent</th>
<th style="text-align: center;">Error</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_BEARER_SERVICE_NOT_PROVISIONED</mark></td>
<td>Service au porteur non fourni.</td>
</tr>
<tr>
<td style="text-align: center;">20</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_SS_INCOMPATIBILITY</mark></td>
<td>Incompatibilité SS.</td>
</tr>
<tr>
<td style="text-align: center;">51</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_RESOURCE_LIMITATION</mark></td>
<td>Indique que l'opération MAP invoquée n'a pas pu être terminée en raison de la congestion du réseau – il s'agit d'une erreur de congestion du réseau SS7 au niveau du protocole MAP.</td>
</tr>
<tr>
<td style="text-align: center;">71</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_UNKNOWN_ALPHABET</mark></td>
<td>Alphabet inconnu.</td>
</tr>
<tr>
<td style="text-align: center;">501</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_INVALID_RESPONSE_RECEIVED</mark></td>
<td>Réception d'une réponse non valable.</td>
</tr>
<tr>
<td style="text-align: center;">2048</td>
<td style="text-align: center;">false</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_TIME_OUT</mark></td>
<td>Time Out.</td>
</tr>
<tr>
<td style="text-align: center;">2050</td>
<td style="text-align: center;">true</td>
<td style="text-align: center;"><mark style="background-color: #a8d3fb;">EC_DEST_ADDRESS_BLACKLISTED</mark></td>
<td>Le numéro a été trouvé sur la liste noire du DND (Do Not Disturb) fournie par l'opérateur, ou le même code d'erreur a été retourné par l'opérateur.</td>
</tr>
</tbody>
</table>
<h2 id="envoi-de-messages-vocaux-vms">Envoi de messages vocaux / VMS</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Codes</th>
<th>Message</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">PHONE_NUMBER_REQUIRED</td>
<td>Le numéro de téléphone est requis</td>
</tr>
<tr>
<td style="text-align: center;">PHONE_NUMBER_SIZE_ERROR</td>
<td>Le nombre de numéros est supérieur à 500</td>
</tr>
<tr>
<td style="text-align: center;">TOKEN_AUDIO_REQUIRED</td>
<td>Le token de l’audio est requis</td>
</tr>
<tr>
<td style="text-align: center;">NOTIFY_URL_INVALID</td>
<td>L’url de notification est invalide</td>
</tr>
<tr>
<td style="text-align: center;">SENDER_NOT_AUTHORIZED</td>
<td>Le sender n’est pas autorisé</td>
</tr>
<tr>
<td style="text-align: center;">SENDER_INVALID</td>
<td>Le sender est invalide</td>
</tr>
<tr>
<td style="text-align: center;">AUDIO_FILE_NOT_FOUND</td>
<td>Le fichier audio est introuvable</td>
</tr>
<tr>
<td style="text-align: center;">DESTINATION_INVALID</td>
<td>Le numéro de téléphone n’est pas autorisé</td>
</tr>
<tr>
<td style="text-align: center;">NOT_CREDIT</td>
<td>Crédit insuffisant</td>
</tr>
</tbody>
</table>
<h2 id="envoi-de-mail">Envoi de Mail</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Codes</th>
<th>Message</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td>La clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td>Le contenu du mail est requis</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td>La clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td>Le sender email est requis</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td>Le sender name ne peut-être vide</td>
</tr>
<tr>
<td style="text-align: center;">8</td>
<td>L’URL de la pièce jointe est requise</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td>L’extension de la pièce jointe n’est pas autorisée</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td>Clef API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">11</td>
<td>Crédit insuffisant</td>
</tr>
<tr>
<td style="text-align: center;">14</td>
<td>Le mail est dans la liste des désinscriptions</td>
</tr>
<tr>
<td style="text-align: center;">15</td>
<td>Le mail est déjà dans la liste d’envoi</td>
</tr>
<tr>
<td style="text-align: center;">16</td>
<td>Le nom de la pièce jointe ne peut-être vide</td>
</tr>
<tr>
<td style="text-align: center;">17</td>
<td>Nombre de destinataires maximum dépassé</td>
</tr>
<tr>
<td style="text-align: center;">18</td>
<td>L’email du destinataire est requis</td>
</tr>
<tr>
<td style="text-align: center;">19</td>
<td>L’email du destinataire semble invalide</td>
</tr>
<tr>
<td style="text-align: center;">20</td>
<td>Compte désactivé</td>
</tr>
<tr>
<td style="text-align: center;">21</td>
<td>Le nom du destinataire ne peut-être vide</td>
</tr>
<tr>
<td style="text-align: center;">22</td>
<td>La liste des destinataires est requise</td>
</tr>
<tr>
<td style="text-align: center;">23</td>
<td>L’email du destinataire en réponse est requis</td>
</tr>
<tr>
<td style="text-align: center;">24</td>
<td>L’email du destinataire en réponse semble invalide</td>
</tr>
<tr>
<td style="text-align: center;">25</td>
<td>Le nom du destinataire en réponse ne peut-être vide</td>
</tr>
<tr>
<td style="text-align: center;">30</td>
<td>Compte bloqué</td>
</tr>
<tr>
<td style="text-align: center;">40</td>
<td>L’accès à l’API est refusé</td>
</tr>
<tr>
<td style="text-align: center;">45</td>
<td>La date est requise</td>
</tr>
<tr>
<td style="text-align: center;">46</td>
<td>L’heure est requise</td>
</tr>
<tr>
<td style="text-align: center;">47</td>
<td>Le chiffre des minutes est invalide</td>
</tr>
<tr>
<td style="text-align: center;">48</td>
<td>Les minutes doivent-être comprises entre 5 et 55 dans un intervalle de 5 minutes</td>
</tr>
<tr>
<td style="text-align: center;">49</td>
<td>La date est invalide</td>
</tr>
<tr>
<td style="text-align: center;">50</td>
<td>Le nombre de mails autorisés est de 500 maxi</td>
</tr>
<tr>
<td style="text-align: center;">55</td>
<td>Aucun prix par défaut n’a été trouvé</td>
</tr>
<tr>
<td style="text-align: center;">90</td>
<td>Le JSON est malformé: erreur de syntaxe</td>
</tr>
<tr>
<td style="text-align: center;">96</td>
<td>L’IP n’est pas autorisée</td>
</tr>
<tr>
<td style="text-align: center;">429</td>
<td>Trop de requêtes effectuées en une minute (limite : 2000 requêtes / minute / Adresse IP)</td>
</tr>
<tr>
<td style="text-align: center;">500</td>
<td>Problème lors de l’ajout du mail dans la file d’attente</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/gestion-des-erreurs/erreurp1/" rel="alternate" type="text/html" />
    <published>2024-07-31T13:21:39+00:00</published>
    <updated>2024-07-31T13:21:39+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/voix/message-vocal/message_vocalp2/</id>
    <title>Renommer un fichier audio</title>
    <content type="html">
      <![CDATA[<h1 id="renommer-un-fichier-audio">Renommer un fichier audio</h1>
<p>Récupére la liste des fichiers audios ajoutés et validés</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;"> https://api.voicepartner.fr/v1/audio-file/rename</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://www.voicepartner.fr" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte Voice Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;">tokenAudio</td>
<td>Identifiant du fichier audio</td>
</tr>
<tr>
<td style="text-align: center;">filename</td>
<td>Nouveau nom du fichier compris entre 3 et 50 caractères</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 

// L'URL de l'API où vous voulez envoyer la requête
$url = 'https://api.voicepartner.fr/v1/audio-file/rename';

// Les données que vous souhaitez envoyer en JSON
$data = array(
    'apiKey' =&gt; 'YOUR_API_KEY',
    'tokenAudio' =&gt; 'TOKEN_DU_FICHIER_AUDIO',
    'filename' =&gt; 'Nom du fichier'
);

// Encodage des données en JSON
$data_json = json_encode($data);

// Initialisation de cURL
$curl = curl_init($url);

// Configuration des options de cURL pour envoyer du JSON
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_json);
curl_setopt($curl, CURLOPT_HTTPHEADER, array(
    'Content-Type: application/json',
    'Content-Length: ' . strlen($data_json)
));

// Exécution de la requête cURL et enregistrement de la réponse
$response = curl_exec($curl);

// Fermeture de la session cURL
curl_close($curl);

// Affichage de la réponse
echo $response;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.Net.Http
Imports System.Text
Imports Newtonsoft.Json

Public Class RenommerFichierAudio
    Private ReadOnly _url As String = "https://api.voicepartner.fr/v1/audio-file/rename"
    Private ReadOnly _apiKey As String = "YOUR_API_KEY"
    Private ReadOnly _tokenAudio As String = "YOUR_TOKEN_AUDIO"
    Private ReadOnly _filename As String = "YOUR_FILE_NAME"

    Public Async Function RenameAudioFile() As Task
        Dim httpClient As New HttpClient()

        Dim data As New With {
            .apiKey = _apiKey,
            .tokenAudio = _tokenAudio,
            .filename = _filename
        }

        Dim jsonContent As String = JsonConvert.SerializeObject(data)
        Using content As New StringContent(jsonContent, Encoding.UTF8, "application/json")
            Try
                Dim response As HttpResponseMessage = Await httpClient.PostAsync(_url, content)
                If response.IsSuccessStatusCode Then
                    Dim responseContent As String = Await response.Content.ReadAsStringAsync()
                    Console.WriteLine(responseContent)
                Else
                    Console.WriteLine("Error: " &amp; response.StatusCode)
                End If
            Catch ex As Exception
                Console.WriteLine("Erreur lors de la requête: " &amp; ex.Message)
            End Try
        End Using
    End Function

End Class
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
import requests
import json

# L'URL de l'API où vous voulez envoyer la requête
url = 'https://api.voicepartner.fr/v1/audio-file/rename'

# Les données que vous souhaitez envoyer en JSON
data = {
    'apiKey': 'YOUR_API_KEY',
    'tokenAudio': 'TOKEN_DU_FICHIER_AUDIO',
    'filename': 'Nom du fichier'
}

# Encodage des données en JSON
data_json = json.dumps(data)

# Envoi de la requête POST avec les données JSON
headers = {
    'Content-Type': 'application/json'
}
response = requests.post(url, data=data_json, headers=headers)

# Affichage de la réponse
print(response.text)

   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -Method Post -Uri "https://api.voicepartner.fr/v1/audio-file/rename" 
-Headers @{"Content-Type"="application/json"} -Body 
'{"apiKey": "YOUR_API_KEY", "tokenAudio": "TOKEN_DU_FICHIER_AUDIO", 
"filename": "Nom du fichier"}'
 </code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
     <pre><code class="language-javascript">
    <!-- NodeJS code example goes here -->

const axios = require('axios');

// L'URL de l'API pour renommer un fichier audio
const url = 'https://api.voicepartner.fr/v1/audio-file/rename';

// Les données à envoyer en JSON
const data = {
    apiKey: 'YOUR_API_KEY',
    tokenAudio: 'TOKEN_DU_FICHIER_AUDIO',
    filename: 'Nom du fichier'
};

axios.post(url, data)
    .then(response =&gt; {
        console.log(response.data);
    })
    .catch(error =&gt; {
        console.error('Erreur lors de la requête:', error);
    });

        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
package com.example.API;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse.BodyHandlers;

public class RenommerFichierAudio {

    public static void main(String[] args) {
        // L'URL de l'API pour renommer un fichier audio
        String url = "https://api.voicepartner.fr/v1/audio-file/rename";

        // Vos données d'authentification et les informations du fichier
        String apiKey = "VOTRE_CLE_API";
        String tokenAudio = "VOTRE_TOKEN_AUDIO";
        String nouveauNom = "NouveauNomFichier";

        // Les données à envoyer en JSON
        String json = String.format(
                "{"apiKey":"%s","tokenAudio":"%s","filename":"%s"}",
                apiKey, tokenAudio, nouveauNom);

        // Créer une instance de HttpClient
        HttpClient client = HttpClient.newHttpClient();

        // Construire la requête
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(url))
                .header("Content-Type", "application/json")
                .POST(BodyPublishers.ofString(json))
                .build();

        // Envoyer la requête de manière asynchrone
        client.sendAsync(request, BodyHandlers.ofString())
                .thenApply(HttpResponse::body)
                .thenAccept(System.out::println)
                .exceptionally(e -&gt; {
                    System.out.println("Erreur lors de la requête: " + e.getMessage());
                    return null;
                })
                .join(); // Attendre la fin de l'opération asynchrone
    }
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
package main

import (
    "bytes"
    "encoding/json"
    "fmt"
    "io/ioutil"
    "net/http"
)

type RenameData struct {
    ApiKey     string `json:"apiKey"`
    TokenAudio string `json:"tokenAudio"`
    Filename   string `json:"filename"`
}

func main() {
    url := "https://api.voicepartner.fr/v1/audio-file/rename"
    data := RenameData{
        ApiKey:     "YOUR_API_KEY",
        TokenAudio: "TOKEN_DU_FICHIER_AUDIO",
        Filename:   "Nom du fichier",
    }

    payloadBytes, err := json.Marshal(data)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    body := bytes.NewReader(payloadBytes)

    req, err := http.NewRequest("POST", url, body)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    req.Header.Set("Content-Type", "application/json")

    resp, err := http.DefaultClient.Do(req)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    defer resp.Body.Close()

    respBody, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }

    fmt.Printf("Response: %s
", string(respBody))
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace API.ApiClients
{
    public class RenommerFichierAudio
    {
        public static async Task Main()
        {
            var url = "https://api.voicepartner.fr/v1/audio-file/rename";
            var data = new
            {
                apiKey = "YOUR_API_KEY",
                tokenAudio = "TOKEN_DU_FICHIER_AUDIO",
                filename = "Nom du fichier"
            };

            using (var client = new HttpClient())
            {
                try
                {
                    var json = JsonConvert.SerializeObject(data);
                    var content = new StringContent(json, Encoding.UTF8, "application/json");
                    var response = await client.PostAsync(url, content);
                    var responseContent = await response.Content.ReadAsStringAsync();
                    Console.WriteLine("Response: " + responseContent);
                }
                catch (Exception ex)
                {
                    Console.WriteLine("Error: " + ex.Message);
                }
            }
        }
    }
}
  </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"filename"</span>: <span class="hljs-string">"NOM DU FICHIER"</span>,
    <span class="hljs-attr">"tokenAudio"</span>: <span class="hljs-string">"TOKEN DU FICHIER AUDIO"</span>
}</code></pre>
<h2 id="exemple">Exemple</h2>
<pre><code class="language-bash hljs bash">curl --location --request POST <span class="hljs-string">'https://api.voicepartner.fr/v1/audio-file/rename'</span> 
--header <span class="hljs-string">'Content-Type: application/json'</span> 
--data-raw <span class="hljs-string">'{
    "apiKey": "APIKEY",
    "tokenAudio": "TOKEN DU FICHIER AUDIO",
    "filename": "Nom du fichier"
}</span></code></pre>]]>
    </content>
    <link href="http://localhost:8000/docs/voix/message-vocal/message_vocalp2/" rel="alternate" type="text/html" />
    <published>2024-07-31T13:07:18+00:00</published>
    <updated>2024-07-31T13:07:18+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/voix/message-vocal/message_vocalp4/</id>
    <title>Supprimer un envoi différé</title>
    <content type="html">
      <![CDATA[<h1 id="supprimer-un-envoi-differe">Supprimer un envoi différé</h1>
<p>Permet d’annuler un envoi</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red ; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">DELETE</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;"> https://api.voicepartner.fr/v1/campaign/cancel </span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://www.voicepartner.fr" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte Voice Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>campaignId</strong></td>
<td>id de message</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 

// Activer l'affichage des erreurs pour le débogage
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// L'URL de l'API pour annuler la campagne
$apiKey = 'YOUR_API_KEY'; // Remplacez par votre clé API réelle
$campaignId = 'CAMPAIGN_ID'; // Remplacez par l'ID de campagne réel

// Construction de l'URL avec la clé API et l'ID de campagne
$url = "https://api.voicepartner.fr/v1/campaign/cancel/$apiKey/$campaignId";

// Initialisation de cURL
$curl = curl_init($url);

// Configuration des options de cURL pour une requête DELETE
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'DELETE');
curl_setopt($curl, CURLOPT_HTTPHEADER, array(
    'Cache-Control: no-cache'
));

// Exécution de la requête cURL et enregistrement de la réponse
$response = curl_exec($curl);

// Vérification s'il y a eu des erreurs pendant l'exécution de la requête
if (curl_errno($curl)) {
    echo 'Erreur cURL : ' . curl_error($curl);
} else {
    // Affichage de la réponse
    echo 'Réponse : ' . $response;
}

// Fermeture de la session cURL
curl_close($curl);
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.Net.Http

Public Class SupprimeEnvoiDiffere
    Public Async Function CancelCampaignAsync() As Task
        Using client As New HttpClient()
            Dim apiKey As String = "YOUR_API_KEY"
            Dim campaignId As String = "CAMPAIGN_ID"
            Dim url As String = $"https://api.voicepartner.fr/v1/campaign/cancel/{apiKey}/{campaignId}"

            Try
                Dim response = Await client.DeleteAsync(url)
                Dim responseContent = Await response.Content.ReadAsStringAsync()

                If response.IsSuccessStatusCode Then
                    Console.WriteLine(responseContent)
                Else
                    Console.WriteLine($"Erreur: {response.StatusCode}")
                    Console.WriteLine($"Contenu : {responseContent}")
                End If
            Catch ex As Exception
                Console.WriteLine($"Exception: {ex.Message}")
            End Try
        End Using
    End Function
End Class
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
import requests

# Activer l'affichage des erreurs pour le débogage
# En Python, les erreurs sont affichées par défaut lorsqu'elles se produisent.

# L'URL de l'API pour annuler la campagne
apiKey = 'YOUR_API_KEY'  # Remplacez par votre clé API réelle
campaignId = 'CAMPAIGN_ID'  # Remplacez par l'ID de campagne réel

# Construction de l'URL avec la clé API et l'ID de campagne
url = f"https://api.voicepartner.fr/v1/campaign/cancel/{apiKey}/{campaignId}"

# Configuration des en-têtes HTTP
headers = {
    'Cache-Control': 'no-cache'
}

# Exécution de la requête DELETE
response = requests.delete(url, headers=headers)

# Vérification s'il y a eu des erreurs pendant l'exécution de la requête
if response.status_code != 200:
    print(f'Erreur cURL : {response.status_code}')
else:
    # Affichage de la réponse
    print(f'Réponse : {response.text}')
   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -X DELETE 'https://api.voicepartner.fr/v1/campaign/cancel/YOUR_API_KEY/CAMPAIGN_ID'
 </code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
     <pre><code class="language-javascript">
    <!-- NodeJS code example goes here -->
const axios = require('axios');

// L'URL de l'API pour annuler la campagne
const apiKey = 'YOUR_API_KEY';
const campaignId = 'CAMPAIGN_ID';
const url = `https://api.voicepartner.fr/v1/campaign/cancel/${apiKey}/${campaignId}`;

axios.delete(url)
    .then(response =&gt; {
        console.log(response.data);
    })
    .catch(error =&gt; {
        console.error('Erreur lors de la requête:', error);
    });
        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
package com.example.API;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

public class SupprimeEnvoiDiffere {
    public static void main(String[] args) {
        // L'URL de l'API pour annuler la campagne
        String apiKey = "YOUR_API_KEY";
        String campaignId = "CAMPAIGN_ID";
        String url = "https://api.voicepartner.fr/v1/campaign/cancel/" + apiKey + "/" + campaignId;

        HttpClient client = HttpClient.newHttpClient();
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(url))
                .DELETE() // This sets the request method to DELETE.
                .build();

        client.sendAsync(request, HttpResponse.BodyHandlers.ofString())
                .thenApply(HttpResponse::body)
                .thenAccept(System.out::println)
                .exceptionally(e -&gt; {
                    System.out.println("Erreur lors de la requête: " + e.getMessage());
                    return null;
                })
                .join(); // Wait for the async operation to complete
    }
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
package main

import (
    "fmt"
    "io/ioutil"
    "net/http"
)

func main() {
    apiKey := "YOUR_API_KEY"
    campaignId := "CAMPAIGN_ID"
    url := fmt.Sprintf("https://api.voicepartner.fr/v1/campaign/cancel/%s/%s", apiKey, campaignId)

    req, err := http.NewRequest("DELETE", url, nil)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }

    resp, err := http.DefaultClient.Do(req)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    defer resp.Body.Close()

    respBody, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }

    fmt.Printf("Response: %s
", string(respBody))
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

namespace API.ApiClients
{
    public class SupprimeEnvoiDiffere
    {
        public static async Task Main()
        {
            var apiKey = "YOUR_API_KEY";
            var campaignId = "CAMPAIGN_ID";
            var url = $"https://api.voicepartner.fr/v1/campaign/cancel/{apiKey}/{campaignId}";

            using (var client = new HttpClient())
            {
                try
                {
                    var response = await client.DeleteAsync(url);
                    var content = await response.Content.ReadAsStringAsync();
                    Console.WriteLine("Response: " + content);
                }
                catch (Exception ex)
                {
                    Console.WriteLine("Error: " + ex.Message);
                }
            }
        }
    }
}
  </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"campaignId"</span>: <span class="hljs-string">"D572M"</span>,
    <span class="hljs-attr">"assignedCredit"</span>: <span class="hljs-string">"1.8"</span>,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
}</code></pre>
<h2 id="exemple">Exemple</h2>
<pre><code class="language-bash hljs bash">curl -X DELETE 
  http://api.voicepartner.fr/v1/campaign/cancel/YOUR-API-KEY/CAMPAIGN-ID 
  -H <span class="hljs-string">'cache-control: no-cache'</span></code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
<tr>
<td style="text-align: center;">400</td>
<td style="text-align: left;">Mauvaise requête</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Action non autorisé.</td>
</tr>
<tr>
<td style="text-align: center;">404</td>
<td style="text-align: left;">Ressource non trouvé.</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/voix/message-vocal/message_vocalp4/" rel="alternate" type="text/html" />
    <published>2024-07-31T13:06:54+00:00</published>
    <updated>2024-07-31T13:06:54+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/voix/message-vocal/message_vocalp3/</id>
    <title>Déposer un message vocal</title>
    <content type="html">
      <![CDATA[<h1 id="deposer-un-message-vocal">Déposer un message vocal</h1>
<p>Le <a href="https://www.voicepartner.fr/depot-de-messages-vocaux" rel="noopener noreferrer nofollow">dépôt d’un message vocal (VMS)</a> est disponible sur l’API. Le dépôt fonctionne sur les fixes et sur les mobiles. Il est important de noter que le fonctionnement est différent.</p>
<p>Pour rappel, sur un numéro mobile le message est directement déposé sur le répondeur alors que sur un numéro fixe, le téléphone sonne et le message est déposé uniquement si le destinataire ne répond pas.</p>
<p>Pour déposer un message vocal sur les répondeurs mobile Rate Limit: 2000 requêtes par heure</p>
<p>Limite: 5 requêtes par minute</p>
<p>Limite d’envoi sur une même requête : 500 numéros</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;"> https://api.voicepartner.fr/v1/campaign/send</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://www.voicepartner.fr" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte Voice Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>tokenAudio</strong></td>
<td>Identifiant du fichier audio</td>
</tr>
<tr>
<td style="text-align: center;"><strong>emailForNotification</strong></td>
<td>La notification de fin de campagne sera envoyé vers cette adresse email</td>
</tr>
<tr>
<td style="text-align: center;"><strong>phoneNumbers</strong></td>
<td>Numéros de téléphone mobile des destinataires. <br> Pour l’envoi de plusieurs SMS les numéros doivent être séparés par des virgules. <br> Ils peuvent être : <li> au format national (06xxxxxxxx) ou international (+336xxxxxxxx), pour des numéros français. </li></td>
</tr>
</tbody>
</table>
<h3 id="parametres-optionnels">Paramètres optionnels</h3>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>sender</strong></td>
<td>Numéro de téléphone portable qui peut être rappelé. Ce numéro doit être validé au préalable sur la plateforme my.voicepartner.fr.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>scheduledDate</strong></td>
<td>Date d’envoi du message, au format YYYY-mm-dd H:m:00 (ex: 2021-02-02 14:15:00). A définir uniquement si vous souhaitez que les dépôts soient envoyés en différé.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>notifyUrl</strong></td>
<td>Url de retour du statut de la campagne envoyé en GET</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 

// URL de l'API à laquelle effectuer la requête POST
$url = 'https://api.voicepartner.fr/v1/campaign/send';

// Les données à envoyer en JSON
$data = [
    'apiKey'            =&gt; 'YOUR_API_KEY', // Remplacez par votre clé API réelle
    'tokenAudio'        =&gt; 'TOKEN_AUDIO',  // Remplacez par le token audio réel
    'emailForNotification' =&gt; 'email@example.com', // Remplacez par l'email de notification souhaité
    'phoneNumbers'      =&gt; '06xxxxxxxx',   // Remplacez par le(s) numéro(s) de téléphone réel(s), séparés par des virgules si besoin
    // Ajoutez les autres paramètres optionnels si nécessaire
    // 'sender'         =&gt; 'VotreNuméro', // Optionnel
    // 'scheduledDate'  =&gt; 'YYYY-mm-dd H:i:s', // Optionnel
    // 'notifyUrl'      =&gt; 'https://your.notify.url', // Optionnel
];

// Encodage des données en JSON
$data_json = json_encode($data);

// Initialisation de cURL
$curl = curl_init($url);

// Configuration des options de cURL pour envoyer du JSON
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_json);
curl_setopt($curl, CURLOPT_HTTPHEADER, array(
    'Content-Type: application/json',
    'Cache-Control: no-cache'
));

// Exécution de la requête cURL et enregistrement de la réponse
$response = curl_exec($curl);

// Vérification s'il y a eu des erreurs pendant l'exécution de la requête
if (curl_errno($curl)) {
    echo 'Erreur cURL : ' . curl_error($curl);
} else {
    // Affichage de la réponse
    echo 'Réponse : ' . $response;
}

// Fermeture de la session cURL
curl_close($curl);
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.Net.Http
Imports System.Threading.Tasks
Imports Newtonsoft.Json

Public Class DeposerMessageVocal
    Private Const ApiUrl As String = "https://api.voicepartner.fr/v1/campaign/send"
    Private Const ApiKey As String = "YOUR_API_KEY"
    Private Const TokenAudio As String = "YOUR_TOKEN_AUDIO"
    Private Const EmailForNotification As String = "your@mail.com"
    Private Const PhoneNumbers As String = "06XXXXXXXX"

    Public Shared Async Function SendCampaignAsync() As Task
        Using client As New HttpClient()
            Dim payload = New With {
                .apiKey = ApiKey,
                .tokenAudio = TokenAudio,
                .emailForNotification = EmailForNotification,
                .phoneNumbers = PhoneNumbers
            }
            Dim content = New StringContent(JsonConvert.SerializeObject(payload), Text.Encoding.UTF8, "application/json")

            Try
                Dim response = Await client.PostAsync(ApiUrl, content)
                If response.IsSuccessStatusCode Then
                    Dim responseContent = Await response.Content.ReadAsStringAsync()
                    ' Handle success
                    Console.WriteLine(responseContent)
                Else
                    ' Handle failure
                    Console.WriteLine($"Error: {response.StatusCode}")
                End If
            Catch ex As Exception
                ' Handle error
                Console.WriteLine($"Exception: {ex.Message}")
            End Try
        End Using
    End Function
End Class
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
import requests

# URL de l'API à laquelle effectuer la requête POST
url = 'https://api.voicepartner.fr/v1/campaign/send'

# Les données à envoyer en JSON
data = {
    'apiKey': 'YOUR_API_KEY',  # Remplacez par votre clé API réelle
    'tokenAudio': 'TOKEN_AUDIO',  # Remplacez par le token audio réel
    'emailForNotification': 'email@example.com',  # Remplacez par l'email de notification souhaité
    'phoneNumbers': '06xxxxxxxx',  # Remplacez par le(s) numéro(s) de téléphone réel(s)
    # Ajoutez les autres paramètres optionnels si nécessaire
    # 'sender': 'VotreNuméro',  # Optionnel
    # 'scheduledDate': 'YYYY-mm-dd H:i:s',  # Optionnel
    # 'notifyUrl': 'https://your.notify.url',  # Optionnel
}

# Configuration des en-têtes HTTP
headers = {
    'Content-Type': 'application/json',
    'Cache-Control': 'no-cache'
}

# Exécution de la requête POST avec les données JSON
response = requests.post(url, json=data, headers=headers)

# Vérification s'il y a eu des erreurs pendant l'exécution de la requête
if response.status_code != 200:
    print(f'Erreur cURL : {response.status_code}')
else:
    # Affichage de la réponse
    print(f'Réponse : {response.text}')
   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -X POST 'https://api.voicepartner.fr/v1/campaign/send' 
     -H 'Content-Type: application/json' 
     -d '{
          "apiKey": "YOUR_API_KEY",
          "tokenAudio": "TOKEN_AUDIO",
          "emailForNotification": "email@example.com",
          "phoneNumbers": "06xxxxxxxx"
          // ... autres paramètres si nécessaire
         }'
 </code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
     <pre><code class="language-javascript">
    <!-- NodeJS code example goes here -->
const axios = require('axios');

// URL de l'API à laquelle effectuer la requête POST
const url = 'https://api.voicepartner.fr/v1/campaign/send';

// Les données à envoyer en JSON
const data = {
    apiKey: 'YOUR_API_KEY',
    tokenAudio: 'TOKEN_AUDIO',
    emailForNotification: 'email@example.com',
    phoneNumbers: '06xxxxxxxx'
    // ... autres paramètres si nécessaire
};

axios.post(url, data)
    .then(response =&gt; {
        console.log(response.data);
    })
    .catch(error =&gt; {
        console.error('Erreur lors de la requête:', error);
    });

        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
package com.example.API;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse.BodyHandlers;
import java.util.concurrent.CompletableFuture;

public class DeposerMessageVocal {

    public static void main(String[] args) {
        String url = "https://api.voicepartner.fr/v1/campaign/send";
        String json = """
                {
                    "apiKey": "YOUR_API_KEY",
                    "tokenAudio": "tokenAudio",
                    "emailForNotification": "email@example.com",
                    "phoneNumbers": "06XXXXXXXX"
                     // ... autres paramètres si nécessaire
                }
                """;

        HttpClient client = HttpClient.newHttpClient();
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(url))
                .header("Content-Type", "application/json")
                .POST(BodyPublishers.ofString(json))
                .build();

        CompletableFuture future = client.sendAsync(request, BodyHandlers.ofString())
                .thenApply(HttpResponse::body)
                .thenAccept(System.out::println)
                .exceptionally(e -&gt; {
                    System.out.println("Erreur lors de la requête: " + e.getMessage());
                    return null;
                });

        // Utiliser CompletableFuture.allOf pour attendre la fin de toutes les futures.
        CompletableFuture.allOf(future).join();
    }
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
package main

import (
    "bytes"
    "encoding/json"
    "fmt"
    "io/ioutil"
    "net/http"
)

type Message struct {
    ApiKey               string  `json:"apiKey"`
    TokenAudio           string  `json:"tokenAudio"`
    EmailForNotification string  `json:"emailForNotification"`
    PhoneNumbers         string  `json:"phoneNumbers"`
    ScheduledDate        *string `json:"scheduledDate,omitempty"` // Optional, use pointer to omit if nil
    Sender               *string `json:"sender,omitempty"`        // Optional, use pointer to omit if nil
    NotifyUrl            *string `json:"notifyUrl,omitempty"`     // Optional, use pointer to omit if nil
    // Additional fields can be added here
}

func main() {
    url := "https://api.voicepartner.fr/v1/campaign/send"
    //scheduledDate := "2024-04-12 14:30:00"       // Example Date and Time
    //sender := "VotreNumero"                      // Example sender number
    //notifyUrl := "https://yourdomain.com/notify" // Example notification URL

    data := Message{
        ApiKey:               "YOUR_API_KEY",
        TokenAudio:           "TOKEN_AUDIO",
        EmailForNotification: "email@exemple.com",
        PhoneNumbers:         "06xxxxxxxx",
        //ScheduledDate:        &amp;scheduledDate, // Uncomment to use
        //Sender:               &amp;sender,        // Uncomment to use
        //NotifyUrl:            &amp;notifyUrl,     // Uncomment to use
    }

    payloadBytes, err := json.Marshal(data)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    body := bytes.NewReader(payloadBytes)

    req, err := http.NewRequest("POST", url, body)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    req.Header.Set("Content-Type", "application/json")

    resp, err := http.DefaultClient.Do(req)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    defer resp.Body.Close()

    respBody, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }

    fmt.Printf("Response: %s
", string(respBody))
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using Newtonsoft.Json;
using System.Text;

public class DeposerMessageVocal
{
    public static async Task Main()
    {
        var url = "https://api.voicepartner.fr/v1/campaign/send";

        // Définissez la date et l'heure manuellement ici
        //var scheduledDate = "2024-04-12 14:30:00"; // Format 'yyyy-MM-dd HH:mm:ss'
        //var sender = "VotreNumero"; // Remplacez par votre numéro de téléphone validé
        //var notifyUrl = "https://yourdomain.com/notify"; // Votre URL de notification

        var data = new
        {
            apiKey = "YOUR_API_KEY",
            tokenAudio = "TOKEN_AUDIO",
            emailForNotification = "email@example.com",
            phoneNumbers = "06xxxxxxxx",
            // Ajoutez d'autres paramètres optionnels si nécessaire
            //scheduledDate,
            //sender, // Numéro de téléphone portable qui peut être rappelé
            //notifyUrl // URL de retour du statut de la campagne envoyée en GET
        };

        using (var client = new HttpClient())
        {
            try
            {
                var json = JsonConvert.SerializeObject(data);
                var content = new StringContent(json, Encoding.UTF8, "application/json");
                var response = await client.PostAsync(url, content);
                var responseContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine("Response: " + responseContent);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error: " + ex.Message);
            }
        }
    }
}
  </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"campaignId"</span>: <span class="hljs-string">"campaignId"</span>,
    <span class="hljs-attr">"cost"</span>: <span class="hljs-number">0.15</span>,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>,
    <span class="hljs-attr">"nbSms"</span>: <span class="hljs-number">1</span>,
    <span class="hljs-attr">"audioFile"</span>: {
        <span class="hljs-attr">"filename"</span>: <span class="hljs-string">"filename.wav"</span>,
        <span class="hljs-attr">"size"</span>: <span class="hljs-string">"135.8Ko"</span>
    },
    <span class="hljs-attr">"detail"</span>: {
        <span class="hljs-attr">"33"</span>: {
            <span class="hljs-attr">"nbSms"</span>: <span class="hljs-number">1</span>,
            <span class="hljs-attr">"cost_unity"</span>: <span class="hljs-number">0.15</span>,
            <span class="hljs-attr">"cost"</span>: <span class="hljs-number">0.15</span>
        }
    }
}</code></pre>
<h2 id="exemple">Exemple</h2>
<pre><code class="language-bash hljs bash">curl -X POST 
  http://api.voicepartner.fr/v1/campaign/send 
  -H <span class="hljs-string">'Content-Type: application/json'</span> 
  -H <span class="hljs-string">'Postman-Token: 40756d00-a7f3-4162-8513-bd6a13328cc3'</span> 
  -H <span class="hljs-string">'cache-control: no-cache'</span> 
  -d <span class="hljs-string">'{
"apiKey":"YOUR-API-KEY",
"phoneNumbers":"06XXXXXXXX",
"tokenAudio":"TOKEN-AUDIO"
}'</span></code></pre>]]>
    </content>
    <link href="http://localhost:8000/docs/voix/message-vocal/message_vocalp3/" rel="alternate" type="text/html" />
    <published>2024-07-31T10:39:32+00:00</published>
    <updated>2024-07-31T10:39:32+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/voix/message-vocal/message_vocalp1/</id>
    <title>Liste des fichiers audio</title>
    <content type="html">
      <![CDATA[<h1 id="liste-des-fichiers-audio">Liste des fichiers audio</h1>
<p>Récupére la liste des fichiers audios ajoutés et validés</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;"> https://api.voicepartner.fr/v1/audios</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://www.voicepartner.fr" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte Voice Partner</a>.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
// L'URL de l'API où vous voulez envoyer la requête'URL de l'API où vous voulez envoyer la requête
$url = 'http://api.voicepartner.fr/v1/audios/YOUR_API_KEY';

// Initialisation de cURL
$curl = curl_init($url);

// Configuration des options de cURL
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_HTTPHEADER, [
    'Cache-Control: no-cache'
]);

// Exécution de la requête cURL 
$response = curl_exec($curl);

// Vérification s'il y a eu des erreurs
if ($response === false) {
    // Gérer l'erreur ici
    $error = curl_error($curl);
    curl_close($curl);
    die("Erreur cURL: $error");
}

// Fermeture de la session cURL
curl_close($curl);

// Affichage de la réponse
echo $response;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
 Imports System.Net.Http

Public Class ListeFichierAudio
    Public Async Function GetAudios(client As HttpClient, apiKey As String) As Task
        Dim url As String = $"audios/{apiKey}"

        Try
            Dim response As HttpResponseMessage = Await client.GetAsync(url)
            If response.IsSuccessStatusCode Then
                Dim responseString As String = Await response.Content.ReadAsStringAsync()
                Console.WriteLine("Audios: " &amp; responseString)
            Else
                Console.WriteLine("Error: " &amp; response.ReasonPhrase)
            End If
        Catch ex As Exception
            Console.WriteLine("Exception: " &amp; ex.Message)
        End Try
    End Function
End Class
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
import requests

# L'URL de l'API où vous voulez envoyer la requête
url = 'http://api.voicepartner.fr/v1/audios/YOUR_API_KEY'

# Configuration des en-têtes HTTP
headers = {
    'Cache-Control': 'no-cache'
}

# Exécution de la requête GET et enregistrement de la réponse
response = requests.get(url, headers=headers)

# Vérification du statut de la réponse
if response.status_code == 200:
    # Affichage de la réponse
    print(response.text)
else:
    # Gérer l'erreur ici
    print(f"Erreur lors de la requête: {response.status_code}")

   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl http://api.voicepartner.fr/v1/audios/YOUR_API_KEY
 </code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
   <pre><code class="language-javascript">
    <!-- NodeJS code example goes here -->
   const axios = require('axios');

// L'URL de l'API où vous voulez envoyer la requête
const url = 'http://api.voicepartner.fr/v1/audios/YOUR_API_KEY';

axios.get(url)
    .then(response =&gt; {
        console.log(response.data);
    })
    .catch(error =&gt; {
        console.error('Erreur lors de la requête:', error);
    });
        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
package com.example.API;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.net.http.HttpResponse.BodyHandlers;

public class ListeFichierAudio {
    public static void main(String[] args) {
        // Replace 'YOUR_API_KEY' with your actual API key
        String url = "http://api.voicepartner.fr/v1/audios/YOUR_API_KEY";

        HttpClient client = HttpClient.newHttpClient();
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(url))
                .build();

        client.sendAsync(request, BodyHandlers.ofString())
                .thenApply(HttpResponse::body)
                .thenAccept(System.out::println)
                .exceptionally(e -&gt; {
                    System.out.println("Erreur lors de la requête: " + e.getMessage());
                    return null;
                })
                .join();
    }
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
package main

import (
    "fmt"
    "io/ioutil"
    "net/http"
)

func main() {
    url := "http://api.voicepartner.fr/v1/audios/YOUR_API_KEY"

    response, err := http.Get(url)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    defer response.Body.Close()

    body, err := ioutil.ReadAll(response.Body)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }

    fmt.Printf("Response: %s
", string(body))
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

namespace API.ApiClients
{
    public class ListeFichierAudio
    {
        public static async Task Main()
        {
            var url = "http://api.voicepartner.fr/v1/audios/YOUR_API_KEY";

            using (var client = new HttpClient())
            {
                try
                {
                    var response = await client.GetAsync(url);
                    var content = await response.Content.ReadAsStringAsync();
                    Console.WriteLine("Response: " + content);
                }
                catch (Exception ex)
                {
                    Console.WriteLine("Error: " + ex.Message);
                }
            }
        }
    }
}
  </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"nb_datas"</span>: <span class="hljs-number">58</span>,
    <span class="hljs-attr">"datas"</span>: [
        {
            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"filename1"</span>,
            <span class="hljs-attr">"token"</span>: <span class="hljs-string">"token1"</span>,
            <span class="hljs-attr">"size"</span>: <span class="hljs-string">"104.5Ko"</span>,
            <span class="hljs-attr">"duration"</span>: <span class="hljs-string">"0:07"</span>,
            <span class="hljs-attr">"created_at"</span>: {
                <span class="hljs-attr">"date"</span>: <span class="hljs-string">"2018-04-16 13:26:46.000000"</span>,
                <span class="hljs-attr">"timezone_type"</span>: <span class="hljs-number">3</span>,
                <span class="hljs-attr">"timezone"</span>: <span class="hljs-string">"Europe/Paris"</span>
            }
        },
        {
            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"filename2"</span>,
            <span class="hljs-attr">"token"</span>: <span class="hljs-string">"token2"</span>,
            <span class="hljs-attr">"size"</span>: <span class="hljs-string">"762.7Ko"</span>,
            <span class="hljs-attr">"duration"</span>: <span class="hljs-string">"0:49"</span>,
            <span class="hljs-attr">"created_at"</span>: {
                <span class="hljs-attr">"date"</span>: <span class="hljs-string">"2018-06-04 07:26:04.000000"</span>,
                <span class="hljs-attr">"timezone_type"</span>: <span class="hljs-number">3</span>,
                <span class="hljs-attr">"timezone"</span>: <span class="hljs-string">"Europe/Paris"</span>
            }
        },...
    ]
}</code></pre>
<h2 id="exemple">Exemple</h2>
<pre><code class="language-bash hljs bash">curl -X GET 
  http://api.voicepartner.fr/v1/audios/YOUR_API_KEY 
  -H <span class="hljs-string">'cache-control: no-cache'</span>
}<span class="hljs-string">'</span></code></pre>]]>
    </content>
    <link href="http://localhost:8000/docs/voix/message-vocal/message_vocalp1/" rel="alternate" type="text/html" />
    <published>2024-07-31T08:39:08+00:00</published>
    <updated>2024-07-31T08:39:08+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/voix/voixp2/</id>
    <title>Crédits voix</title>
    <content type="html">
      <![CDATA[<h1 id="credits-voix">Crédits voix</h1>
<p>Cette requête est utilisée pour récupérer votre crédit disponible de messages vocaux, dépôt de messages.</p>
<p>Limite: 5 requêtes par minute</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;"> https://api.voicepartner.fr/v1/me</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://www.voicepartner.fr" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte Voice Partner</a>.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>_format</strong></td>
<td>Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong></td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
                // Prepare data for GET request
        $data = 'YOUR_API_KEY';

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.voicepartner.fr/v1/me/'.$data);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
cURL
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "https://api.voicepartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #check credits
    Dim url As String
    url = base_url &amp; "me" &amp; "/" &amp; apiKey

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.voicepartner.fr/v1"

class SMSPartner():
    def get_balance(self):
        url = URL + "/me/" + API_KEY
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status

   </code></pre>
  </div>

    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H "Content-Type: application/json" -X 
GET  https://api.voicepartner.fr/v1/me/xxx
</code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const axios = require('axios');

// Replace 'YOUR_API_KEY' with your actual API key
const apiKey = 'YOUR_API_KEY';

// The URL of the API with the API key appended
const url = `https://api.voicepartner.fr/v1/me/${apiKey}`;

axios.get(url)
.then(response =&gt; {
console.log('Response:', response.data);
})
.catch(error =&gt; {
console.error('Error:', error.response ? error.response.data : error.message);
});
        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
package com.example.API;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.net.http.HttpResponse.BodyHandlers;

public class CreditVoix {
    public static void main(String[] args) {
        // Replace 'YOUR_API_KEY' with your actual API key
        String apiKey = "YOUR_API_KEY";
        String url = "https://api.voicepartner.fr/v1/me/" + apiKey;

        HttpClient client = HttpClient.newHttpClient();
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(url))
                .build();

        client.sendAsync(request, BodyHandlers.ofString())
                .thenApply(HttpResponse::body)
                .thenAccept(System.out::println)
                .exceptionally(e -&gt; {
                    System.out.println("Error: " + e.getMessage());
                    return null;
                })
                .join();
    }
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
package main

import (
    "fmt"
    "io/ioutil"
    "net/http"
)

func main() {
    apiKey := "YOUR_API_KEY"
    url := fmt.Sprintf("https://api.voicepartner.fr/v1/me/%s", apiKey)

    response, err := http.Get(url)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }
    defer response.Body.Close()

    body, err := ioutil.ReadAll(response.Body)
    if err != nil {
        fmt.Printf("Error: %s
", err.Error())
        return
    }

    fmt.Printf("Response: %s
", string(body))
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

namespace API.ApiClients
{
    public class CreditVoix
    {
        public static async Task Main()
        {
            var apiKey = "YOUR_API_KEY";
            var url = $"https://api.voicepartner.fr/v1/me/{apiKey}";

            using (var client = new HttpClient())
            {
                try
                {
                    var response = await client.GetAsync(url);
                    var content = await response.Content.ReadAsStringAsync();
                    Console.WriteLine("Response: " + content);
                }
                catch (Exception ex)
                {
                    Console.WriteLine("Error: " + ex.Message);
                }
            }
        }
    }
}
  </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"credit"</span>: <span class="hljs-string">"19"</span>,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"€"</span>,
    <span class="hljs-attr">"details"</span>: {
        <span class="hljs-attr">"tts"</span>: {
            <span class="hljs-attr">"h"</span>: <span class="hljs-number">5</span>,
            <span class="hljs-attr">"m"</span>: <span class="hljs-number">55</span>,
            <span class="hljs-attr">"s"</span>: <span class="hljs-number">66</span>
        },
        <span class="hljs-attr">"tts_fixe"</span>: {
            <span class="hljs-attr">"h"</span>: <span class="hljs-number">3</span>,
            <span class="hljs-attr">"m"</span>: <span class="hljs-number">44</span>,
            <span class="hljs-attr">"s"</span>: <span class="hljs-number">55</span>
        },
        <span class="hljs-attr">"voice"</span>: {
            <span class="hljs-attr">"message"</span>: <span class="hljs-number">10</span>
        }
    }
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/voix/voixp2/" rel="alternate" type="text/html" />
    <published>2024-07-30T14:58:22+00:00</published>
    <updated>2024-07-30T14:58:22+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/smsp3/</id>
    <title>Gérer le transfert d’appel</title>
    <content type="html">
      <![CDATA[<h1 id="transfert-d-appel">Transfert d’appel</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;"> http://api.smspartner.fr/v1/vn/callforward</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>number</strong></td>
<td>Numéro virtuel</td>
</tr>
<tr>
<td style="text-align: center;"><strong>type</strong></td>
<td>Type de transfert: <br> 0 =&gt; Désactivé <br> 1 =&gt; Transfert d’appel <br> 2 =&gt; Messagerie</td>
</tr>
<tr>
<td style="text-align: center;"><strong>param</strong></td>
<td>Si type = 0 laisser vide <br> Si type = 1 ajouter le numéro du transfert. <br> Si type = 2 ajouter l’email qui sera notifié d’un nouveau message</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<pre><code class="language-bash hljs bash">{
curl --location <span class="hljs-string">'https://api.smspartner.fr/v1/vn/callforward'</span> 
--header <span class="hljs-string">'Content-Type: application/json'</span> 
--data <span class="hljs-string">'{
    "apiKey": "API_KEY",
    "number": "NUMBET",
    "type": 0, 
    "param": ""
}'</span></code></pre>
<h2 id="reponses">Réponses</h2>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">2</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Callforward disabled"</span>
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur :</p>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">5</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"email is not valid"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">name est requis</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td style="text-align: left;">Le numéro virtuel est requis</td>
</tr>
<tr>
<td style="text-align: center;">6</td>
<td style="text-align: left;">Le type est requis</td>
</tr>
<tr>
<td style="text-align: center;">7</td>
<td style="text-align: left;">Le type n’est pas valide</td>
</tr>
<tr>
<td style="text-align: center;">8</td>
<td style="text-align: left;">param est requis</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td style="text-align: left;">L’email n’est pas valide</td>
</tr>
<tr>
<td style="text-align: center;">12</td>
<td style="text-align: left;">Le numéro de transfert n’est pas valide</td>
</tr>
<tr>
<td style="text-align: center;">13</td>
<td style="text-align: left;">Le numéro virtuel n’existe pas</td>
</tr>
<tr>
<td style="text-align: center;">14</td>
<td style="text-align: left;">Le transfert d’appel n’est pas activé</td>
</tr>
<tr>
<td style="text-align: center;">15</td>
<td style="text-align: left;">Le numéro est désactivé</td>
</tr>
<tr>
<td style="text-align: center;">16</td>
<td style="text-align: left;">Le transfert d’appel est déjà activé</td>
</tr>
<tr>
<td style="text-align: center;">17</td>
<td style="text-align: left;">La messagerie est déjà activée</td>
</tr>
<tr>
<td style="text-align: center;">18</td>
<td style="text-align: left;">Le transfert d’appel est déjà désactivé</td>
</tr>
</tbody>
</table>
<p><br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/smsp3/" rel="alternate" type="text/html" />
    <published>2024-07-30T11:48:47+00:00</published>
    <updated>2024-07-30T11:48:47+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/sous-comptes/sous_comptep6/</id>
    <title>Supprimer des crédits</title>
    <content type="html">
      <![CDATA[<h1 id="suppression-de-credit">Suppression de crédit</h1>
<blockquote>
<p>Depuis votre compte, il vous est possible de supprimer des crédits de vos sous comptes. Les crédits seront ajoutés à votre compte principal.</p>
</blockquote>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/subaccount/credit/remove</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>credit</strong></td>
<td>Nombre de crédit en Euro à ajouter au sous-compte.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>tokenSubaccount</strong></td>
<td>Identifiant du sous compte.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<p>_format : Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |</p>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
        // Prepare data for POST request
        $fields = array(
            'apiKey'=&gt; 'YOUR API KEY',
           'credit'=&gt; '100',
            'tokenSubaccount'=&gt;'identifiant du sous-compte'
            );

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/subaccount/credit/add');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #send sms
    url = base_url &amp; "subaccount/credit/sms"
    #note : utiliser une librairie JSON en production, par exemple :
    #https//www.nuget.org/packages/Newtonsoft.Json/
    Dim parameters As String = String.Format(
        "{{""apiKey"":""{0}"",""credit"":""{1}"",""tokenSubaccount"":""{2}""}}",
        apiKey,
        50,
        "identifiant du sous-compte")
    Console.Write(parameters)
    apiRequest("POST", url, parameters)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def add_credit(self,creditToAdd,tokenSubaccount):

        data = OrderedDict([
            ("apiKey", API_KEY),
            ("credit",creditToAdd),
            ("tokenSubaccount",tokenSubaccount)

        ])

        url = URL + "/subaccount/credit/add"
        r = requests.post(url, data=json.dumps(data), verify=False)

        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H  "Content-Type: application/json" -X 
POST -d '{"apiKey":"xxxxx","credit":"10","tokenSubaccount":"identifiant du sous-compte"}
' https://api.smspartner.fr/v1/subaccount/credit/add  

</code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
    <span class="hljs-attr">"credit"</span>: <span class="hljs-number">2869.2</span>,
    <span class="hljs-attr">"subaccountCredit"</span>: <span class="hljs-number">61.8</span>,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
}</code></pre>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/sous-comptes/sous_comptep6/" rel="alternate" type="text/html" />
    <published>2024-07-30T10:26:50+00:00</published>
    <updated>2024-07-30T10:26:50+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/sous-comptes/sous_comptep5/</id>
    <title>Ajouter des crédits</title>
    <content type="html">
      <![CDATA[<h1 id="ajout-de-credit">Ajout de crédit</h1>
<blockquote>
<p>Depuis votre compte, il vous est possible d’ajouter des crédits sur vos sous comptes. Les crédits seront débités de votre compte principal.</p>
</blockquote>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/subaccount/credit/add</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>credit</strong></td>
<td>Nombre de crédit en Euro à ajouter au sous-compte.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>tokenSubaccount</strong></td>
<td>Identifiant du sous compte.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<p>_format : Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |</p>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
        // Prepare data for POST request
        $fields = array(
            'apiKey'=&gt; 'YOUR API KEY',
            'credit'=&gt; '100',
            'tokenSubaccount'=&gt;'identifiant du sous-compte'
            );

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/subaccount/credit/add');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #send sms
    url = base_url &amp; "subaccount/credit/sms"
    #note : utiliser une librairie JSON en production, par exemple :
    #https//www.nuget.org/packages/Newtonsoft.Json/
    Dim parameters As String = String.Format(
        "{{""apiKey"":""{0}"",""credit"":""{1}"",""tokenSubaccount"":""{2}""}}",
        apiKey,
        50,
        "identifiant du sous-compte")
    Console.Write(parameters)
    apiRequest("POST", url, parameters)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def add_credit(self,creditToAdd,tokenSubaccount):

        data = OrderedDict([
            ("apiKey", API_KEY),
            ("credit",creditToAdd),
            ("tokenSubaccount",tokenSubaccount)

        ])

        url = URL + "/subaccount/credit/add"
        r = requests.post(url, data=json.dumps(data), verify=False)

        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H  "Content-Type: application/json" -X POST -d
 '{"apiKey":"xxxxx","credit":"10","tokenSubaccount":
 "identifiant du sous-compte"}' https://api.smspartner.fr/v1/subaccount/credit/add
  </code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require('https');

// permet d'ajouter des crédits à un sous-compte
//Depuis votre compte, il vous est possible d’ajouter des crédits sur vos sous comptes. Les crédits seront débités de votre compte principal.
let data = JSON.stringify({
  apiKey: 'YOUR API KEY',
  credit: '100',
  tokenSubaccount: 'identifiant du sous-compte'
});

let options = {
  hostname: 'api.smspartner.fr',
  path: '/v1/subaccount/credit/add',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': data.length
  }
};

let req = https.request(options, (res) =&gt; {
  let data = '';

  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  console.log("Error: " + err.message);
});

req.write(data);
req.end();
        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class AjouterRetirerDesCredits {
    public static void main(String[] args) {
        try {
            // Prepare data for POST request
            String apiKey = "YOUR API KEY";
            int credit = 100;
            String tokenSubaccount = "identifiant du sous-compte";

            // Create JSON payload
            String jsonPayload = "{"apiKey": "" + apiKey + "", "credit": " + credit + ", "tokenSubaccount": "" + tokenSubaccount + ""}";

            // Create POST request
            URL url = new URL("https://api.smspartner.fr/v1/subaccount/credit/add");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "application/json");
            connection.setDoOutput(true);

            // Send POST request
            OutputStream outputStream = connection.getOutputStream();
            outputStream.write(jsonPayload.getBytes());
            outputStream.flush();
            outputStream.close();

            // Get response
            int responseCode = connection.getResponseCode();
            BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            StringBuilder response = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            reader.close();

            // Process your response here
            System.out.println(response.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

struct AjoutCreditSousCompte: View {
    @State private var result: String = "Loading..."

    var body: some View {
        VStack {
            Text("Ajout Credit Sous Compte")
                .font(.title)
                .padding()

            Text(result)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: ajoutCreditSousCompte)
    }

    func ajoutCreditSousCompte() {
        let apiKey = "YOUR_API_KEY"
        let credit = "100"
        let tokenSubaccount = "identifiant du sous-compte"

        let urlString = "https://api.smspartner.fr/v1/subaccount/credit/add"
        let url = URL(string: urlString)!

        var request = URLRequest(url: url)
        request.httpMethod = "POST"
        request.addValue("application/json", forHTTPHeaderField: "Content-Type")

        let parameters: [String: Any] = [
            "apiKey": apiKey,
            "credit": credit,
            "tokenSubaccount": tokenSubaccount
        ]

        request.httpBody = try? JSONSerialization.data(withJSONObject: parameters)

        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
            if let error = error {
                print("Error: (error)")
            } else if let data = data {
                let resultString = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    self.result = resultString ?? "Error"
                }
            }
        }

        task.resume()
    }
}

struct AjoutCreditSousCompte_Previews: PreviewProvider {
    static var previews: some View {
        AjoutCreditSousCompte()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
package main

import (
    "bytes"
    "encoding/json"
    "io/ioutil"
    "log"
    "net/http"
)

type SubaccountData struct {
    APIKey         string `json:"apiKey"`
    Credit         string `json:"credit"`
    TokenSubaccount string `json:"tokenSubaccount"`
}

func main() {
    apiKey := "YOUR_API_KEY"
    credit := "100"
    tokenSubaccount := "identifiant du sous-compte"

    // Create POST request data
    data := SubaccountData{
        APIKey:         apiKey,
        Credit:         credit,
        TokenSubaccount: tokenSubaccount,
    }
    jsonData, _ := json.Marshal(data)

    // Create POST request
    req, err := http.NewRequest("POST", "https://api.smspartner.fr/v1/subaccount/credit/add", bytes.NewBuffer(jsonData))
    if err != nil {
        log.Fatalf("Error creating request: %v", err)
    }
    req.Header.Set("Content-Type", "application/json")

    // Send the request
    client := &amp;http.Client{}
    resp, err := client.Do(req)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Read the response
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response: %v", err)
    }

    // Print the response body
    log.Printf("Response body: %s", string(body))
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var data = new
        {
            apiKey = "YOUR API KEY",
            credit = "100",
            tokenSubaccount = "Subaccount ID"
        };

        string jsonString = JsonConvert.SerializeObject(data);

        var content = new StringContent(jsonString, Encoding.UTF8, "application/json");

        HttpResponseMessage response = await client.PostAsync("https://api.smspartner.fr/v1/subaccount/credit/add", content);

        if (response.IsSuccessStatusCode)
        {
            string result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("POST request failed with status code: " + response.StatusCode);
        }
    }
}
  </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
    <span class="hljs-attr">"credit"</span>: <span class="hljs-number">2869.2</span>,
    <span class="hljs-attr">"subaccountCredit"</span>: <span class="hljs-number">61.8</span>,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">Le crédit est requis</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td style="text-align: left;">L’identifiant du sous-compte est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td style="text-align: left;">Vous n’avez pas l’authorisation</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td style="text-align: left;">Le crédit à attribuer doit être supérieur à 0</td>
</tr>
<tr>
<td style="text-align: center;">6</td>
<td style="text-align: left;">La balance doit être supérieur à 0</td>
</tr>
<tr>
<td style="text-align: center;">7</td>
<td style="text-align: left;">Le sous-compte n’exsite pas</td>
</tr>
<tr>
<td style="text-align: center;">8</td>
<td style="text-align: left;">Crédits insufisant</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/sous-comptes/sous_comptep5/" rel="alternate" type="text/html" />
    <published>2024-07-30T10:06:40+00:00</published>
    <updated>2024-07-30T10:06:40+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/sous-comptes/sous_comptep4/</id>
    <title>Liste des sous-comptes</title>
    <content type="html">
      <![CDATA[<h1 id="recuperation-des-sous-comptes">Récupération des sous comptes</h1>
<blockquote>
<p>Pour récupérer, les informations des sous comptes, il y a deux méthodes : <li> Par la plateforme: </li>  En vous rendant sur votre <a href="https://my.smspartner.fr/connexion" rel="noopener noreferrer nofollow">tableau de bord</a>.ou vous aurez accès à l’ensemble des sous comptes associés à votre compte. <br> <li> Par l’API: </li> En effectuant une requête sur l’url ci-dessous.</p>
</blockquote>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/subaccount/list</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>page</strong></td>
<td>Le numéro de la page, il y a 20 résultats par page. <br> Si ce paramètre est omis, la page 1 sera retourné.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<p>_format : Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |</p>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
        // Prepare data for GET request
        $data = 'apiKey=YOUR_API_KEY';

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/subaccount/list?'.$data);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;

?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #check credits
    Dim url As String
    url = base_url &amp; "subaccount/list" &amp; "?apiKey=" &amp; apiKey

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def get_list_subaccount(self):
        url = URL + "/subaccount/list?apiKey=" + API_KEY
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H  "Content-Type: application/json" -X
 GET  https://api.smspartner.fr/v1/subaccount/list?apiKey=xxx&amp;page=1
  </code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">

const https = require('https');

// Permets de récupérer la liste des sous-comptes
let data = 'apiKey=YOUR_API_KEY';
let url = 'https://api.smspartner.fr/v1/subaccount/list?' + data;

https.get(url, (res) =&gt; {
  let data = '';

  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  console.log("Erreur: " + err.message);
});
        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class RécupérationDesSousComptes {
    public static void main(String[] args) {
        try {
            // Prepare data for GET request
            String apiKey = "YOUR_API_KEY";

            // Create GET request URL
            String urlString = "https://api.smspartner.fr/v1/subaccount/list?" +
                    "apiKey=" + apiKey;

            // Create URL object
            URL url = new URL(urlString);

            // Create HTTP connection
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(10000);
            connection.setReadTimeout(10000);

            // Send GET request
            int responseCode = connection.getResponseCode();

            // Get response
            BufferedReader reader;
            if (responseCode &gt;= 200 &amp;&amp; responseCode &lt;= 299) {
                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            } else {
                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));
            }

            StringBuilder response = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            reader.close();

            // Process your response here
            System.out.println(response.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
 import SwiftUI

struct ListeDesSousComptes: View {
    @State private var result: String = "Loading..."

    var body: some View {
        VStack {
            Text("Liste Des Sous Comptes")
                .font(.title)
                .padding()

            Text(result)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: loadSubAccounts)
    }

    func loadSubAccounts() {
        let apiKey = "YOUR_API_KEY"
        let urlString = "https://api.smspartner.fr/v1/subaccount/list?apiKey=(apiKey)"

        guard let url = URL(string: urlString) else {
            print("Invalid URL")
            return
        }

        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            if let error = error {
                print("Error: (error)")
            } else if let data = data {
                let resultString = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    self.result = resultString ?? "Error"
                }
            }
        }

        task.resume()
    }
}

struct ListeDesSousComptes_Previews: PreviewProvider {
    static var previews: some View {
        ListeDesSousComptes()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
package main

import (
    "io/ioutil"
    "log"
    "net/http"
)

func main() {
    apiKey := "YOUR_API_KEY"
    url := "https://api.smspartner.fr/v1/subaccount/list?apiKey=" + apiKey

    // Create GET request
    resp, err := http.Get(url)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Read the response
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response: %v", err)
    }

    // Print the response body
    log.Printf("Response body: %s", string(body))
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        string apiKey = "YOUR_API_KEY";
        var uri = new Uri($"https://api.smspartner.fr/v1/subaccount/list?apiKey={apiKey}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            string result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("GET request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
  <span class="hljs-attr">"total"</span>: <span class="hljs-number">29</span>,
  <span class="hljs-attr">"nb_per_page"</span>: <span class="hljs-number">20</span>,
  <span class="hljs-attr">"page"</span>: <span class="hljs-number">1</span>,
  <span class="hljs-attr">"data"</span>: [
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-number">1</span>,
      <span class="hljs-attr">"email"</span>: <span class="hljs-string">"email1"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"simple"</span>,
      <span class="hljs-attr">"token"</span>: <span class="hljs-string">"token1"</span>, <span class="hljs-comment">//Est utilisé comme identifiant du sous-compte pour ajouter des crédits</span>
      <span class="hljs-attr">"apiKey"</span>: <span class="hljs-string">"ApiKey sous compte"</span>,
      <span class="hljs-attr">"createdAt"</span>: <span class="hljs-string">"2016-03-04 11:23:14"</span>,
      <span class="hljs-attr">"credits"</span>: {
          <span class="hljs-attr">"balance"</span>: <span class="hljs-string">"0.800"</span>,
          <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
      }
    },
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-number">2</span>,
      <span class="hljs-attr">"email"</span>: <span class="hljs-string">"email2"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"simple"</span>,
      <span class="hljs-attr">"token"</span>: <span class="hljs-string">"token2"</span>,
      <span class="hljs-attr">"apiKey"</span>: <span class="hljs-string">"ApiKey2 du sous compte"</span>,
      <span class="hljs-attr">"createdAt"</span>: <span class="hljs-string">"2016-03-04 11:23:14"</span>,
      <span class="hljs-attr">"credits"</span>: {
          <span class="hljs-attr">"balance"</span>: <span class="hljs-string">"10.245"</span>,
          <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
      }
    }
  ]
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/sous-comptes/sous_comptep4/" rel="alternate" type="text/html" />
    <published>2024-07-30T09:35:07+00:00</published>
    <updated>2024-07-30T09:35:07+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/sous-comptes/sous_comptep3/</id>
    <title>Supprimer un sous-compte</title>
    <content type="html">
      <![CDATA[<h1 id="supprimer-un-sous-compte">Supprimer un sous-compte</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">DELETE</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;"> http://api.smspartner.fr/v1/subaccount/remove</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>token</strong></td>
<td>Identifiant du contact.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<pre><code class="language-bash hljs bash">{
curl --location --request DELETE <span class="hljs-string">'http://api.smspartner.fr/v1/subaccount/remove'</span> 
--header <span class="hljs-string">'Content-Type: application/json'</span> 
--data-raw <span class="hljs-string">'{
   "apiKey": "YOUR_API_KEY",
   "token": "TOKEN SUBACCOUNT"}'</span>
}</code></pre>
<h2 id="reponses">Réponses</h2>
<pre><code class="language-json hljs json">{
   <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
   <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur :</p>
<pre><code class="language-json hljs json">{
<span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
<span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
<span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clef API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">token est requis</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">404</td>
<td style="text-align: left;">Le sous-compte n’existe pas</td>
</tr>
</tbody>
</table>
<p><br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/sous-comptes/sous_comptep3/" rel="alternate" type="text/html" />
    <published>2024-07-30T09:23:45+00:00</published>
    <updated>2024-07-30T09:23:45+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/sous-comptes/sous_comptep2/</id>
    <title>Création de sous-compte</title>
    <content type="html">
      <![CDATA[<h1 id="creation-de-sous-compte">Création de sous-compte</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/subaccount/create</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l\'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>type</strong></td>
<td>Type de sous-compte : ce choix est définitif, il ne sera plus possible de le modifier  <br> <strong>simple:</strong> <br> <ul> <li>Le sous compte ne recevra aucun email ni SMS.</li> <li> Aucun numéros de téléphone demandé. </li> <li>L’achat n’est pas permis. </li></ul>. <br> <strong>advanced :</strong> <ul> <li>Un email valide est demandé. </li> <li>Le processus d’inscription est identique à celui d’un compte standard. </li> <li>Un numéro de téléphone mobile sera demandé à l’inscription.</li></ul></td>
</tr>
<tr>
<td style="text-align: center;"><strong>parameters</strong></td>
<td><strong>Sous-compte advanced</strong> <br><br> <u> <strong>email</strong> :</u> Email valide du titulaire du compte <br> <u> <strong>isBuyer</strong> :</u> Si <strong>isBuyer=1</strong> le sous-compte pourra acheter ces propres SMS. <br> <u><strong>creditToAttribute (optionnel) :</strong> </u> Crédit en euros ajouté au sous-compte lors de la création. Ce crédit sera déduit du compte principal. <br> <u> <strong>title (optionnel) : </strong> </u> Nom du sous-compte. <br> <u> <strong>firstname (optionnel) :</strong> </u> Prénom du titulaire du sous-compte.<br> <u> <strong>lastname (optionnel):</strong> </u> Nom du titulaire du sous-compte. <br> <br><br>  <strong>Sous-compte simple</strong> <br><br> <u> <strong>email</strong> :</u> Email valide du titulaire du compte <br> <u><strong>creditToAttribute (optionnel) :</strong> </u> Crédit en euros ajouté au sous-compte lors de la création. Ce crédit sera déduit du compte principal. <br> <u> <strong>title (optionnel) : </strong> </u>  Nom du sous-compte. <br> <u> <strong>firstname (optionnel) :</strong> </u><br> Prénom du titulaire du sous-compte.<br> <u> <strong>lastname (optionnel):</strong> </u> Nom du titulaire du sous-compte. <br> <br></td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<p>_format : Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong> |</p>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
       // Prepare data for POST request
        $fields = array(
            'apiKey'=&gt; 'YOUR API KEY',
            'type'=&gt; 'advanced',
            'parameters'=&gt;array(
                'email':'aaaa@bbb.ccc',
                'creditToAttribute':10,
                'isBuyer':0,
                'firstname':'prenom',
                'lastname':'nom'
            ));

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/subaccount/create');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #send sms
    url = base_url &amp; "subaccount/create"
    #note : utiliser une librairie JSON en production, par exemple :
    #https//www.nuget.org/packages/Newtonsoft.Json/
    Dim parameters As String = String.Format(
        "{{""apiKey"":""{0}"",""type"":""{1}"",""parameters"":""{2}""}}",
        apiKey,
        "advanced",
        {"email":"aaaa@bbb.ccc","creditToAttribute":10,"isBuyer":0,"firstname":"prenom","lastname":"nom"})
    Console.Write(parameters)
    apiRequest("POST", url, parameters)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def create(self,creditToAdd,userId):

        data = {"apiKey":APIKEY,"type":"advanced","parameters": {"email":"aaaa@bbb.ccc","creditToAttribute":10,"isBuyer":0,"firstname":"prenom","lastname":"nom"}}

        url = URL + "/subaccount/create"
        r = requests.post(url, data=json.dumps(data), verify=False)

        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H  "Content-Type: application/json" 
curl -H  "Content-Type: application/json" -X POST -d '{"apiKey":"xxxxx","type":"advanced","parameters":
{"email":"aaaa@bbb.ccc","creditToAttribute":10,"isBuyer":0,"firstname":"prenom","lastname":"nom"}}'
 https://api.smspartner.fr/v1/subaccount/create
  </code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">

const https = require("https");

// Remplacez par votre clé API
const apiKey = "VOTRE_CLÉ_API";

// Préparer les données pour la requête POST
const data = JSON.stringify({
  apiKey: apiKey,
  type: "advanced",
  parameters: {
    email: "aaaa@bbb.ccc",
    creditToAttribute: 10,
    isBuyer: 0,
    firstname: "prenom",
    lastname: "nom",
  },
});

// Définir les options pour la requête HTTP POST vers l'API SMS Partner
const options = {
  hostname: "api.smspartner.fr",
  port: 443,
  path: "/v1/subaccount/create",
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    "Content-Length": data.length,
    "cache-control": "no-cache",
  },
};

// Effectuer la requête HTTP POST avec les options et données définies précédemment
const req = https.request(options, (res) =&gt; {
  console.log(`statusCode: ${res.statusCode}`);

  // Afficher les données de réponse de l'API sur la sortie standard
  res.on("data", (d) =&gt; {
    process.stdout.write(d);
  });
});

// Afficher en cas d'erreur lors de l'exécution de la requête HTTP POST
req.on("error", (error) =&gt; {
  console.error(error);
});

// Envoyer les données de l'objet 'data' à la demande
req.write(data);
// Terminer la demande HTTP POST
req.end();
        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.OutputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.stream.Collectors;
import org.json.JSONObject;

public class SubAccountCreation {
    public static void main(String[] args) {
        try {
            // Remplacez par votre clé API
            String apiKey = "VOTRE_CLÉ_API";

            // Préparer les données pour la requête POST
            JSONObject parameters = new JSONObject();
            parameters.put("email", "aaaa@bbb.ccc");
            parameters.put("creditToAttribute", 10);
            parameters.put("isBuyer", 0);
            parameters.put("firstname", "prenom");
            parameters.put("lastname", "nom");

            JSONObject json = new JSONObject();
            json.put("apiKey", apiKey);
            json.put("type", "advanced");
            json.put("parameters", parameters);

            URL url = new URL("https://api.smspartner.fr/v1/subaccount/create");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Content-Type", "application/json");
            conn.setRequestProperty("cache-control", "no-cache");
            conn.setDoOutput(true);

            // Écriture des données JSON dans le corps de la requête HTTP
            OutputStream os = conn.getOutputStream();
            os.write(json.toString().getBytes());
            os.flush();

            // Lecture de la réponse de l'API
            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String response = br.lines().collect(Collectors.joining());

            // Afficher la réponse JSON
            System.out.println(response);

            // Fermeture de la connexion HTTP
            conn.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">

import SwiftUI

// Structure pour la vue "CreationSubCompte"
struct CreationSubCompte: View {
    var body: some View {
        // Un bouton qui appelle la fonction createSubaccount() lorsqu'il est pressé
        Button(action: {
            createSubaccount()
        }) {
            Text("Créer sous-compte")
                .font(.system(size: 20))
                .foregroundColor(.white)
                .frame(minWidth: 0, maxWidth: .infinity)
                .padding()
                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))
                .cornerRadius(10)
                .padding(.horizontal)
        }
    }

    // Fonction pour créer un sous-compte
    func createSubaccount() {
        let url = URL(string: "https://api.smspartner.fr/v1/subaccount/create")! // URL pour créer un sous-compte

        // Paramètres pour la requête
        let parameters: [String: Any] = [
            "apiKey": "TU_CLAVE_API", // Votre clé API
            "type": "advanced",
            "parameters": [
                "email": "aaaa@bbb.ccc", // Adresse e-mail du sous-compte
                "creditToAttribute": 10, // Crédit à attribuer
                "isBuyer": 0, // Indique si le sous-compte est un acheteur
                "firstname": "prenom", // Prénom de l'utilisateur du sous-compte
                "lastname": "nom" // Nom de l'utilisateur du sous-compte
            ] as [String : Any]
        ]

        // Création de la requête
        var request = URLRequest(url: url)
        request.httpMethod = "POST"
        request.setValue("application/json", forHTTPHeaderField: "Content-Type")
        request.setValue("no-cache", forHTTPHeaderField: "cache-control")

        // Ajout du corps de la requête
        do {
            request.httpBody = try JSONSerialization.data(withJSONObject: parameters, options: .prettyPrinted)
        } catch let error {
            print(error.localizedDescription)
        }

        // Tâche pour envoyer la requête et recevoir la réponse
        let task = URLSession.shared.dataTask(with: request) { data, response, error in
            // Si une erreur survient, on l'affiche
            if let error = error {
                print("Erreur : (error)")
            }
            // Sinon, on traite les données reçues
            else if let data = data {
                do {
                    // On tente de convertir les données reçues en JSON
                    if let json = try JSONSerialization.jsonObject(with: data, options: .mutableContainers) as? [String: Any] {
                        print(json) // On affiche le JSON obtenu
                    }
                } catch let error {
                    print("Erreur : (error)")
                }
            }
        }

        task.resume() // On lance la tâche
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
package main

import (
    "bytes"
    "encoding/json"
    "io/ioutil"
    "log"
    "net/http"
)

type Fields struct {
    APIKey     string      `json:"apiKey"`
    Type       string      `json:"type"`
    Parameters Parameters `json:"parameters"`
}

type Parameters struct {
    Email            string `json:"email"`
    CreditToAttribute int    `json:"creditToAttribute"`
    IsBuyer          int    `json:"isBuyer"`
    Firstname        string `json:"firstname"`
    Lastname         string `json:"lastname"`
}

func main() {
    // Prepare data for POST request
    data := Fields{
        APIKey: "YOUR_API_KEY",
        Type:   "advanced",
        Parameters: Parameters{
            Email:            "aaaa@bbb.ccc",
            CreditToAttribute: 10,
            IsBuyer:          0,
            Firstname:        "prenom",
            Lastname:         "nom",
        },
    }

    payloadBuf := new(bytes.Buffer)
    json.NewEncoder(payloadBuf).Encode(data)

    // Create POST request
    req, err := http.NewRequest("POST", "https://api.smspartner.fr/v1/subaccount/create", payloadBuf)
    if err != nil {
        log.Fatalf("Error creating request: %v", err)
    }
    req.Header.Add("Content-Type", "application/json")

    // Create HTTP client and send the request
    client := &amp;http.Client{}
    resp, err := client.Do(req)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Read the response
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response: %v", err)
    }

    // Print the response status and body
    log.Printf("Response status: %s", resp.Status)
    log.Printf("Response body: %s", string(body))
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var fields = new
        {
            apiKey = "VOTRE_CLÉ_API",
            type = "advanced",
            parameters = new 
            {
                email = "aaaa@bbb.ccc",
                creditToAttribute = 10,
                isBuyer = 0,
                firstname = "prenom",
                lastname = "nom"
            }
        };

        var json = JsonConvert.SerializeObject(fields);

        var uri = new Uri("https://api.smspartner.fr/v1/subaccount/create");
        var content = new StringContent(json, Encoding.UTF8, "application/json");

        HttpResponseMessage response = await client.PostAsync(uri, content);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("La requête POST a échoué avec le code d'état : " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
 <span class="hljs-attr">"success"</span>:<span class="hljs-literal">true</span>,
 <span class="hljs-attr">"code"</span>:<span class="hljs-number">200</span>,
 <span class="hljs-attr">"subaccount"</span>:
 {
    <span class="hljs-attr">"email"</span>:<span class="hljs-string">"aaaa@bbb.ccc"</span>,
    <span class="hljs-attr">"token"</span>:<span class="hljs-string">"token"</span>
 },
 <span class="hljs-attr">"sendConfirmMailTo"</span>:<span class="hljs-string">"aaaa@bbb.ccc"</span>,
 <span class="hljs-attr">"parent_email"</span>:<span class="hljs-string">"emailparent@ddd.eee"</span>
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">Vous n’avez pas l’authorisation</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td style="text-align: left;">isBuyer est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td style="text-align: left;">Le type est requis (simple ou advanced)</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td style="text-align: left;">Le type de sous-compte n’existe pas (simple ou advanced)</td>
</tr>
<tr>
<td style="text-align: center;">6</td>
<td style="text-align: left;">L’email est requis</td>
</tr>
<tr>
<td style="text-align: center;">7</td>
<td style="text-align: left;">Un compte existe déjà avec cet email</td>
</tr>
<tr>
<td style="text-align: center;">8</td>
<td style="text-align: left;">creditToAttribute doit être supérieurr à 0</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td style="text-align: left;">La balance doit être supérieur à 0</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/sous-comptes/sous_comptep2/" rel="alternate" type="text/html" />
    <published>2024-07-29T15:29:56+00:00</published>
    <updated>2024-07-29T15:29:56+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/sous-comptes/sous_comptep1/</id>
    <title>Activation</title>
    <content type="html">
      <![CDATA[<h1 id="activation-et-creation-des-sous-comptes">Activation et création des sous-comptes</h1>
<h2 id="demande-d-activation-des-sous-comptes">Demande d’activation des sous-comptes</h2>
<blockquote>
<p>SMS Partner vous donne la possibilité de créer des sous-comptes. Ainsi vous pouvez gérer un nombre illimité de sous-compte à partir de votre compte principal.</p>
</blockquote>
<p><strong>Activation des sous-comptes</strong></p>
<p>Pour activer cette fonctionnalité, il suffit de contacter notre <a href="https://www.smspartner.fr/contact" rel="noopener noreferrer nofollow">équipe technique.</a>.</p>
<h2 id="creation-des-sous-comptes">Création des sous-comptes</h2>
<blockquote>
<p>Pour créer des sous-compte à partir de votre compte maitre, il y a deux solutions possibles.</p>
</blockquote>
<ul>
<li>
<p>Par l’API SMS : voir  <a href="sous_comptep2/">la page création de sous-compte</a>.</p>
</li>
<li>
<p>Par fichier Excel: à partir du fichier à télécharger: Fichier modèle <a href="https://view.officeapps.live.com/op/view.aspx?src=https%3A%2F%2Fmy.smspartner.fr%2Fsubaccount_model.xls&amp;wdOrigin=BROWSELINK" rel="noopener noreferrer nofollow">Fichier modéle</a>. <br> Il vous suffit de nous le renvoyer pour que nous l’intégrions à votre compte.</p>
</li>
<li>
<p>Par inscription manuelle: en créant manuellement les sous comptes depuis <a href="https://my.smspartner.fr/connexion" rel="noopener noreferrer nofollow">la plateforme SMSPartner</a>.</p>
</li>
</ul>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/sous-comptes/sous_comptep1/" rel="alternate" type="text/html" />
    <published>2024-07-29T13:48:53+00:00</published>
    <updated>2024-07-29T13:48:53+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep4/</id>
    <title>Gestion des réponses</title>
    <content type="html">
      <![CDATA[<h1 id="reponse-sur-un-numero-long">Réponse sur un numéro long</h1>
<p>SMS Partner vous propose la location d’un numéro long (exemple : 06 XX XX XX XX).
Pour en savoir plus sur la création d’un numéro dédié, <a href="https://www.smspartner.fr/contact" rel="noopener noreferrer nofollow">contactez-nous</a>.</p>
<div class="alert alert-info">
A noter : Pour recevoir les réponses: paramétrer votre <strong> URL de réception des réponses </strong> dans votre onglet   <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">API SMS </a>. </div>
<h2 id="exemple-de-reponse-sur-un-sms-simple-160-caracteres-maximum">Exemple de réponse sur un SMS simple (160 caractères maximum)</h2>
<pre><code class="language-json hljs json">Array
(
    'msisdn' =&gt; '<span class="hljs-number">33</span>xxxxxxxxx', <span class="hljs-comment">//numéro de la personne qui envoi le SMS</span>
    'to' =&gt; '<span class="hljs-number">33</span>xxxxxxxxx',
    'messageId' =&gt; '<span class="hljs-number">02000000</span>XXXXXXXXX',
    'text' =&gt; 'Test',
    'type' =&gt;  'text',
    'keyword' =&gt; 'Test',
    'message-timestamp' =&gt; '<span class="hljs-number">2016</span><span class="hljs-number">-03</span><span class="hljs-number">-10</span> <span class="hljs-number">09</span>:<span class="hljs-number">51</span>:<span class="hljs-number">46</span>'
)</code></pre>
<h2 id="exemple-de-reponse-sur-un-sms-long-plus-de-160-caracteres">Exemple de réponse sur un SMS long (plus de 160 caractères)</h2>
<pre><code class="language-json hljs json">Array
(
    'msisdn' =&amp;gt; '<span class="hljs-number">33</span>xxxxxxxxx', <span class="hljs-comment">//numéro de la personne qui envoi le SMS</span>
    'to' =&amp;gt; '<span class="hljs-number">33</span>xxxxxxxxx',
    'messageId' =&amp;gt; '<span class="hljs-number">02000000</span>YYYYYYYY',
    'concat' =&amp;gt; '<span class="hljs-literal">true</span>',
    'concat-ref' =&amp;gt; '<span class="hljs-number">171</span>',
    'concat-total' =&amp;gt; '<span class="hljs-number">2</span>',
    'concat-part' =&amp;gt; '<span class="hljs-number">1</span>',
    'text' =&amp;gt; '   Message long....',
    'type' =&amp;gt; 'text',
    'keyword' =&amp;gt; 'MESSAGELONG',
    'message-timestamp' =&amp;gt; '<span class="hljs-number">2016</span><span class="hljs-number">-03</span><span class="hljs-number">-09</span> <span class="hljs-number">16</span>:<span class="hljs-number">00</span>:<span class="hljs-number">30</span>'
)

Array
(
    'msisdn' =&amp;gt; '<span class="hljs-number">33</span>xxxxxxxxx', <span class="hljs-comment">//numéro de la personne qui envoi le SMS</span>
    'to' =&amp;gt; '<span class="hljs-number">33</span>xxxxxxxxx',
    'messageId' =&amp;gt; '<span class="hljs-number">02000000</span>XXXXXXXX',
    'concat' =&amp;gt; '<span class="hljs-literal">true</span>',
    'concat-ref' =&amp;gt; '<span class="hljs-number">171</span>',
    'concat-total' =&amp;gt; '<span class="hljs-number">2</span>',
    'concat-part' =&amp;gt; '<span class="hljs-number">2</span>',
    'text' =&amp;gt; '....très long',
    'type' =&amp;gt; 'text',
    'keyword' =&amp;gt; 'TRESLONG',
    'message-timestamp' =&amp;gt; '<span class="hljs-number">2016</span><span class="hljs-number">-03</span><span class="hljs-number">-09</span> <span class="hljs-number">16</span>:<span class="hljs-number">00</span>:<span class="hljs-number">31</span>'
)</code></pre>
<p><br></p>
<h1 id="reponse-sur-un-numero-court-sms-premium">Réponse sur un numéro court (SMS Premium)</h1>
<p>Après l’envoi d’une campagne depuis notre numéro court, SMS Partner vous permet de recevoir des réponses.
Pour en savoir plus, <a href="https://www.smspartner.fr/contact" rel="noopener noreferrer nofollow">contactez-nous</a>.</p>
<div class="alert alert-info">
A noter : Pour recevoir les réponses: paramétrer votre <strong> URL de réception des réponses </strong> dans votre onglet   <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">API SMS </a>. </div>
<h2 id="exemple-de-reponse-depuis-notre-numero-court">Exemple de réponse depuis notre numéro court</h2>
<pre><code class="language-json hljs json">Array (
  'type' =&gt; 'response',
  'phone_number' =&gt; '+<span class="hljs-number">336</span>XXXXXXX1',
  'text' =&gt; 'Ma réponse',
  'message_id' =&gt; '<span class="hljs-number">123</span>'
)</code></pre>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep4/" rel="alternate" type="text/html" />
    <published>2024-07-29T12:43:11+00:00</published>
    <updated>2024-07-29T12:43:11+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep3/</id>
    <title>Supprimer un numéro</title>
    <content type="html">
      <![CDATA[<h1 id="supprimer-un-numero-de-la-liste-des-stops">Supprimer un numéro de la liste des stops</h1>
<p>Cette requête permet de supprimer un numéro à la liste des stops.</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;"> https://api.smspartner.fr/v1/stop-sms/delete</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>id</strong></td>
<td>ID du numéro à supprimer.. <br> Il se trouve dans <a href="../envoyer-des-sms/envois_smsp4/">la réponse lors de la récupération de la liste des stops.</a>.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>_format</strong></td>
<td>Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong></td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
       // Prepare data for GET request
        $data = 'apiKey=YOUR_API_KEY&amp;id=666';

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/stop-sms/delete?'.$data);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"
    Dim id As Integer = XXX

    #check credits
    Dim url As String
    url = base_url &amp; "stop-sms/delete" &amp; "?apiKey=" &amp; apiKey &amp; "&amp;id=" &amp; id

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def del_stop(self,id):
        url = URL + "/stop-sms/delete?apiKey=" + API_KEY + "&amp;id=" + id
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status

   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H  "Content-Type: application/json" 
-X GET  https://api.smspartner.fr/v1/stop-sms/delete?apiKey=xxx&amp;id=300
    </code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">

const https = require('https');

let data = 'apiKey=your-api-key&amp;id=333';
let url = 'https://api.smspartner.fr/v1/stop-sms/delete?' + data;

https.get(url, (res) =&gt; {
  let data = '';
  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  console.log("Erreur: " + err.message);
});
        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class StopSmsDeleteList {
    public static void main(String[] args) {
        try {
            // Prepare data for GET request
            String apiKey = "YOUR_API_KEY";
            String id = "666";

            // Create GET request URL
            String urlString = "https://api.smspartner.fr/v1/stop-sms/delete?" +
                    "apiKey=" + apiKey + "&amp;id=" + id;

            // Create URL object
            URL url = new URL(urlString);

            // Create HTTP connection
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(10000);
            connection.setReadTimeout(10000);

            // Send GET request
            int responseCode = connection.getResponseCode();

            // Get response
            BufferedReader reader;
            if (responseCode &gt;= 200 &amp;&amp; responseCode &lt;= 299) {
                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            } else {
                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));
            }

            StringBuilder response = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            reader.close();

            // Process your response here
            System.out.println(response.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">

import SwiftUI

struct StopSmsDeleteList: View {
    @State private var result: String = "Loading..."

    var body: some View {
        VStack {
            Text("Stop Sms Delete")
                .font(.title)
                .padding()

            Text(result)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: deleteStopSms)
    }

    func deleteStopSms() {
        let apiKey = "YOUR_API_KEY"
        let id = "666"
        let urlString = "https://api.smspartner.fr/v1/stop-sms/delete?apiKey=(apiKey)&amp;id=(id)"

        guard let url = URL(string: urlString) else {
            print("URL inválida")
            return
        }

        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            if let error = error {
                print("Error: (error)")
            } else if let data = data {
                let result = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    self.result = result ?? "Error"
                }
            }
        }

        task.resume()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">

package main

import (
    "io/ioutil"
    "log"
    "net/http"
    "time"
)

func main() {
    // Prepare data for GET request
    apiKey := "YOUR_API_KEY"
    id := "666"

    // Create HTTP client with timeout
    client := &amp;http.Client{Timeout: 10 * time.Second}

    // Create GET request URL
    url := "https://api.smspartner.fr/v1/stop-sms/delete?apiKey=" + apiKey + "&amp;id=" + id

    // Send GET request
    resp, err := client.Get(url)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Process your response here
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response: %v", err)
    }

    log.Printf("Response: %s", body)
}
   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">

using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "VOTRE_CLÉ_API";
        var id = "666";
        var uri = new Uri($"https://api.smspartner.fr/v1/stop-sms/delete?apiKey={apiKey}&amp;id={id}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("La demande GET a échoué avec le code d'état : " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>:<span class="hljs-number">200</span>
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
  <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">Le numéro de téléphone est requis</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td style="text-align: left;">L’ID du numéro est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td style="text-align: left;">L’ID du numéro introuvable</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep3/" rel="alternate" type="text/html" />
    <published>2024-07-29T10:51:03+00:00</published>
    <updated>2024-07-29T10:51:03+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep2/</id>
    <title>Ajouter un stop SMS</title>
    <content type="html">
      <![CDATA[<h1 id="ajouter-un-numero-a-la-liste-des-stops">Ajouter un numéro à la liste des stops</h1>
<p>Cette requête permet d’ajouter un numéro à la liste des stops.</p>
<div class="alert alert-info">
A noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ; cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme.    </div>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style="color: #FF4C4C; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/stop-sms/add</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>phoneNumber</strong></td>
<td>Numéros de mobile à ajouter. <br> Ils peuvent être :  <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul></td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>_format</strong></td>
<td>Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong></td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
  // Prepare data for POST request
        $fields = array(
            'apiKey'=&gt; 'YOUR API KEY',
            'phoneNumber'=&gt; '+336xxxxxxxx'
        );

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/stop-sms/add');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #send sms
    url = base_url &amp; "stop-sms/add"
    #note : utiliser une librairie JSON en production, par exemple :
    #https//www.nuget.org/packages/Newtonsoft.Json/
    Dim parameters As String = String.Format(
        "{{""apiKey"":""{0}"",""phoneNumbers"":""{1}""}}",
        apiKey,
        "+33XXXXXXXXX")
    Console.Write(parameters)
    apiRequest("POST", url, parameters)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
 # std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def add_stop(self,phone_numbers):

        data = OrderedDict([
            ("apiKey", API_KEY),
            ("phoneNumbers", phone_numbers)
        ])

        url = URL + "/stop-sms/add"
        r = requests.post(url, data=json.dumps(data), verify=False)

        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status

   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H  "Content-Type: application/json" 
-X POST -d '{"apiKey":"xxxxx","phoneNumber":"xxxx"}'
 https://api.smspartner.fr/v1/stop-sms/add
    </code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require('https');

// ce code permet d'ajouter un numéro à la liste des numéros stop SMS
let data = JSON.stringify({
  apiKey: 'VOTRE_API_KEY',
  phoneNumber: '+336XXXXXXXX',
});

let options = {
  hostname: 'api.smspartner.fr',
  path: '/v1/stop-sms/add',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': data.length
  }
};

let req = https.request(options, (res) =&gt; {
  let data = '';

  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  console.log("Error: " + err.message);
});

req.write(data);
req.end();

        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">

import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class StopSmsAddList {
    public static void main(String[] args) {
        try {
            // Prepare data for POST request
            String apiKey = "YOUR_API_KEY";
            String phoneNumber = "+336xxxxxxxx";

            // Create JSON payload
            String jsonPayload = "{"apiKey": "" + apiKey + "", "phoneNumber": "" + phoneNumber + ""}";

            // Create POST request
            URL url = new URL("https://api.smspartner.fr/v1/stop-sms/add");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "application/json");
            connection.setDoOutput(true);

            // Send POST request
            OutputStream outputStream = connection.getOutputStream();
            outputStream.write(jsonPayload.getBytes());
            outputStream.flush();
            outputStream.close();

            // Get response
            int responseCode = connection.getResponseCode();
            if (responseCode &gt;= 200 &amp;&amp; responseCode &lt;= 299) {
                // Process your successful response here
                System.out.println("Stop SMS request successful");
            } else {
                // Process your error response here
                System.out.println("Stop SMS request failed");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">

 import SwiftUI

struct StopSmsAddList: View {
    @State private var result: String = "Loading..."

    var body: some View {
        VStack {
            Text("Stop SMS Add")
                .font(.title)
                .padding()

            Text(result)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: addStopSms)
    }

    func addStopSms() {
        let apiKey = "YOUR API KEY"
        let phoneNumber = "+336xxxxxxxx"
        let urlString = "https://api.smspartner.fr/v1/stop-sms/add"

        guard let url = URL(string: urlString) else {
            print("Invalid URL")
            return
        }

        let fields = ["apiKey": apiKey, "phoneNumber": phoneNumber]

        var request = URLRequest(url: url)
        request.httpMethod = "POST"
        request.setValue("application/json", forHTTPHeaderField: "Content-Type")

        do {
            request.httpBody = try JSONSerialization.data(withJSONObject: fields, options: [])
        } catch {
            print("Failed to serialize data: (error.localizedDescription)")
            return
        }

        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
            if let error = error {
                print("Error: (error)")
            } else if let data = data {
                let result = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    self.result = result ?? "Error"
                }
            }
        }

        task.resume()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">

  package main

import (
    "bytes"
    "encoding/json"
    "log"
    "net/http"
    "time"
)

func main() {
    // Prepare data for POST request
    data := map[string]string{
        "apiKey":      "YOUR_API_KEY",
        "phoneNumber": "+336xxxxxxxx",
    }
    jsonData, err := json.Marshal(data)
    if err != nil {
        log.Fatalf("Error marshaling data: %v", err)
    }

    // Create HTTP client
    client := &amp;http.Client{Timeout: 10 * time.Second}

    // Create POST request
    req, err := http.NewRequest("POST", "https://api.smspartner.fr/v1/stop-sms/add", bytes.NewBuffer(jsonData))
    if err != nil {
        log.Fatalf("Error creating request: %v", err)
    }

    req.Header.Set("Content-Type", "application/json")

    // Send POST request
    resp, err := client.Do(req)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Process your response here
    log.Printf("Response status code: %d", resp.StatusCode)
}

   </code></pre>
  </div>

  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">

using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var data = new
        {
            apiKey = "YOUR_API_KEY",
            phoneNumber = "+336xxxxxxxx"
        };

        var json = JsonConvert.SerializeObject(data);
        var content = new StringContent(json, Encoding.UTF8, "application/json");

        HttpResponseMessage response = await client.PostAsync("https://api.smspartner.fr/v1/stop-sms/add", content);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("La requête POST a échoué avec le code de statut: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>:<span class="hljs-number">200</span>
    <span class="hljs-string">"stopId"</span>: <span class="hljs-number">300</span>
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
  <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">Le numéro de téléphone est requis</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td style="text-align: left;">L’ID du message est requis</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td style="text-align: left;">Le numéro de téléphone est invalide</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep2/" rel="alternate" type="text/html" />
    <published>2024-07-29T10:08:06+00:00</published>
    <updated>2024-07-29T10:08:06+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep1/</id>
    <title>Liste des stops</title>
    <content type="html">
      <![CDATA[<h1 id="liste-des-stops">Liste des stops</h1>
<p>Cette requête permet de récupérer la liste des numéros qui ont envoyé un stop.</p>
<div class="alert alert-info">
   A noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ; cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme.
    </div>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: red; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/stop-sms/list</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>_format</strong></td>
<td>Format de la réponse. Vous pouvez choisir entre <strong> JSON</strong> ou <strong> XML </strong>. Par défaut, le format de réponse est <strong> JSON. </strong></td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? 
 // Prepare data for GET request
        $data = 'apiKey=YOUR_API_KEY';

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/stop-sms/list?'.$data);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"
    Dim phoneNumber As String = "06XXXXXXXX"
    Dim messageId As Integer = XXX

    #check credits
    Dim url As String
    url = base_url &amp; "stop-sms/list" &amp; "?apiKey=" &amp; apiKey

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
 <pre><code class="language-python">
  # std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def get_list_stop(self):
        url = URL + "/stop-sms/list?apiKey=" + API_KEY
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H "Content-Type: application/json" -X 
GET https://api.smspartner.fr/v1/stop-sms/list?apiKey=xxx
    </code></pre>
  </div>

    <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require('https');

const apiKey = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';

const options = {
  hostname: 'api.smspartner.fr',
  port: 443,
  path: `/v1/stop-sms/list?apiKey=${apiKey}`,
  method: 'GET',
};

const req = https.request(options, (res) =&gt; {
  console.log(`statusCode: ${res.statusCode}`);

  let rawData = '';
  res.on('data', (chunk) =&gt; {
    rawData += chunk;
  });

  res.on('end', () =&gt; {
    try {
      const parsedData = JSON.parse(rawData);
      // Process your response here
      console.log(parsedData);
    } catch (e) {
      console.error(e.message);
    }
  });
});

req.on('error', (error) =&gt; {
  console.error(error);
});

req.end();
        </code></pre>
  </div>

  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.stream.Collectors;
import org.json.JSONObject;

public class StopSMSList {
    public static void main(String[] args) {
        try {
            String apiKey = "YOUR_API_KEY";
            URL url = new URL("https://api.smspartner.fr/v1/stop-sms/list?apiKey=" + apiKey);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.setRequestProperty("Content-Type", "application/json");
            conn.setRequestProperty("cache-control", "no-cache");

            // Reading API response
            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String response = br.lines().collect(Collectors.joining());

            // Parse JSON response
            JSONObject jsonResponse = new JSONObject(response);

            // Display the JSON response
            System.out.println(jsonResponse.toString(2));

            // Closing HTTP connection
            conn.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
 import SwiftUI

// Structure pour la vue "ListStopSMS"
struct ListStopSMS: View {
    var body: some View {
        // Un bouton qui appelle la fonction ListStopSMS() lorsqu'il est pressé
        Button(action: {
            ListStopSMS()
        }) {
            Text("Check Stop SMS List")
                .font(.system(size: 20))
                .foregroundColor(.white)
                .frame(minWidth: 0, maxWidth: .infinity)
                .padding()
                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))
                .cornerRadius(10)
                .padding(.horizontal)
        }
    }

    // Fonction pour récupérer la liste des SMS stoppés
    func ListStopSMS() {
        let apiKey = "XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX" // Votre clé API
        let urlString = "https://api.smspartner.fr/v1/stop-sms/list?apiKey=(apiKey)" // URL pour récupérer la liste des SMS stoppés

        // On vérifie que l'URL est correctement formée
        guard let url = URL(string: urlString) else {
            print("URL invalide")
            return
        }

        // Tâche pour récupérer les données de l'URL
        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            // Si une erreur survient, on l'affiche
            if let error = error {
                print("Erreur : (error)")
            }
            // Sinon, on affiche les données reçues
            else if let data = data {
                let str = String(data: data, encoding: .utf8)
                print("Données reçues :
(str ?? "")")
            }
        }

        task.resume() // On lance la tâche
    }
}

// Aperçu de la vue
struct StopSMSList_Previews: PreviewProvider {
    static var previews: some View {
        ListStopSMS()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
<pre><code class="language-go">
  package main

import (
    "io/ioutil"
    "log"
    "net/http"
    "time"
)

func main() {
    // Prepare data for GET request
    apiKey := "YOUR_API_KEY"

    // Create GET request URL
    url := "https://api.smspartner.fr/v1/stop-sms/list?" +
        "apiKey=" + apiKey

    // Create HTTP client
    client := &amp;http.Client{Timeout: 10 * time.Second}

    // Send GET request
    resp, err := client.Get(url)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Get response
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response body: %v", err)
    }

    // Process your response here
    log.Printf("Response: %s", body)
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "VOTRE_CLÉ_API";
        var uri = new Uri($"https://api.smspartner.fr/v1/stop-sms/list?apiKey={apiKey}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("La requête GET a échoué avec le code de statut: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
  <span class="hljs-attr">"nbData"</span>: <span class="hljs-number">1</span>,
  <span class="hljs-attr">"data"</span>: [
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-number">19</span>,
      <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+33xxxxxxxxx"</span>,
      <span class="hljs-attr">"createdAt"</span>: <span class="hljs-string">"2015-07-20 10:19:45"</span>
    }
  ]
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
  <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-reponses-et-stop/gestion_reponsep1/" rel="alternate" type="text/html" />
    <published>2024-07-29T09:32:45+00:00</published>
    <updated>2024-07-29T09:32:45+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp9/</id>
    <title>Obtenir le détail d’un contact</title>
    <content type="html">
      <![CDATA[<h1 id="obtenir-le-detail-d-un-contact">Obtenir le détail d’un contact</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;"> https://api.smspartner.fr/v1/contact/detail</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Identifiant du contact.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<pre><code class="language-bash hljs bash">{
  <span class="hljs-string">"url"</span>: <span class="hljs-string">"https://api.smspartner.fr/v1/contact/detail?apiKey=YOUR_API_KEY&amp;contactId=ID_CONTACT"</span>,
  <span class="hljs-string">"method"</span>: <span class="hljs-string">"GET"</span>,
  <span class="hljs-string">"location"</span>: <span class="hljs-literal">true</span>
}</code></pre>
<h2 id="reponses">Réponses</h2>
<pre><code class="language-json hljs json">{
   <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
   <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
   <span class="hljs-attr">"contact"</span>: {
       <span class="hljs-attr">"contactId"</span>: <span class="hljs-string">"ID CONTACT"</span>,
       <span class="hljs-attr">"phone"</span>: <span class="hljs-string">"+xxxxxxxxxxx"</span>,
       <span class="hljs-attr">"firstname"</span>: <span class="hljs-string">""</span>,
       <span class="hljs-attr">"lastname"</span>: <span class="hljs-string">""</span>,
       <span class="hljs-attr">"url"</span>: <span class="hljs-string">""</span>,
       <span class="hljs-attr">"shortUrl"</span>: <span class="hljs-string">""</span>,
       <span class="hljs-attr">"date"</span>: <span class="hljs-string">""</span>,
       <span class="hljs-attr">"custom1"</span>: <span class="hljs-string">""</span>,
       <span class="hljs-attr">"custom2"</span>: <span class="hljs-string">""</span>,
       <span class="hljs-attr">"custom3"</span>: <span class="hljs-string">""</span>,
       <span class="hljs-attr">"custom4"</span>: <span class="hljs-string">""</span>,
       <span class="hljs-attr">"createdAt"</span>: <span class="hljs-string">"2020-10-02T16:40:05+02:00"</span>,
       <span class="hljs-attr">"stopSms"</span>: <span class="hljs-literal">false</span>,
       <span class="hljs-attr">"groupId"</span>: <span class="hljs-number">6363</span>
   }
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur :</p>
<pre><code class="language-json hljs json">{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
  <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clef API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">contactId est requis</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">404</td>
<td style="text-align: left;">Le contact n’existe pas</td>
</tr>
</tbody>
</table>
<p><br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp9/" rel="alternate" type="text/html" />
    <published>2024-07-29T08:17:50+00:00</published>
    <updated>2024-07-29T08:17:50+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp7/</id>
    <title>Obtenir la liste des groupes</title>
    <content type="html">
      <![CDATA[<h1 id="obtenir-la-liste-des-groupes-de-contacts">Obtenir la liste des groupes de contacts</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/group/list</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<pre><code class="language-bash hljs bash">{
  <span class="hljs-string">"curlCommand"</span>: {
    <span class="hljs-string">"location"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-string">"request"</span>: <span class="hljs-string">"GET"</span>,
    <span class="hljs-string">"url"</span>: <span class="hljs-string">"https://api.smspartner.fr/v1/group/list?
    apiKey=YOUR_API_KEY"</span>
  }
}</code></pre>
<h2 id="reponses">Réponses</h2>
<pre><code class="language-json hljs json">{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"groups"</span>: [
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"identifiant du groupe"</span>,
      <span class="hljs-attr">"name"</span>: <span class="hljs-string">"groupe name"</span>,
      <span class="hljs-attr">"createdAt"</span>: <span class="hljs-string">"2020-10-02T16:40:05+02:00"</span>,
      <span class="hljs-attr">"isSpecialFile"</span>: <span class="hljs-literal">false</span>,
      <span class="hljs-attr">"isLocationFile"</span>: <span class="hljs-literal">false</span>
    }
  ]
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur :</p>
<pre><code class="language-json hljs json">{   
{ 
<span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>, 
<span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>, 
<span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clef API incorrecte"</span> 
}
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
</tbody>
</table>
<p><br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp7/" rel="alternate" type="text/html" />
    <published>2024-07-29T07:59:01+00:00</published>
    <updated>2024-07-29T07:59:01+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp6/</id>
    <title>Supprimer un contact</title>
    <content type="html">
      <![CDATA[<h1 id="supprimer-un-contact">Supprimer un contact</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;">http://api.smspartner.fr/v1/contact/delete</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>contactId</strong></td>
<td>Identifiant du contact</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<pre><code class="language-bash hljs bash">curl --location --request 
POST <span class="hljs-string">'http://api.smspartner.fr/v1/contact/delete'</span> 
--header <span class="hljs-string">'Content-Type: application/json'</span> 
--data-raw <span class="hljs-string">'{
   "apiKey": "YOUR_API_KEY",
   "contactId": "ID CONTACT"}'</span></code></pre>
<h2 id="reponses">Réponses</h2>
<pre><code class="language-json hljs json">{
   <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
   <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur :</p>
<pre><code class="language-json hljs json">{   

<span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>, 
<span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>, 
<span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clef API incorrecte"</span> 

}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">groupId est requis</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">404</td>
<td style="text-align: left;">Le groupe n’existe pas</td>
</tr>
</tbody>
</table>
<p><br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp6/" rel="alternate" type="text/html" />
    <published>2024-07-29T07:22:35+00:00</published>
    <updated>2024-07-29T07:22:35+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp5/</id>
    <title>Modifier un contact</title>
    <content type="html">
      <![CDATA[<h1 id="modifier-un-contact">Modifier un contact</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;"> http://api.smspartner.fr/v1/contact/update</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>contactId</strong></td>
<td>Identifiant du contact à modifier</td>
</tr>
<tr>
<td style="text-align: center;"><strong>phoneNumber</strong></td>
<td>Numéros de téléphone du contact. <br> Pour l’envoi de plusieurs SMS les numéros doivent être séparés par des virgules. <br> Ils peuvent être :  <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul></td>
</tr>
<tr>
<td style="text-align: center;"><strong>firstname</strong></td>
<td>Prénom (32 caractères maximum).</td>
</tr>
<tr>
<td style="text-align: center;"><strong>lastname</strong></td>
<td>Nom (32 caractères maximum).</td>
</tr>
<tr>
<td style="text-align: center;"><strong>date</strong></td>
<td>Date au format YYYY-MM-DD. Pourra être utilisé pour des envois automatique (ex: anniversaire )</td>
</tr>
<tr>
<td style="text-align: center;"><strong>url</strong></td>
<td>Url , elle doit commencer par http:// ou https://</td>
</tr>
<tr>
<td style="text-align: center;"><strong>custom1</strong></td>
<td>Champ personnalisé 1.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>custom2</strong></td>
<td>Champ personnalisé 2.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>custom3</strong></td>
<td>Champ personnalisé 3.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>custom4</strong></td>
<td>Champ personnalisé 4.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<pre><code class="language-bash hljs bash">{
  <span class="hljs-string">"url"</span>: <span class="hljs-string">"http://api.smspartner.fr/v1/contact/update"</span>,
  <span class="hljs-string">"method"</span>: <span class="hljs-string">"POST"</span>,
  <span class="hljs-string">"headers"</span>: {
    <span class="hljs-string">"Content-Type"</span>: <span class="hljs-string">"application/json"</span>
  },
  <span class="hljs-string">"data"</span>: {
    <span class="hljs-string">"apiKey"</span>: <span class="hljs-string">"YOUR_API_KEY"</span>,
    <span class="hljs-string">"contactId"</span>: <span class="hljs-string">"ID CONTACT"</span>,
    <span class="hljs-string">"contact"</span>: {
      <span class="hljs-string">"phoneNumber"</span>: <span class="hljs-string">"+xxxxxxxxx"</span>,
      <span class="hljs-string">"firstname"</span>: <span class="hljs-string">"prénom"</span>,
      <span class="hljs-string">"lastname"</span>: <span class="hljs-string">"nom"</span>,
      <span class="hljs-string">"url"</span>: <span class="hljs-string">""</span>,
      <span class="hljs-string">"date"</span>: <span class="hljs-string">"12-06-2020"</span>,
      <span class="hljs-string">"custom2"</span>: <span class="hljs-string">"custom2"</span>
    }
  }
}</code></pre>
<h2 id="reponses">Réponses</h2>
<pre><code class="language-json hljs json">{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
  <span class="hljs-attr">"contact"</span>: {
    <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+xxxxxxxx"</span>,
    <span class="hljs-attr">"firstname"</span>: <span class="hljs-string">"prénom"</span>,
    <span class="hljs-attr">"lastname"</span>: <span class="hljs-string">"nom"</span>,
    <span class="hljs-attr">"url"</span>: <span class="hljs-string">""</span>,
    <span class="hljs-attr">"date"</span>: <span class="hljs-string">"12-06-2020"</span>,
    <span class="hljs-attr">"custom2"</span>: <span class="hljs-string">"custom2"</span>,
    <span class="hljs-attr">"contactId"</span>: <span class="hljs-string">"ID CONTACT"</span>
  }
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur :</p>
<pre><code class="language-json hljs json">{   
{ 
<span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>, 
<span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>, 
<span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clef API incorrecte"</span> 
}
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">groupId est requis</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">Contact infos sont requises</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">15</td>
<td style="text-align: left;">Le numéro est déjà dans le groupe</td>
</tr>
</tbody>
</table>
<p><br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp5/" rel="alternate" type="text/html" />
    <published>2024-07-29T07:17:24+00:00</published>
    <updated>2024-07-29T07:17:24+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp4/</id>
    <title>Ajouter un lot de contacts</title>
    <content type="html">
      <![CDATA[<h1 id="ajouter-un-lot-de-contacts">Ajouter un lot de contacts</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;"> http://api.smspartner.fr/v1/contact/add</span>

</div>
<p>Cette requête est utilisée pour ajouter un lot de 500 contacts (maximum).</p>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<pre><code class="language-bash hljs bash"> {
   <span class="hljs-string">"apiKey"</span>: <span class="hljs-string">"API_KEY"</span>,
   <span class="hljs-string">"groupId"</span>: <span class="hljs-string">"GROUP_ID"</span>,
   <span class="hljs-string">"contactsList"</span>: [
       {
           <span class="hljs-string">"firstname"</span>:<span class="hljs-string">"firstname_1"</span>,
           <span class="hljs-string">"lastname"</span>:<span class="hljs-string">"lastname_1"</span>,
           <span class="hljs-string">"date"</span>: <span class="hljs-string">"2023-01-01"</span>,
           <span class="hljs-string">"url"</span>: <span class="hljs-string">"http:..."</span>,
           <span class="hljs-string">"phoneNumber"</span>: <span class="hljs-string">"0600000000"</span>,
           <span class="hljs-string">"custom1"</span>: <span class="hljs-string">"email"</span>
       },
       {
           <span class="hljs-string">"firstname"</span>:<span class="hljs-string">"firstname_2"</span>,
           <span class="hljs-string">"lastname"</span>:<span class="hljs-string">"lastname_2"</span>,
           <span class="hljs-string">"date"</span>: <span class="hljs-string">"2023-01-01"</span>,
           <span class="hljs-string">"url"</span>: <span class="hljs-string">"http:..."</span>,
           <span class="hljs-string">"phoneNumber"</span>: <span class="hljs-string">"0600000001"</span>,
           <span class="hljs-string">"custom1"</span>: <span class="hljs-string">"email"</span>
       },
       …
   ]
}</code></pre>
<h2 id="reponses">Réponses</h2>
<pre><code class="language-json hljs json">{
   <span class="hljs-attr">"groupe"</span>: {
       <span class="hljs-attr">"name"</span>: <span class="hljs-string">"NOM DU GROUPEl"</span>,
       <span class="hljs-attr">"token"</span>: <span class="hljs-string">"GROUP_ID"</span>
   },
   <span class="hljs-attr">"results"</span>: [
       {
           <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
           <span class="hljs-attr">"code"</span>: <span class="hljs-number">15</span>,
           <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+33600000000"</span>,
           <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Le numéro est déjà dans le groupe"</span>
       },
       {
           <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
           <span class="hljs-attr">"code"</span>: <span class="hljs-number">15</span>,
           <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+33600000001"</span>,
           <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Le numéro est déjà dans le groupe"</span>
       }
   ],
   <span class="hljs-attr">"rapport"</span>: 
       {
       <span class="hljs-attr">"nbline"</span>: <span class="hljs-number">2</span>,
       <span class="hljs-attr">"nbline_imported"</span>: <span class="hljs-number">0</span>,
       <span class="hljs-attr">"nbline_updated"</span>: <span class="hljs-number">0</span>,
       <span class="hljs-attr">"errors"</span>: 
       {
           <span class="hljs-attr">"stopSms"</span>: <span class="hljs-number">0</span>,
           <span class="hljs-attr">"invalidePhone"</span>: <span class="hljs-number">0</span>,
           <span class="hljs-attr">"duplicatePhone"</span>: <span class="hljs-number">0</span>,
           <span class="hljs-attr">"allreadyInGroupe"</span>: <span class="hljs-number">2</span>,
           <span class="hljs-attr">"urlInvalide"</span>: <span class="hljs-number">0</span>,
           <span class="hljs-attr">"dateInvalide"</span>: <span class="hljs-number">0</span>,
           <span class="hljs-attr">"empty"</span>: <span class="hljs-number">0</span>,
           <span class="hljs-attr">"unactivated"</span>: <span class="hljs-number">0</span>,
           <span class="hljs-attr">"dateInvalid"</span>: <span class="hljs-number">0</span>
       }
   }
}</code></pre>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp4/" rel="alternate" type="text/html" />
    <published>2024-07-26T14:51:24+00:00</published>
    <updated>2024-07-26T14:51:24+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp3/</id>
    <title>Supprimer un groupe de contact</title>
    <content type="html">
      <![CDATA[<h1 id="supprimer-un-groupe-de-contact">Supprimer un groupe de contact</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: red; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">DELETE</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;">  http://api.smspartner.fr/v1/groupe/delete</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>groupId</strong></td>
<td>Identifiant du groupe</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<pre><code class="language-bash hljs bash">curl --location --request POST <span class="hljs-string">'http://api.smspartner.fr/v1/groupe/delete'</span> 
--header <span class="hljs-string">'Content-Type: application/json'</span> 
--data-raw <span class="hljs-string">'{
  "apiKey": "YOUR_API_KEY",
  "groupId": "ID GROUPE"
}'</span></code></pre>
<h2 id="reponses">Réponses</h2>
<pre><code class="language-json hljs json">{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur :</p>
<pre><code class="language-json hljs json">{
<span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
<span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
<span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clef API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">groupId est requis</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">404</td>
<td style="text-align: left;">Le groupe n’existe pas</td>
</tr>
</tbody>
</table>
<p><br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp3/" rel="alternate" type="text/html" />
    <published>2024-07-26T14:44:55+00:00</published>
    <updated>2024-07-26T14:44:55+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp2/</id>
    <title>Ajouter un contact</title>
    <content type="html">
      <![CDATA[<h1 id="ajouter-un-contact">Ajouter un contact</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;"> http://api.smspartner.fr/v1/contact/add</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>phoneNumber</strong></td>
<td>Numéros de téléphone du contact. <br> Pour l’envoi de plusieurs SMS les numéros doivent être séparés par des virgules. <br> Ils peuvent être :  <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul></td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>firstname</strong></td>
<td>Prénom (32 caractères maximum).</td>
</tr>
<tr>
<td style="text-align: center;"><strong>lastname</strong></td>
<td>Nom (32 caractères maximum).</td>
</tr>
<tr>
<td style="text-align: center;"><strong>date</strong></td>
<td>Date au format YYYY-MM-DD. Pourra être utilisé pour des envois automatique (ex: anniversaire )</td>
</tr>
<tr>
<td style="text-align: center;"><strong>url</strong></td>
<td>Url , elle doit commencer par http:// ou https://</td>
</tr>
<tr>
<td style="text-align: center;"><strong>custom1</strong></td>
<td>Champ personnalisé 1.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>custom2</strong></td>
<td>Champ personnalisé 2.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>custom3</strong></td>
<td>Champ personnalisé 3.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>custom4</strong></td>
<td>Champ personnalisé 4.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<pre><code class="language-bash hljs bash">{
  <span class="hljs-string">"curl_command"</span>: {
    <span class="hljs-string">"method"</span>: <span class="hljs-string">"POST"</span>,
    <span class="hljs-string">"url"</span>: <span class="hljs-string">"http://api.smspartner.fr/v1/contact/add"</span>,
    <span class="hljs-string">"headers"</span>: {
      <span class="hljs-string">"Content-Type"</span>: <span class="hljs-string">"application/json"</span>
    },
    <span class="hljs-string">"data"</span>: {
      <span class="hljs-string">"apiKey"</span>: <span class="hljs-string">"YOUR_API_KEY"</span>,
      <span class="hljs-string">"groupId"</span>: <span class="hljs-string">"ID GROUP"</span>,
      <span class="hljs-string">"contact"</span>: {
        <span class="hljs-string">"phoneNumber"</span>: <span class="hljs-string">"xxxxxxxxx"</span>,
        <span class="hljs-string">"firstname"</span>: <span class="hljs-string">"prénom"</span>,
        <span class="hljs-string">"lastname"</span>: <span class="hljs-string">"nom"</span>,
        <span class="hljs-string">"date"</span>: <span class="hljs-string">"YYYY-MM-DD"</span>,
        <span class="hljs-string">"shortUrlPartnr"</span>: <span class="hljs-string">"http://"</span>,
        <span class="hljs-string">"url"</span>: <span class="hljs-string">"http://"</span>,
        <span class="hljs-string">"custom1"</span>: <span class="hljs-string">"custom 1"</span>,
        <span class="hljs-string">"custom2"</span>: <span class="hljs-string">"custom 2"</span>,
        <span class="hljs-string">"custom3"</span>: <span class="hljs-string">"custom 3"</span>,
        <span class="hljs-string">"custom4"</span>: <span class="hljs-string">"custom 4"</span>
      }
    }
  }
}</code></pre>
<h2 id="reponses">Réponses</h2>
<pre><code class="language-json hljs json">  
{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
  <span class="hljs-attr">"contact"</span>: {
    <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"xxxxxxxx"</span>,
    <span class="hljs-attr">"firstname"</span>: <span class="hljs-string">"Prénom"</span>,
    <span class="hljs-attr">"lastname"</span>: <span class="hljs-string">"Nom"</span>,
    <span class="hljs-attr">"date"</span>: <span class="hljs-string">"YYYY-MM-DD"</span>,
    <span class="hljs-attr">"shortUrlPartnr"</span>: <span class="hljs-string">"http://"</span>,
    <span class="hljs-attr">"url"</span>: <span class="hljs-string">"http://"</span>,
    <span class="hljs-attr">"custom1"</span>: <span class="hljs-string">"custom 1"</span>,
    <span class="hljs-attr">"custom2"</span>: <span class="hljs-string">"custom 2"</span>,
    <span class="hljs-attr">"custom3"</span>: <span class="hljs-string">"custom 3"</span>,
    <span class="hljs-attr">"custom4"</span>: <span class="hljs-string">"custom 4"</span>,
    <span class="hljs-attr">"contactId"</span>: <span class="hljs-string">"ID CONTACT"</span>
  }
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur :</p>
<pre><code class="language-json hljs json">{   
{ 
<span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>, 
<span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>, 
<span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clef API incorrecte"</span> 
}
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">groupId est requis</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">Contact infos sont requises</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">15</td>
<td style="text-align: left;">Le numéro est déjà dans le groupe</td>
</tr>
</tbody>
</table>
<p><br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp2/" rel="alternate" type="text/html" />
    <published>2024-07-26T14:12:19+00:00</published>
    <updated>2024-07-26T14:12:19+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp1/</id>
    <title>Ajouter un groupe</title>
    <content type="html">
      <![CDATA[<h1 id="ajouter-un-groupe">Ajouter un groupe</h1>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;"> http://api.smspartner.fr/v1/group/add</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>name</strong></td>
<td>Nom du compte</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<pre><code class="language-bash hljs bash">curl --location --request POST <span class="hljs-string">'http://api.smspartner.fr/v1/group/add'</span> 
--header <span class="hljs-string">'Content-Type: application/json'</span> --data-raw <span class="hljs-string">'{   "apiKey": "YOUR_API_KEY",
   "name": "Nom du groupe"}'</span></code></pre>
<h2 id="reponses">Réponses</h2>
<pre><code class="language-json hljs json">{   
<span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,   
<span class="hljs-attr">"code"</span>: <span class="hljs-number">2</span>,   
<span class="hljs-attr">"name"</span>: <span class="hljs-string">"Nom du groupe"</span>,   
<span class="hljs-attr">"groupId"</span>: <span class="hljs-string">"ID GROUPE"</span> 
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur :</p>
<pre><code class="language-json hljs json">{   
{ 
<span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>, 
<span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>, 
<span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clef API incorrecte"</span> 
}
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">name est requis</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
</tbody>
</table>
<p><br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/gestion-des-contacts/gestion_contactp1/" rel="alternate" type="text/html" />
    <published>2024-07-26T13:59:08+00:00</published>
    <updated>2024-07-26T13:59:08+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/status-et-statistiques/statusp5/</id>
    <title>Statistique des envois</title>
    <content type="html">
      <![CDATA[<h1 id="statistique-des-envois">Statistique des envois</h1>
<p>Cette requête est utilisée pour récupérer les statistiques des envois sur une période précise. Elle permet de récupérer le nombre de SMS envoyés et le cout associé à ces envoiS.</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: red; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/statistics/cost-resume</span>
</div>
<h2 id="parametres">Paramètres</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
</tbody>
</table>
<p>Une limite de 5 requêtes par minute est appliquée.</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre <strong>interval</strong></th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>last_month</strong></td>
<td>Le mois précédent.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>last_twelve_months</strong></td>
<td>Numéros de téléphone du destinataire. <br> <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul></td>
</tr>
<tr>
<td style="text-align: center;"><strong>from</strong></td>
<td>12 derniers mois</td>
</tr>
<tr>
<td style="text-align: center;"><strong>custom</strong></td>
<td>dans ce cas les dates de début (from) et de fin (to) sont requises.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? // Prepare data for GET request
       $apiKey = 'YOUR_API_KEY';
$url = 'https://api.smspartner.fr/v1/statistics/cost-resume?apiKey=' 
. $apiKey . '&amp;interval=last_twelve_months'; 

// Initialise cURL session
$ch = curl_init($url);

// Set cURL options
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

// Execute cURL session and fetch the result
$response = curl_exec($ch);

// Handle errors
if (curl_errno($ch)) {
    echo 'Erreur: ' . curl_error($ch);
} else {
    // Decode the result
    $data = json_decode($response, true);
    print_r($data);
}

// Close cURL session
curl_close($ch);
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.Net
Imports System.IO

Module Module1
    Sub Main()
        ' Prepare data for GET request
        Dim apiKey As String = "YOUR_API_KEY"
        Dim url As String = "https://api.smspartner.fr/v1/statistics/cost-resume?apiKey=" 
        &amp; apiKey &amp; "&amp;interval=last_twelve_months"

        ' Initialise WebRequest
        Dim request As WebRequest = WebRequest.Create(url)
        request.Method = "GET"

        ' Get the response
        Try
            Dim response As WebResponse = request.GetResponse()
            Using dataStream As Stream = response.GetResponseStream()
                Using reader As New StreamReader(dataStream)
                    Dim responseFromServer As String = reader.ReadToEnd()
                    ' Decode the result
                    Dim data As Object = Newtonsoft.Json.JsonConvert.DeserializeObject
                    (responseFromServer)
                    Console.WriteLine(data)
                End Using
            End Using
            response.Close()
        Catch e As WebException
            Console.WriteLine("Error: " &amp; e.Message)
        End Try
    End Sub
End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
  <pre><code class="language-python">
   import requests
apiKey = 'YOUR_API_KEY'
url = f'https://api.smspartner.fr/v1/statistics/cost-resume?
apiKey={apiKey}&amp;interval=last_twelve_months'

try:
    response = requests.get(url)
    response.raise_for_status()
    data = response.json()
    print(data)
except requests.exceptions.RequestException as e:
    print(f"Erreur: {e}")

Ou avec la bibliothèque 'urllib':

import json
from urllib import request, error

apiKey = 'YOUR_API_KEY'
url = f'https://api.smspartner.fr/v1/statistics/cost-resume?
apiKey={apiKey}&amp;interval=last_twelve_months'

try:
    with request.urlopen(url) as response:
        data = json.load(response)
        print(data)
except error.URLError as e:
    print(f"Erreur: {e.reason}")
    </code></pre> 
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H "Content-Type: application/json" -X GET 
"https://api.smspartner.fr/v1/statistics/cost-resume
?apiKey=YOUR_API_KEY&amp;interval=last_twelve_months"  </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require(`'https');

let apiKey = 'YOUR_API_KEY';
let url = `https://api.smspartner.fr/v1/statistics/cost-resume?apiKey=${apiKey}
&amp;interval=last_twelve_months`; // 12 derniers mois
//interval=last_month // 1 dernier mois
//interval=custom&amp;from=21-10-2022&amp;to=21-10-2022 // intervalle personnalisé

https.get(url, (res) =&gt; {
  let data = '';

  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  console.log("Erreur: " + err.message);
});
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class StatistiqueDesEnvois {
    public static void main(String[] args) {
        try {
            // Prepare data for GET request
            String apiKey = "YOUR_API_KEY";
            String interval = "last_twelve_months";
            //interval=last_month // 1 dernier mois
//interval=custom&amp;from=21-10-2022&amp;to=21-10-2022 // intervalle personnalisé

            // Create GET request URL
            String urlString = 
            "https://api.smspartner.fr/v1/statistics/cost-resume?" +
                    "apiKey=" + apiKey + "&amp;interval=" + interval;

            // Create URL object
            URL url = new URL(urlString);

            // Create HTTP connection
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(10000);
            connection.setReadTimeout(10000);

            // Send GET request
            int responseCode = connection.getResponseCode();

            // Get response
            BufferedReader reader;
            if (responseCode &gt;= 200 &amp;&amp; responseCode &lt;= 299) {
                reader = new BufferedReader(
                new InputStreamReader(connection.getInputStream()));
            } else {
                reader = new BufferedReader(
                new InputStreamReader(connection.getErrorStream()));
            }

            StringBuilder response = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            reader.close();

            // Process your response here
            System.out.println(response.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

struct StatistiqueDesEnvois: View {
    @State private var result: String = "Loading..."

    var body: some View {
        VStack {
            Text("Statistique Des Envois")
                .font(.title)
                .padding()

            Text(result)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: getStatistics)
    }

    func getStatistics() {
        let apiKey = "YOUR_API_KEY"
        let interval = "last_twelve_months"
        let urlString = "https://api.smspartner.fr/v1/statistics/cost-resume
        ?apiKey=(apiKey)&amp;interval=(interval)"

        guard let url = URL(string: urlString) else {
            print("Invalid URL")
            result = "Invalid URL"
            return
        }

        var request = URLRequest(url: url)
        request.httpMethod = "GET"

        let task = URLSession.shared.dataTask(with: request) { data, response, error in
            if let error = error {
                print("Error: (error)")
                DispatchQueue.main.async {
                    self.result = "Error: (error)"
                }
            } else if let data = data {
                let str = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    self.result = str ?? "Error"
                }
            }
        }

        task.resume()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
  <pre><code class="language-go">

  package main
import (
    "io/ioutil"
    "log"
    "net/http"
    "time"
)

func main() {
    // Prepare data for GET request
    apiKey := "YOUR_API_KEY"
    interval := "last_twelve_months" // last month: "last_month", custom interval: 
  "custom&amp;from=21-10-2022&amp;to=21-10-2022"

    // Create GET request URL
    url := "https://api.smspartner.fr/v1/statistics/cost-resume?" +
        "apiKey=" + apiKey + "&amp;interval=" + interval

    // Create HTTP client
    client := &amp;http.Client{Timeout: 10 * time.Second}

    // Send GET request
    resp, err := client.Get(url)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Get response
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response body: %v", err)
    }

    // Process your response here
    log.Printf("Response: %s", body)
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "VOTRE_CLÉ_API";
        var interval = "last_twelve_months"; // Changer à "last_month" pour le dernier mois, "custom" pour un intervalle personnalisé
        var uri = new Uri
        ($"https://api.smspartner.fr/v1/statistics/cost-resume?apiKey={apiKey}&amp;interval={interval}"); // Ajoutez "&amp;from=date&amp;to=date" pour un intervalle personnalisé

        // Envoyer la requête GET
        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            // Lire la réponse
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            // Afficher un message en cas d'échec de la requête GET
            Console.WriteLine("La requête GET a échoué avec le code de statut: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{    
<span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,    
<span class="hljs-attr">"datas"</span>: [        
{            
<span class="hljs-attr">"month"</span>: <span class="hljs-string">"october"</span>,            
<span class="hljs-attr">"year"</span>: <span class="hljs-string">"2021"</span>,            
<span class="hljs-attr">"m"</span>: <span class="hljs-string">"10"</span>,            
<span class="hljs-attr">"date"</span>: <span class="hljs-number">1633039200</span>,            
<span class="hljs-attr">"type"</span>: <span class="hljs-string">"month"</span>,            
<span class="hljs-attr">"cost"</span>: <span class="hljs-string">"49.174"</span>,            
<span class="hljs-attr">"nb_send"</span>: <span class="hljs-string">"1210"</span>        
},        

{            
<span class="hljs-attr">"month"</span>: <span class="hljs-string">"november"</span>,            
<span class="hljs-attr">"year"</span>: <span class="hljs-string">"2021"</span>,            
<span class="hljs-attr">"m"</span>: <span class="hljs-string">"11"</span>,            
<span class="hljs-attr">"date"</span>: <span class="hljs-number">1635721200</span>,            
<span class="hljs-attr">"type"</span>: <span class="hljs-string">"month"</span>,            
<span class="hljs-attr">"cost"</span>: <span class="hljs-string">"67.674"</span>,            
<span class="hljs-attr">"nb_send"</span>: <span class="hljs-string">"1409"</span>        
},</code></pre>
<h3 id="3-statuts-de-remises-possibles">3 statuts de remises possibles</h3>
<ul>
<li><strong>Delivered</strong></li>
<li><strong>Not delivered</strong></li>
<li><strong>Waiting</strong></li>
</ul>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/status-et-statistiques/statusp5/" rel="alternate" type="text/html" />
    <published>2024-07-26T08:31:35+00:00</published>
    <updated>2024-07-26T08:31:35+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp3/</id>
    <title>Envoyer des SMS via un numéro long</title>
    <content type="html">
      <![CDATA[<h1 id="envoyer-des-sms-via-un-numero-long">Envoyer des SMS via un numéro long</h1>
<p>Cette requête est utilisée pour envoyer des SMS en temps réel ou en différé avec un numéro long.</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;">http://api.smspartner.fr/v1/vn/send</span>
</div>
<h2 id="parametres">Paramètres</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>to</strong></td>
<td>Numéros de téléphone du destinataire. <br> <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul></td>
</tr>
<tr>
<td style="text-align: center;"><strong>from</strong></td>
<td>Votre numéro virtuel au format internationnal ( 336xxxxxxxx )</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>tag</strong></td>
<td>Chaîne de caractères de 20 caractères maximum sans espace(s) et vous permettant de tagger vos envois.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>urlResponse</strong></td>
<td>URL de retour des Réponses (ex: <a href="https://www.monurlderesponse">https://www.monurlderesponse</a>).</td>
</tr>
<tr>
<td style="text-align: center;"><strong>urlDlr</strong></td>
<td>URL de retour des Accusé de réception (ex: <a href="https://www.monurldlr">https://www.monurldlr</a>).</td>
</tr>
<tr>
<td style="text-align: center;"><strong>sandbox</strong></td>
<td>Pour tester l’envoi de SMS, vous pouvez utiliser le paramètre <code>sandbox:</code> <strong>1</strong> pour activer le mode bac à sable. ⚠️ Aucun SMS ne sera envoyé, et il n’y aura aucun débit sur votre compte. <br> Ces SMS seront supprimés de vos listes d’envois automatiquement tous les jours.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>_format</strong></td>
<td>Format de la réponse. Vous pouvez choisir entre <code>JSON</code> ou <code>XML</code>. Par défaut, le format de réponse est <code>JSON</code></td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?php
        // Prepare data for POST request
        $fields = array(
            'apiKey'=&gt; 'YOUR API KEY',
            'to'=&gt; '336xxxxxxxx',
            'from' =&gt; '336xxxxxxxx',
            'message'=&gt; 'This is your message'
        );

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/vn/send');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
  <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #send sms
    url = base_url &amp; "vn/send"
    #note : utiliser une librairie JSON en production, par exemple :
    #https//www.nuget.org/packages/Newtonsoft.Json/
    Dim parameters As String = String.Format(
        "{{""apiKey"":""{0}"",""to"":""{1}"",""from"":""{2}"",""message"":""{3}""}}",
        apiKey,
        "336xxxxxxxx",
        "336xxxxxxxx",
        "message de test")
    Console.Write(parameters)
    apiRequest("POST", url, parameters)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def send_sms(self, to, from, msg):
        print(to)

        data = OrderedDict([
            ("apiKey", API_KEY),
            ("to", to),
            ("from",from),
            ("message", msg)
        ])

        url = URL + "/vn/send"
        r = requests.post(url, data=json.dumps(data), verify=False)

        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print("SMS msg {} not delivered to {}".format(msg, to))
            status = False
        return status
   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
    curl -H  "Content-Type: application/json" -X POST -d '{"apiKey":"xxxxx","to":"xxxx","from":"xxx","message":"test"}' https://api.smspartner.fr/v1/vn/send
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require("https");

// Remplacez par votre clé API
const apiKey = "VOTRE_CLÉ_API";

// Préparer les données pour la requête POST
const data = JSON.stringify({
  apiKey: apiKey,
  to: "336xxxxxxxx",
  from: "336xxxxxxxx",
  message: "Ceci est votre message",
});

// Définir les options pour la requête HTTP POST vers l'API SMS Partner
const options = {
  hostname: "api.smspartner.fr",
  port: 443,
  path: "/v1/vn/send",
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    "Content-Length": data.length,
    "cache-control": "no-cache",
  },
};

// Effectuer la requête HTTP POST avec les options et données définies précédemment
const req = https.request(options, (res) =&gt; {
  console.log(`statusCode: ${res.statusCode}`);

  // Afficher les données de réponse de l'API sur la sortie standard
  res.on("data", (d) =&gt; {
    process.stdout.write(d);
  });
});

// Afficher en cas d'erreur lors de l'exécution de la requête HTTP POST
req.on("error", (error) =&gt; {
  console.error(error);
});

// Envoyer les données de l'objet 'data' à la demande
req.write(data);
// Terminer la demande HTTP POST
req.end();
</code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.OutputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.stream.Collectors;
import org.json.JSONObject;

public class EnvoyerSMSLong {
    public static void main(String[] args) {
        try {
            // Remplacez par votre clé API
            String apiKey = "VOTRE_CLÉ_API";

            // Création de l'objet URL avec l'adresse de l'API SMS
            URL url = new URL("https://api.smspartner.fr/v1/vn/send");

            // Ouverture de la connexion HTTP avec l'API
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Content-Type", "application/json");
            conn.setRequestProperty("cache-control", "no-cache");
            conn.setDoOutput(true);

            // Création de l'objet JSON contenant les paramètres du SMS à envoyer
            JSONObject json = new JSONObject();
            json.put("apiKey", apiKey);
            json.put("to", "336xxxxxxxx");
            json.put("from", "336xxxxxxxx");
            json.put("message", "Ceci est votre message");

            // Écriture des données JSON dans le corps de la requête HTTP
            OutputStream os = conn.getOutputStream();
            os.write(json.toString().getBytes());
            os.flush();

            // Lecture de la réponse de l'API
            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String response = br.lines().collect(Collectors.joining());
            System.out.println(response);

            // Fermeture de la connexion HTTP
            conn.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI
import Foundation

// Struct pour la vue "EnvoieSMSParNumeroLong"
struct EnvoieSMSParNumeroLong: View {
    var body: some View {
        NavigationView {
            VStack {
                // Un bouton qui appelle la fonction EnvoieSMSParNumeroLong() lorsqu'il est pressé
                Button(action: {
                    EnvoieSMSParNumeroLong()
                }) {
                    Text("Envoyer SMS")
                        .font(.system(size: 20))
                        .foregroundColor(.white)
                        .frame(minWidth: 0, maxWidth: .infinity)
                        .padding()
                        .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))
                        .cornerRadius(10)
                        .padding(.horizontal)
                }
            }
        }
    }

    // Fonction pour envoyer un SMS par numéro long
    func EnvoieSMSParNumeroLong() {
        let apiKey = "XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX" // Votre clé API
        let destinataire = "33XXXXXXXXX" // Le numéro du destinataire
        let expediteur = "33XXXXXXXXX" // Votre numéro
        let message = "status" // Le message à envoyer

        let url = URL(string: "https://api.smspartner.fr/v1/vn/send")! // URL pour envoyer le SMS
        var requete = URLRequest(url: url)
        requete.httpMethod = "POST"
        requete.addValue("application/json", forHTTPHeaderField: "Content-Type") // Ajout du type de contenu dans l'en-tête de la requête

        // Paramètres pour l'envoi du SMS
        let params: [String: Any] = [
            "apiKey": apiKey,
            "to": destinataire,
            "from": expediteur,
            "message": message
        ]

        // Ajout des paramètres dans le corps de la requête
        requete.httpBody = try? JSONSerialization.data(withJSONObject: params)

        let session = URLSession.shared
        // Tâche pour envoyer la requête
        let task = session.dataTask(with: requete) { (data, response, error) in
            // Si une erreur survient, on l'affiche
            if let erreur = error {
                print("Erreur : (erreur.localizedDescription)")
                return
            }

            // Sinon, on affiche les données reçues
            if let donnees = data {
                if let resultat = String(data: donnees, encoding: .utf8) {
                    print(resultat) // Impression du résultat
                }
            }
        }

        task.resume() // On lance la tâche
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code class="language-go">
package main

import (
    "bytes"
    "fmt"
    "net/http"
)

func main() {
    apiKey := "YOUR API KEY"
    to := "336xxxxxxxx"
    from := "336xxxxxxxx"
    message := "This is your message"

    // Construire les données JSON pour la requête POST
    data := map[string]interface{}{
        "apiKey":  apiKey,
        "to":      to,
        "from":    from,
        "message": message,
    }

    // Convertir les données en JSON
    jsonData, err := json.Marshal(data)
    if err != nil {
        fmt.Println("Erreur lors de la conversion en JSON:", err)
        return
    }

    // Effectuer la requête POST
    url := "https://api.smspartner.fr/v1/vn/send"
    resp, err := http.Post(url, "application/json", bytes.NewBuffer(jsonData))
    if err != nil {
        fmt.Println("Erreur lors de l'envoi de la requête:", err)
        return
    }
    defer resp.Body.Close()

    // Traiter la réponse
    if resp.StatusCode == http.StatusOK {
        body := new(bytes.Buffer)
        _, err := body.ReadFrom(resp.Body)
        if err != nil {
            fmt.Println("Erreur lors de la lecture de la réponse:", err)
            return
        }
        fmt.Println(body.String())
    } else {
        fmt.Println("La requête POST a échoué. Code de réponse:", resp.StatusCode)
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var request = new
        {
            apiKey = "YOUR_API_KEY",
            to = "336xxxxxxxx",
            from = "336xxxxxxxx",
            message = "This is your message"
        };

        var content = new StringContent(
            JsonConvert.SerializeObject(request),
            Encoding.UTF8,
            "application/json");

        HttpResponseMessage response = await client.PostAsync("https://api.smspartner.fr/v1/vn/send", content);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("POST request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
   <span class="hljs-attr">"success"</span>:<span class="hljs-literal">true</span>,
   <span class="hljs-attr">"code"</span>:<span class="hljs-number">200</span>,
   <span class="hljs-attr">"message_id"</span>:xxx,
   <span class="hljs-attr">"nb_sms"</span>: <span class="hljs-number">1</span>,
   <span class="hljs-attr">"cost"</span>: xxx,
   <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
}</code></pre>
<p><br> <br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp3/" rel="alternate" type="text/html" />
    <published>2024-07-26T08:05:29+00:00</published>
    <updated>2024-07-26T08:05:29+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/status-et-statistiques/statusp4/</id>
    <title>Statut par Tag</title>
    <content type="html">
      <![CDATA[<h1 id="statut-par-tag">Statut par Tag</h1>
<p>Cette requête permet de récupérer les statuts de plusieurs SMS à partir d’un Tag.</p>
<div class="alert alert-info">
A noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ; cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme. </div>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: red; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/bulk-status-by-tag</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d’API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>tag</strong></td>
<td>Le tag du message.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? // Prepare data for GET request
       // Prepare data for GET request
        $data = 'apiKey=YOUR_API_KEY&amp;tag=montag';

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,
        'https://api.smspartner.fr/v1/bulk-status-by-tag?'.$data);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"
    Dim tag As String = "montag"

    #check credits
    Dim url As String
    url = base_url &amp; "bulk-status-by-tag" &amp; "?apiKey=" &amp; apiKey &amp; "&amp;tag=" &amp; tag

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def get_delivery(self,tag):
        url = URL + "/bulk-status-by-tag?apiKey=" + API_KEY +  "&amp;tag=" + tag
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
    </code></pre> 
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H  "Content-Type: application/json" -X GET  
https://api.smspartner.fr/v1/bulk-status-by-tag?apiKey=xxx&amp;tag=montag   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require('https');

//Cette requête permet de récupérer les statuts de plusieurs SMS à partir d’un tag.
let data = 'apiKey=YOUR_API_KEY&amp;tag=montag';
let url = 'https://api.smspartner.fr/v1/bulk-status-by-tag?' + data;

https.get(url, (res) =&gt; {
  let data = ';

  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  console.log("Erreur: " + err.message);
});
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class StatutParTag {
    public static void main(String[] args) {
        try {
            // Prepare data for GET request
            String apiKey = "YOUR_API_KEY";
            String tag = "montag";

            // Create GET request URL
            String urlString = "https://api.smspartner.fr/v1/bulk-status-by-tag?" +
                    "apiKey=" + apiKey + "&amp;tag=" + tag;

            // Create URL object
            URL url = new URL(urlString);

            // Create HTTP connection
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(10000);
            connection.setReadTimeout(10000);

            // Send GET request
            int responseCode = connection.getResponseCode();

            // Get response
            BufferedReader reader;
            if (responseCode &gt;= 200 &amp;&amp; responseCode &lt;= 299) {
                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            } else {
                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));
            }

            StringBuilder response = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            reader.close();

            // Process your response here
            System.out.println(response.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

struct StatutSmsParTag: View {
    @State private var result: String = "Loading..."

    var body: some View {
        VStack {
            Text("Statut Sms Par Tag")
                .font(.title)
                .padding()

            Text(result)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: getStatusByTag)
    }

    func getStatusByTag() {
        let apiKey = "YOUR_API_KEY"
        let tag = "montag"
        let urlString = "https://api.smspartner.fr/v1/bulk-status-by-tag?apiKey=(apiKey)&amp;tag=(tag)"

        guard let url = URL(string: urlString) else {
            print("URL inválida")
            return
        }

        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            if let error = error {
                print("Error: (error)")
            } else if let data = data {
                let result = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    self.result = result ?? "Error"
                }
            }
        }

        task.resume()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
   package main

import (
    "io/ioutil"
    "log"
    "net/http"
    "time"
)

func main() {
    // Prepare data for GET request
    apiKey := "YOUR_API_KEY"
    tag := "montag"

    // Create GET request URL
    url := "https://api.smspartner.fr/v1/bulk-status-by-tag?" +
        "apiKey=" + apiKey + "&amp;tag=" + tag

    // Create HTTP client
    client := &amp;http.Client{Timeout: 10 * time.Second}

    // Send GET request
    resp, err := client.Get(url)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Get response
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response body: %v", err)
    }

    // Process your response here
    log.Printf("Response: %s", body)
}
   
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "YOUR_API_KEY";
        var tag = "montag";
        var uri = new Uri($"https://api.smspartner.fr/v1/bulk-status-by-tag?apiKey={apiKey}&amp;tag={tag}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("GET request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
    <span class="hljs-attr">"currentPage"</span>: <span class="hljs-number">1</span>,
    <span class="hljs-attr">"total"</span>: <span class="hljs-number">2</span>,
    <span class="hljs-attr">"StatutResponse_List"</span>: [
        {
            <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+336XXXXXXX1"</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"Delivered"</span>,
            <span class="hljs-attr">"stopSMS"</span>: <span class="hljs-literal">false</span>,
            <span class="hljs-attr">"date"</span>: <span class="hljs-string">"1517989111"</span>
        },
        {
            <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+336XXXXXXX2"</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"Delivered"</span>,
            <span class="hljs-attr">"stopSMS"</span>: <span class="hljs-literal">false</span>,
            <span class="hljs-attr">"date"</span>: <span class="hljs-string">"1517989101"</span>
        }
             ...
}</code></pre>
<h3 id="3-statuts-de-remises-possibles">3 statuts de remises possibles</h3>
<ul>
<li><strong>Delivered</strong></li>
<li><strong>Not delivered</strong></li>
<li><strong>Waiting</strong></li>
</ul>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td style="text-align: left;">L’ID du message est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td style="text-align: left;">Message introuvable</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/status-et-statistiques/statusp4/" rel="alternate" type="text/html" />
    <published>2024-07-26T07:34:13+00:00</published>
    <updated>2024-07-26T07:34:13+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/status-et-statistiques/statusp1/</id>
    <title>Statut unitaire</title>
    <content type="html">
      <![CDATA[<h1 id="statut-de-remise-unitaire">Statut de remise unitaire</h1>
<p>Cette requête permet de récupérer le statut d’un SMS.</p>
<div class="alert alert-info">
A noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ;
cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme.
    </div>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: red; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/message-status</span>
</div>
<h3 id="parametres">Paramètres</h3>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>messageId</strong></td>
<td>ID du message. <br> Il se trouve dans <a href="../envoyer-des-sms/envois_smsp1/">la réponse lors de l’envoi d’un SMS</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>phoneNumber</strong></td>
<td>Numéro de téléphone portable du destinataire..</td>
</tr>
</tbody>
</table>
<h3 id="parametres-optionnels">Paramètres optionnels</h3>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>_format</strong></td>
<td>Format de la réponse. Par défaut, le format de réponse est <code>JSON</code></td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;? // Prepare data for GET request
        $data = 'apiKey=YOUR_API_KEY&amp;messageId=300&amp;phoneNumber=06xxxxxxxx';

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/message-status?'.$data);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"
    Dim phoneNumber As String = "06XXXXXXXX"
    Dim messageId As Integer = XXX

    #check credits
    Dim url As String
    url = base_url &amp; "message-status" &amp; "?apiKey=" &amp; apiKey &amp; "&amp;phoneNumber=" &amp; phoneNumber &amp; "&amp;messageId=" &amp; messageId

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def get_delivery(self,phone_numbers,message_id):
        url = URL + "/message-status?apiKey=" + API_KEY + "&amp;phoneNumber=" + phone_numbers + "&amp;messageId=" + message_id
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
  </code></pre></div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H  "Content-Type: application/json" -X GET  https://api.smspartner.fr/v1/message-status?apiKey=xxx&amp;messageId=300&amp;phoneNumber=06xxxxxxxx
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require("https");

// Remplacez par votre clé API et autres données
const apiKey = "VOTRE_CLÉ_API";
const messageId = "300";
const phoneNumber = "06xxxxxxxx";

// Préparer les données pour la requête GET
const data = `apiKey=${apiKey}&amp;messageId=${messageId}&amp;phoneNumber=${phoneNumber}`;

// Définir les options pour la requête HTTP GET vers l'API SMS Partner
const options = {
  hostname: "api.smspartner.fr",
  port: 443,
  path: `/v1/message-status?${data}`,
  method: "GET",
  headers: {
    "Content-Type": "application/json",
    "cache-control": "no-cache",
  },
};

// Effectuer la requête HTTP GET avec les options et données définies précédemment
const req = https.request(options, (res) =&gt; {
  console.log(`statusCode: ${res.statusCode}`);

  // Afficher les données de réponse de l'API sur la sortie standard
  res.on("data", (d) =&gt; {
    process.stdout.write(d);
  });
});

// Afficher en cas d'erreur lors de l'exécution de la requête HTTP GET
req.on("error", (error) =&gt; {
  console.error(error);
});

// Terminer la requête HTTP GET
req.end();
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.stream.Collectors;
import org.json.JSONObject;

public class SMSSTatus {
    public static void main(String[] args) {
        try {
            // Remplacez par votre clé API et autres données
            String apiKey = "VOTRE_CLÉ_API";
            String messageId = "300";
            String phoneNumber = "06xxxxxxxx";

            // Préparer les données pour la requête GET
            String data = String.format("apiKey=%s&amp;messageId=%s&amp;phoneNumber=%s", apiKey, messageId, phoneNumber);
            URL url = new URL("https://api.smspartner.fr/v1/message-status?" + data);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.setRequestProperty("Content-Type", "application/json");
            conn.setRequestProperty("cache-control", "no-cache");

            // Lecture de la réponse de l'API
            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String response = br.lines().collect(Collectors.joining());

            // Afficher la réponse JSON
            System.out.println(response);

            // Fermeture de la connexion HTTP
            conn.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

// Structure pour la vue "StatutSMS"
struct StatutSMS: View {
   var body: some View {
       // Un bouton qui appelle la fonction StatutSMS() lorsqu'il est pressé
       Button(action: {
           StatutSMS()
       }) {
           Text("Check SMS Status")
               .font(.system(size: 20))
               .foregroundColor(.white)
               .frame(minWidth: 0, maxWidth: .infinity)
               .padding()
               .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))
               .cornerRadius(10)
               .padding(.horizontal)
       }
   }

   // Fonction pour vérifier le statut d'un SMS
   func StatutSMS() {
       let apiKey = "XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX" // Votre clé API
       let messageId = "your msg ID" // ID de votre message
       let phoneNumber = "06XXXXXXXX" // Numéro de téléphone

       // URL pour vérifier le statut du SMS
       let urlString = "https://api.smspartner.fr/v1/message-status?apiKey=(apiKey)&amp;messageId=(messageId)&amp;phoneNumber=(phoneNumber)"

       // On vérifie que l'URL est correctement formée
       guard let url = URL(string: urlString) else {
           print("Erreur : impossible de créer l'URL")
           return
       }

       // Tâche pour récupérer les données de l'URL
       let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
           // Si une erreur se produit, on l'affiche
           if let error = error {
               print("Erreur : (error)")
           }
           // Sinon, on affiche les données reçues
           else if let data = data {
               let str = String(data: data, encoding: .utf8)
               print("Données reçues :
(str ?? "")")
           }
       }

       task.resume() // On lance la tâche
   }
}

// Aperçu de la vue
struct StatutSMS_Previews: PreviewProvider {
   static var previews: some View {
       StatutSMS()
   }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code class="language-go">
package main

import (
    "io/ioutil"
    "log"
    "net/http"
    "time"
)

func main() {
    // Prepare data for GET request
    apiKey := "YOUR_API_KEY"
    messageId := "300"
    phoneNumber := "06xxxxxxxx"

    // Create GET request URL
    url := "https://api.smspartner.fr/v1/message-status?" +
        "apiKey=" + apiKey + "&amp;messageId=" + messageId + "&amp;phoneNumber=" + phoneNumber

    // Create HTTP client
    client := &amp;http.Client{Timeout: 10 * time.Second}

    // Send GET request
    resp, err := client.Get(url)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Get response
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response body: %v", err)
    }

    // Process your response here
    log.Printf("Response: %s", body)
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "YOUR_API_KEY";
        var messageId = "300";
        var phoneNumber = "06xxxxxxxx";
        var uri = new Uri($"https://api.smspartner.fr/v1/message-status?apiKey={apiKey}&amp;messageId={messageId}&amp;phoneNumber={phoneNumber}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("GET request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
    <span class="hljs-attr">"number"</span>: <span class="hljs-string">"0600000000"</span>,
    <span class="hljs-attr">"messageId"</span>: <span class="hljs-string">"1111"</span>,
    <span class="hljs-attr">"stopSms"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"date"</span>: <span class="hljs-string">"2015-02-07 22:39:46"</span>,
    <span class="hljs-attr">"statut"</span>: <span class="hljs-string">"Delivered"</span>,
    <span class="hljs-attr">"cost"</span>: <span class="hljs-number">0.045</span>,
    <span class="hljs-attr">"countryCode"</span>: <span class="hljs-string">"FR"</span>,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
}</code></pre>
<h3 id="3-statuts-de-remises-possibles">3 statuts de remises possibles</h3>
<ul>
<li><strong>Delivered (Livré)</strong> : Ce statut indique que le message a été livré avec succès au destinataire. Cela signifie que le message a été envoyé correctement et qu’il a été reçu sur l’appareil ou la plateforme du destinataire. La date et l’heure de la réception est normalement disponible.</li>
<li><strong>Not delivered (Non livré)</strong> : Ce statut fait référence aux messages qui n’ont pas pu être livrés au destinataire. Il peut y avoir plusieurs raisons pour lesquelles un message n’est pas livré : comme un numéro de téléphone non valide ou un problème opérateurs chez un opérateur.</li>
<li><strong>Waiting (En attente)</strong> : Ce statut indique que le message est en cours de livraison et qu’il n’a pas encore été confirmé s’il sera livré ou non. Cela peut se produire en cas de retards sur le réseau ou lorsque des confirmations supplémentaires sont nécessaires avant de pouvoir marquer le message comme livré ou non livré.</li>
</ul>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">Le numéro de téléphone est requis</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td style="text-align: left;">L’ID du message est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td style="text-align: left;">Message introuvable</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/status-et-statistiques/statusp1/" rel="alternate" type="text/html" />
    <published>2024-07-25T15:22:51+00:00</published>
    <updated>2024-07-25T15:22:51+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/status-et-statistiques/statusp2/</id>
    <title>Statut multiple</title>
    <content type="html">
      <![CDATA[<h1 id="statut-de-remise">Statut de remise</h1>
<p>Cette requête permet de récupérer le statut de plusieurs SMS (maximum 500 numéros).</p>
<div class="alert alert-info">
A noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ; cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme.
    </div>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/multi-status</span>
</div>
<h2 id="parametres">Paramètres</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>SMSStatus_List</strong></td>
<td><strong>phoneNumber:</strong> <br> Numéros de téléphone des destinataires. <br> Ils doivent être:<br> – au format international (+336xxxxxxxx). <br> <strong>messageId</strong>: <br> ID du message. <br> Il se trouve dans <a href="../envoyer-des-sms/envois_smsp1/">la réponse lors de l’envoi d’un SMS</a>.</td>
</tr>
</tbody>
</table>
<p><br></p>
<div class="alert alert-info">
Attention !! Il n’est pas possible d’annuler l’envoi d’un SMS <strong>moins de 5 minutes avant son envoi</strong>.
    </div>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?  // Prepare data for POST request
        $fields = array(
            'apiKey'=&gt; 'YOUR API KEY',
            'SMSStatut_List'=&gt;&gt;array(
                array('phoneNumber'=&gt;'+336xxxxxxxx','messageId'=&gt;messageId1),
                array('phoneNumber'=&gt;'+336xxxxxxxx','messageId'=&gt;messageId2)
             )
        );

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/multi-status');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #send sms
    url = base_url &amp; "multi-status"
    #note : utiliser une librairie JSON en production, par exemple :
    #https//www.nuget.org/packages/Newtonsoft.Json/
    Dim parameters As String = String.Format(
        "{{""apiKey"":""{0}"",""SMSStatut_List"":""{1}""}}"
    ,
        apiKey,
        {{ ""phoneNumber"":"06xxxxxxx1",
        ""messageId"":"msgId1"},
        { ""phoneNumber"":"06xxxxxxx2"
        ,""message"":"msgId2"}}

        )
    Console.Write(parameters)
    apiRequest("POST", url, parameters)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = 
      New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def send_sms(self,phone_number, 
    phone_number2, msgId1, msgId2):
        print(phone_number)

        data = {"apiKey":APIKEY,"SMSStatut_List":[{"phoneNumber":phone_number,"messageId":msgId1},
        {"phoneNumber":phone_number2,"messageId":msgId2}]}

        url = URL + "/multi-status"
        r = requests.post(url, data=json.dumps(data), verify=False)

        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print("SMS msg {} not delivered to {}".format(msg, phone_numbers))
            status = False
        return status
  </code></pre></div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -X POST https://api.smspartner.fr/v1/multi-status -H "Content-Type: application/json" -d 
'{"apiKey": "Votre clé API","SMSStatut_List": 
[{"phoneNumber": "0619922264", "messageId": 199897},
{"phoneNumber": "06xxxxxxx2", "messageId": 1000},
{"phoneNumber": "06xxxxxxx1", "messageId": 1222}]}'
   </code></pre>
  </div>

</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
    <span class="hljs-attr">"StatutResponse_List"</span>: [
        {
            <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
            <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
            <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+33699999993"</span>,
            <span class="hljs-attr">"messageId"</span>: <span class="hljs-number">111111</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"Delivered"</span>,
            <span class="hljs-attr">"date"</span>: <span class="hljs-string">"1517934416"</span>,
            <span class="hljs-attr">"stopSms"</span>: <span class="hljs-string">"0"</span>,
            <span class="hljs-attr">"isSpam"</span>: <span class="hljs-string">"0"</span>
        },
        {
            <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
            <span class="hljs-attr">"code"</span>: <span class="hljs-number">4</span>,
            <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+33699999992"</span>,
            <span class="hljs-attr">"messageId"</span>: <span class="hljs-number">1000</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"Numéro introuvable"</span>
        },
        {
            <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
            <span class="hljs-attr">"code"</span>: <span class="hljs-number">4</span>,
            <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+33699999991"</span>,
            <span class="hljs-attr">"messageId"</span>: <span class="hljs-number">1222</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"Numéro introuvable"</span>
        }
    ]
}</code></pre>
<h3 id="3-statuts-de-remises-possibles">3 statuts de remises possibles</h3>
<ul>
<li><strong>Delivered</strong></li>
<li><strong>Not delivered</strong></li>
<li><strong>Waiting</strong></li>
</ul>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td style="text-align: left;">Message introuvable</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/status-et-statistiques/statusp2/" rel="alternate" type="text/html" />
    <published>2024-07-25T14:57:32+00:00</published>
    <updated>2024-07-25T14:57:32+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/status-et-statistiques/statusp3/</id>
    <title>Statut par message</title>
    <content type="html">
      <![CDATA[<h1 id="statut-par-id">Statut par ID</h1>
<p>Cette requête permet de récupérer les statuts de plusieurs SMS à partir d’un ID.</p>
<div class="alert alert-info">
A noter : les comptes-rendus sont reçus en moyenne quelques secondes après l’envoi du SMS ; cependant, ce délai peut s’étendre jusqu’à 48h maximum selon les opérateurs et la charge de notre plateforme.
    </div>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: red; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/bulk-status</span>
</div>
<h2 id="parametres">Paramètres</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>messageId</strong></td>
<td>ID du message. <br> Il se trouve dans <a href="../envoyer-des-sms/envois_smsp1/">la réponse lors de l’envoi d’un SMS</a>.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?php

        // Prepare data for GET request
        $data = 'apiKey=YOUR_API_KEY&amp;messageId=300';

        $curl = curl_init();
        curl_setopt($curl,
         CURLOPT_URL,'https://api.smspartner.fr/v1/bulk-status?'.$data);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;

?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"
    Dim messageId As Integer = XXX

    #check credits
    Dim url As String
    url = base_url &amp; "bulk-status" &amp; "?apiKey=" &amp; apiKey &amp; "&amp;messageId=" &amp; messageId

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module
   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def get_delivery(self,message_id):
        url = URL + "/bulk-status?apiKey=" + API_KEY +  "&amp;messageId=" + message_id
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
  </code></pre></div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
curl -H  "Content-Type: application/json" -X GET  
https://api.smspartner.fr/v1/bulk-status?apiKey=xxx&amp;messageId=300
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require('https');

//Cette requête permet de récupérer les statuts de 
//plusieurs SMS à partir d’un ID.

// Préparer les données pour la requête GET
let data = 'apiKey=YOUR_API_KEY&amp;messageId=300';
let url = 'https://api.smspartner.fr/v1/bulk-status?' + 
data;

https.get(url, (res) =&gt; {
  let data = '';

  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  console.log("Erreur: " + err.message);
});
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class StatutSmsParID {
    public static void main(String[] args) {
        try {
            // Prepare data for GET request
            String apiKey = "YOUR_API_KEY";
            String messageId = "300";

            // Create GET request URL
            String urlString = "https://api.smspartner.fr/v1/bulk-status?" +

                    "apiKey=" + apiKey + "&amp;messageId=" + 
                    messageId;

            // Create URL object
            URL url = new URL(urlString);

            // Create HTTP connection
            HttpURLConnection connection = 
            (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(10000);
            connection.setReadTimeout(10000);

            // Send GET request
            int responseCode = connection.getResponseCode();

            // Get response
            BufferedReader reader;
            if (responseCode &gt;= 200 &amp;&amp; responseCode &lt;= 299) {
                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            } else {
                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));
            }

            StringBuilder response = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            reader.close();

            // Process your response here
            System.out.println(response.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

struct StatutSmsParID: View {
    @State private var result: String = "Loading..."

    var body: some View {
        VStack {
            Text("Statut SMS Par ID")
                .font(.title)
                .padding()

            Text(result)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: getStatusById)
    }

    func getStatusById() {
        let apiKey = "YOUR_API_KEY"
        let messageId = "300"
        let urlString = 
        "https://api.smspartner.fr/v1/bulk-status?apiKey=(apiKey)&amp;messageId=(messageId)"

        guard let url = URL(string: urlString) else {
            print("URL inválida")
            return
        }

        let task = URLSession.shared.dataTask(with: url) 
        { (data, response, error) in
            if let error = error {
                print("Error: (error)")
            } else if let data = data {
                let result = 
                String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    self.result = result ?? "Error"
                }
            }
        }

        task.resume()
    }
}

struct StatutSmsParID_Previews: PreviewProvider {
    static var previews: some View {
        StatutSmsParID()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code class="language-go">
package main

import (
    "io/ioutil"
    "log"
    "net/http"
    "time"
)

func main() {
    // Prepare data for GET request
    apiKey := "YOUR_API_KEY"
    messageId := "300"

    // Create GET request URL
    url := "https://api.smspartner.fr/v1/bulk-status?" +
        "apiKey=" + apiKey + "&amp;messageId=" + messageId

    // Create HTTP client
    client := &amp;http.Client{Timeout: 10 * time.Second}

    // Send GET request
    resp, err := client.Get(url)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Get response
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response body: %v", err)
    }

    // Process your response here
    log.Printf("Response: %s", body)
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "YOUR_API_KEY";
        var messageId = "300";
        var uri = new Uri($"https://api.smspartner.fr/v1/bulk-status?apiKey={apiKey}&amp;messageId={messageId}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("GET request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
    <span class="hljs-attr">"message_id"</span>: <span class="hljs-string">"111"</span>,
    <span class="hljs-attr">"StatutResponse_List"</span>: [
        {
            <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+336XXXXXXX1"</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"Delivered"</span>,
            <span class="hljs-attr">"stopSMS"</span>: <span class="hljs-literal">false</span>,
            <span class="hljs-attr">"date"</span>: <span class="hljs-string">"1517989111"</span>
        },
        {
            <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+336XXXXXXX2"</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"Delivered"</span>,
            <span class="hljs-attr">"stopSMS"</span>: <span class="hljs-literal">false</span>,
            <span class="hljs-attr">"date"</span>: <span class="hljs-string">"1517989101"</span>
        }
             ...
}</code></pre>
<h3 id="3-statuts-de-remises-possibles">3 statuts de remises possibles</h3>
<ul>
<li><strong>Delivered</strong></li>
<li><strong>Not delivered</strong></li>
<li><strong>Waiting</strong></li>
</ul>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td style="text-align: left;">L’ID du message est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td style="text-align: left;">Message introuvable</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/status-et-statistiques/statusp3/" rel="alternate" type="text/html" />
    <published>2024-07-25T14:43:29+00:00</published>
    <updated>2024-07-25T14:43:29+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp6/</id>
    <title>Annuler l’envoi d’un SMS</title>
    <content type="html">
      <![CDATA[<h1 id="annuler-l-envoi-d-un-sms-differe">Annuler l’envoi d’un SMS différé</h1>
<p>Cette requête est utilisée pour envoyer un sondage en temps réel ou en différé.</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: red; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/message-cancel</span>
</div>
<h2 id="parametres">Paramètres</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>messageId</strong></td>
<td>ID du message. <br> Il se trouve dans <a href="envois_smsp1/">la réponse lors de l’envoi d’un SMS</a>.</td>
</tr>
</tbody>
</table>
<h3 id="parametres-optionnels">Paramètres optionnels</h3>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>_format</strong></td>
<td>Format de la réponse. Vous pouvez choisir entre <code>JSON</code> ou <code>XML</code>. Par défaut, le format de réponse est <code>JSON</code></td>
</tr>
</tbody>
</table>
<div class="alert alert-info">
       Attention !! Il n’est pas possible d’annuler l’envoi d’un SMS<strong> moins de 5 minutes avant son envoi </strong>.
    </div>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?php
        // Prepare data for GET request
        $data = 'apiKey=YOUR_API_KEY&amp;messageId=300';

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,
        'https://api.smspartner.fr/v1/message-cancel?'.$data);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"
    Dim messageId As Integer = XXX

    #check credits
    Dim url As String
    url = base_url &amp; "message-cancel" &amp; "?apiKey=" &amp; apiKey &amp; "&amp;messageId=" &amp; messageId

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def get_delivery(self,phone_numbers,message_id):
        url = URL + "/message-cancel?apiKey=" + API_KEY + "&amp;messageId=" + message_id
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
  curl -H  "Content-Type: application/json" -X GET  https://api.smspartner.fr/v1/message-cancel?apiKey=xxx&amp;messageId=300
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require('https');

// Préparer les données pour la requête GET
let data = 'apiKey=YOUR_API_KEY&amp;messageId=300';
let url = 'https://api.smspartner.fr/v1/message-cancel?' + data;

https.get(url, (res) =&gt; {
  let data = '';

  // Un morceau de données a été reçu.
  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  // La totalité de la réponse a été reçue. Imprimer le résultat.
  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  // Un message d'erreur sera imprimé en cas d'erreur.
  console.log("Erreur: " + err.message);
});
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class AnnulerEnvoiSMS {
    public static void main(String[] args) {
        try {
            // Prepare data for GET request
            String apiKey = "YOUR_API_KEY";
            String messageId = "300";

            // Create GET request URL
            String urlString = "https://api.smspartner.fr/v1/message-cancel?" +
                    "apiKey=" + apiKey + "&amp;messageId=" + messageId;

            // Create URL object
            URL url = new URL(urlString);

            // Create HTTP connection
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(10000);
            connection.setReadTimeout(10000);

            // Send GET request
            int responseCode = connection.getResponseCode();

            // Get response
            BufferedReader reader;
            if (responseCode &gt;= 200 &amp;&amp; responseCode &lt;= 299) {
                reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            } else {
                reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));
            }

            StringBuilder response = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            reader.close();

            // Process your response here
            System.out.println(response.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

struct AnnulerEnvoi: View {
    @State private var result: String = "Loading..."

    var body: some View {
        VStack {
            Text("Annuler Envoi")
                .font(.title)
                .padding()

            Text(result)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: cancelMessage)
    }

    func cancelMessage() {
        let apiKey = "YOUR_API_KEY"
        let messageId = "300"
        let urlString = "https://api.smspartner.fr/v1/message-cancel?apiKey=(apiKey)&amp;messageId=(messageId)"

        guard let url = URL(string: urlString) else {
            print("URL inválida")
            return
        }

        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            if let error = error {
                print("Error: (error)")
            } else if let data = data {
                let result = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    self.result = result ?? "Error"
                }
            }
        }

        task.resume()
    }
}

struct AnnulerEnvoi_Previews: PreviewProvider {
    static var previews: some View {
        AnnulerEnvoi()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code class="language-go">
package main

import (
    "io/ioutil"
    "log"
    "net/http"
    "time"
)

func main() {
    // Prepare data for GET request
    apiKey := "YOUR_API_KEY"
    messageId := "300"

    // Create GET request URL
    url := "https://api.smspartner.fr/v1/message-cancel?" +
        "apiKey=" + apiKey + "&amp;messageId=" + messageId

    // Create HTTP client
    client := &amp;http.Client{Timeout: 10 * time.Second}

    // Send GET request
    resp, err := client.Get(url)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Get response
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response body: %v", err)
    }

    // Process your response here
    log.Printf("Response: %s", body)
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "YOUR_API_KEY";
        var messageId = "300";
        var uri = new Uri($"https://api.smspartner.fr/v1/message-cancel?apiKey={apiKey}&amp;messageId={messageId}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("GET request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
  <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
  <span class="hljs-attr">"message"</span>: <span class="hljs-string">"L'envoi du SMS a été annulé."</span>
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">10</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Clé API incorrecte"</span>
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">3</td>
<td style="text-align: left;">L’ID du message est requis</td>
</tr>
<tr>
<td style="text-align: center;">4</td>
<td style="text-align: left;">Message introuvable</td>
</tr>
<tr>
<td style="text-align: center;">5</td>
<td style="text-align: left;">L’envoi du SMS a déjà été annulé</td>
</tr>
<tr>
<td style="text-align: center;">6</td>
<td style="text-align: left;">Vous ne pouvez pas annuler l’envoi d’un SMS moins de 5 minutes avant son envoi</td>
</tr>
<tr>
<td style="text-align: center;">7</td>
<td style="text-align: left;">Vous ne pouvez pas annuler un SMS déjà envoyé</td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp6/" rel="alternate" type="text/html" />
    <published>2024-07-25T12:59:36+00:00</published>
    <updated>2024-07-25T12:59:36+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp5/</id>
    <title>Envoyer un sondage</title>
    <content type="html">
      <![CDATA[<h1 id="envoyer-un-sondage">Envoyer un sondage</h1>
<p>Cette requête est utilisée pour envoyer un sondage en temps réel ou en différé.</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;"> https://api.smspartner.fr/v1/sondage/to/send</span>
</div>
<h2 id="parametres">Paramètres</h2>
<div class="alert alert-info">
        La plateforme n'envoie pas de SMS commerciaux entre <strong> 20h et 8h en semaine et les dimanches et jours fériés </strong>(restriction légale). Si un message SMS est envoyé, le message est <strong>en pause jusqu'au prochain jour ouvrable à 8h </strong>. Ne vous envoyez pas de SMS commerciaux? contactez-nous pour désactiver cette restriction : <a href="mailto:help@smspartner.fr">help@smspartner.fr</a>
    </div>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>phoneNumbers</strong></td>
<td>Numéros de téléphone des destinataires. Pour l'envoi de plusieurs SMS les numéros doivent être séparés par des virgules. <strong>La limite d'envoi sur une seule requête est de 500 numéros.</strong> <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul></td>
</tr>
<tr>
<td style="text-align: center;"><strong>sondageIdent</strong></td>
<td>Identifiant du sondage.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>tag</strong></td>
<td>Chaîne de caractères de 20 caractères maximum sans espace(s) et vous permettant de tagger vos envois.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>scheduledDeliveryDate</strong></td>
<td>Date d'envoi du SMS, au format <code>dd/MM/yyyy</code>, à définir uniquement si vous souhaitez que les SMS soient envoyés en différé.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>time</strong></td>
<td>Heure d'envoi du SMS (format 0-24), obligatoire si <code>scheduledDeliveryDate</code> est définie.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>minute</strong></td>
<td>Minute d'envoi du SMS (format 0-55, par intervalle de cinq minutes), obligatoire si <code>scheduledDeliveryDate</code> est définie.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>_format</strong></td>
<td>Format de la réponse. Vous pouvez choisir entre <code>JSON</code> ou <code>XML</code>. Par défaut, le format de réponse est <code>JSON</code></td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?php
        // Prepare data for POST request
        $fields = array(
            'apiKey'=&gt; 'YOUR API KEY',
            'phoneNumbers'=&gt; '336xxxxxxxx',
            'sondageIdent' =&gt; 'SONDAGE_IDENT',
            'scheduledDeliveryDate'=&gt; '21/10/2014',
            'time'=&gt; 9,
            'minute'=&gt; 0
        );

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/sondage/to/send');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
 <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #send sms
    url = base_url &amp; "sondage/to/send"
    #note : utiliser une librairie JSON en production, par exemple :
    #https//www.nuget.org/packages/Newtonsoft.Json/
    Dim parameters As String = String.Format(
        "{{""apiKey"":""{0}"",""phoneNumbers"":""{1}"",""sondageIdent"":""{2}""}}",
        apiKey,
        "+33XXXXXXXXX",
        "SONDAGE_IDENT")
    Console.Write(parameters)
    apiRequest("POST", url, parameters)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def send_sms(self,phone_numbers, sondageIdent):
        #sender = "DEMOSMS"
        print(phone_numbers)

        data = OrderedDict([
            ("apiKey", API_KEY),
            ("phoneNumbers", phone_numbers),
            ("sondageIdent", sondageIdent)
        ])

        url = URL + "/send"
        r = requests.post(url, data=json.dumps(data), verify=False)

        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print("SMS msg {} not delivered to {}".format(msg, phone_numbers))
            status = False
        return status
   </code></pre>
  </div>
    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
    curl -H  "Content-Type: application/json" -X POST -d '{"apiKey":"xxxxx","phoneNumbers":"xxxx","sondageIdent":"SONDAGE_IDENT"}' https://api.smspartner.fr/v1/sondage/to/send
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require('https');

// Préparer les données pour la requête POST
let data = JSON.stringify({
  apiKey: 'YOUR API KEY',
  phoneNumbers: '+336XXXXXXXX',
  // identifiant du sondage que vous avez créé dans votre compte SMS Partner
  sondageIdent: 'SONDAGE ID',
  scheduledDeliveryDate: '04/07/2023',
  time: 11,
  minute: 55 //tous les 5 minutes ex: 00, 05, 10, 15, 20, etc.
});

let options = {
  hostname: 'api.smspartner.fr',
  path: '/v1/sondage/to/send',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': data.length
  }
};

let req = https.request(options, (res) =&gt; {
  let data = '';
  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  console.log("Erreur: " + err.message);
});

req.write(data);
req.end();
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class SondageParSMS {
    public static void main(String[] args) {
        try {
            // Prepare data for POST request
            String apiKey = "your_api_key";
            String phoneNumbers = "+336XXXXXXXX";
            String sondageIdent = "your_sondage_ident";
            String scheduledDeliveryDate = "05/07/2023";
            int time = 10;
            int minute = 35;

            // Create JSON payload
            String jsonPayload = "{"apiKey": "" + apiKey + "", "phoneNumbers": "" + phoneNumbers +
                    "", "sondageIdent": "" + sondageIdent + "", "scheduledDeliveryDate": "" +
                    scheduledDeliveryDate + "", "time": " + time + ", "minute": " + minute + "}";

            // Create POST request
            URL url = new URL("https://api.smspartner.fr/v1/sondage/to/send");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "application/json");
            connection.setDoOutput(true);

            // Send POST request
            OutputStream outputStream = connection.getOutputStream();
            outputStream.write(jsonPayload.getBytes());
            outputStream.flush();
            outputStream.close();

            // Get response
            int responseCode = connection.getResponseCode();
            BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            StringBuilder response = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            reader.close();

            // Process your response here
            System.out.println(response.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

struct SondageSMS: View {
    @State private var result: String = "Loading..."

    var body: some View {
        VStack {
            Text("Sondage SMS")
                .font(.title)
                .padding()

            Text(result)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: sendSondage)
    }

    func sendSondage() {
        let apiKey = "YOUR_API_KEY"
        let phoneNumber = "+336xxxxxxxx"
        let sondageIdent = "SONDAGE_IDENT"
        let scheduledDeliveryDate = "05/07/2023"
        let time = 9
        let minute = 0

        let urlString = "https://api.smspartner.fr/v1/sondage/to/send"
        let url = URL(string: urlString)!

        var request = URLRequest(url: url)
        request.httpMethod = "POST"
        request.addValue("application/json", forHTTPHeaderField: "Content-Type")

        let parameters: [String: Any] = [
            "apiKey": apiKey,
            "phoneNumbers": phoneNumber,
            "sondageIdent": sondageIdent,
            "scheduledDeliveryDate": scheduledDeliveryDate,
            "time": time,
            "minute": minute
        ]

        request.httpBody = try? JSONSerialization.data(withJSONObject: parameters)

        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
            if let error = error {
                print("Error: (error)")
            } else if let data = data {
                let resultString = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    self.result = resultString ?? "Error"
                }
            }
        }

        task.resume()
    }
}

struct SondageSMS_Previews: PreviewProvider {
    static var previews: some View {
        SondageSMS()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code class="language-go">
package main

import (
    "bytes"
    "encoding/json"
    "io/ioutil"
    "log"
    "net/http"
    "time"
)

func main() {
    // Prepare data for POST request
    data := map[string]interface{}{
        "apiKey":                "YOUR API KEY",
        "phoneNumbers":          "+336xxxxxxxx",
        "sondageIdent":          "SONDAGE_IDENT",
        "scheduledDeliveryDate": "21/10/2024",
        "time":                  9,
        "minute":                0,
    }

    payload, err := json.Marshal(data)
    if err != nil {
        log.Fatalf("Error preparing data: %v", err)
    }

    // Create POST request
    client := &amp;http.Client{Timeout: 10 * time.Second}
    req, err := http.NewRequest("POST", "https://api.smspartner.fr/v1/sondage/to/send", bytes.NewBuffer(payload))
    if err != nil {
        log.Fatalf("Error creating request: %v", err)
    }

    req.Header.Set("Content-Type", "application/json")

    // Send POST request
    resp, err := client.Do(req)
    if err != nil {
        log.Fatalf("Error sending request: %v", err)
    }
    defer resp.Body.Close()

    // Get response
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        log.Fatalf("Error reading response body: %v", err)
    }

    // Process your response here
    log.Printf("Response: %s", body)
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var request = new
        {
            apiKey = "YOUR_API_KEY",
            phoneNumbers = "+336xxxxxxxx",
            sondageIdent = "SONDAGE_IDENT",
            scheduledDeliveryDate = "21/10/2014",
            time = 9,
            minute = 0
        };

        var content = new StringContent(
            JsonConvert.SerializeObject(request),
            Encoding.UTF8,
            "application/json");

        HttpResponseMessage response = await client.PostAsync("https://api.smspartner.fr/v1/sondage/to/send", content);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("POST request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
   <span class="hljs-attr">"success"</span>:<span class="hljs-literal">true</span>,
   <span class="hljs-attr">"code"</span>:<span class="hljs-number">200</span>,
   <span class="hljs-attr">"message_id"</span>:<span class="hljs-number">307</span>,
   <span class="hljs-attr">"nb_sms"</span>: <span class="hljs-number">1</span>,
   <span class="hljs-attr">"cost"</span>: <span class="hljs-number">0.038</span>,
   <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
}</code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>:<span class="hljs-number">9</span>,
    <span class="hljs-attr">"error"</span>: [{
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[message].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Le message est requis"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[phoneNumber].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Ce numero de telephone n'est pas valide (922264)"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[sender].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"L'emetteur ne peut pas etre plus long que 11 caracteres"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[scheduledDeliveryDate].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"La date (21/11/2014 u00e0 :) est anterieure a la date actuelle."</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[minute].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"La minute est requise"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[time].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"L'heure est requise"</span>
    }]
}</code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">Le numéro de téléphone est requis</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td style="text-align: left;">Au moins une contrainte n’a pas été respectée lors de l’envoi :<br> L’émetteur ne peut pas être plus long que 11 caractères.<br>Numéro de téléphone non valide.<br> Si <strong>scheduledDeliveryDate</strong> est défini:<ul><li>La date (dd/mm/yyyy) est antérieure à la date actuelle.</li><li>La minute est requise.</li><li>L’heure est requise..</li></ul></td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">11</td>
<td style="text-align: left;">Manque de crédits</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp5/" rel="alternate" type="text/html" />
    <published>2024-07-24T15:08:28+00:00</published>
    <updated>2024-07-24T15:08:28+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp2/</id>
    <title>Envoi par lots</title>
    <content type="html">
      <![CDATA[<h1 id="envoyer-des-sms">Envoyer des SMS</h1>
<p>Cette requête est utilisée pour envoyer des SMS en temps réel ou en différé...</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/bulk-send</span>
</div>
<h2 id="parametres">Paramètres</h2>
<div class="alert alert-info">
        La plateforme n\'envoie pas de SMS commerciaux entre <strong> 20h et 8h en semaine et les dimanches et jours fériés </strong>(restriction légale). Si un message SMS est envoyé, le message est <strong>en pause jusqu\'au prochain jour ouvrable à 8h </strong>. Ne vous envoyez pas de SMS commerciaux? contactez-nous pour désactiver cette restriction : <a href="mailto:help@smspartner.fr">help@smspartner.fr</a>
    </div>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l\'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>SMSList</strong></td>
<td><strong>phoneNumber:</strong> <br> Numéros de téléphone des destinataires. Pour l\'envoi de plusieurs SMS les numéros doivent être séparés par des virgules. <strong>La limite d\'envoi sur une seule requête est de 500 numéros.</strong> <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul><strong>message</strong> <br> Contenu du SMS. <strong>160 caractères</strong> maximum par SMS (au-delà, il vous sera décompté un SMS supplémentaire par tranche de 153 caractères). <br>Attention, certains caractères spéciaux et accents sont remplacés lors de l\'envoi : <a href="#" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">Voir la liste</a> <br> <br>Le caractère ” doit obligatoirement être échappé (”) pour que le texte du SMS soit valide. Dans le cas contraire une erreur 400 sera retournée. <br>Le tag <code>:br:</code> permet de faire un saut de ligne. <strong>Attention le saut de ligne compte pour deux caractères.</strong> <br><strong>La mention STOP SMS est obligatoire pour les SMS à caractères commerciaux (voir le paramètre <code>isStopSms</code> ci-dessous).</strong> <br>Si c\'est un compte marketing la mention STOP SMS est ajoutée automatiquement.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;"><strong>gamme</strong></td>
<td>Gamme du SMS, sa valeur doit être : <ul><li>1 pour les SMS Premium</li><li>2 pour les SMS Low Cost</li></ul> ⚠️ Si ce paramètre est omis, les SMS seront envoyés dans la gamme Premium</td>
</tr>
<tr>
<td style="text-align: center;"><strong>sender</strong></td>
<td>Nom d’émetteur du message. Si l’émetteur est laissé vide, vos SMS seront acheminés avec un shortcode opérateur en guise d’expéditeur (exemple : 36xxx). <br>⚠️ Le nombre de caractères pour le nom de l\'émetteur est compris <strong>entre 3 et 11 inclus</strong> et ne doit pas comporter de caractères spéciaux. <br>Certains modèles de téléphone n\'interprètent pas les caractères spéciaux dans le nom d\'émetteur.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>tag</strong></td>
<td>Chaîne de caractères de 20 caractères maximum sans espace(s) et vous permettant de tagger vos envois.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>scheduledDeliveryDate</strong></td>
<td>Date d\'envoi du SMS, au format <code>dd/MM/yyyy</code>, à définir uniquement si vous souhaitez que les SMS soient envoyés en différé.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>time</strong></td>
<td>Heure d\'envoi du SMS (format 0-24), obligatoire si <code>scheduledDeliveryDate</code> est définie.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>minute</strong></td>
<td>Minute d\'envoi du SMS (format 0-55, par intervalle de cinq minutes), obligatoire si <code>scheduledDeliveryDate</code> est définie.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>urlResponse</strong></td>
<td>URL de retour des Réponses (ex: <a href="https://www.monurlderesponse">https://www.monurlderesponse</a>).</td>
</tr>
<tr>
<td style="text-align: center;"><strong>urlDlr</strong></td>
<td>URL de retour des Accusé de réception (ex: <a href="https://www.monurldlr">https://www.monurldlr</a>).</td>
</tr>
<tr>
<td style="text-align: center;"><strong>isStopSms</strong></td>
<td>Gamme Premium : 1 pour ajouter la mention STOP à la fin du SMS (obligatoire pour les SMS commerciaux).<br> ⚠️ Gamme ÉCO : Ce paramètre n’est pas applicable pour cette gamme, il est nécessaire d\'ajouter manuellement la mention NoPub=STOP pour les SMS commerciaux.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>isUnicode</strong></td>
<td>Si 1 : Active le mode Unicode, le nombre de caractères maximum par SMS sera de 70. <br><strong>Important :</strong> le SMS unicode doit être activé sur votre compte par un administrateur pour que les envois soient disponibles. Merci de prendre contact avec le service technique pour l’activation de cette fonctionnalité. <br> <a href="https://www.smspartner.fr/blog/liste-complete-des-emoticones-a-copier-coller" rel="noopener noreferrer nofollow">Voir la liste</a>.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>sandbox</strong></td>
<td>Pour tester l’envoi de SMS, vous pouvez utiliser le paramètre <code>sandbox:</code> <strong>1</strong> pour activer le mode bac à sable. ⚠️ Aucun SMS ne sera envoyé, et il n’y aura aucun débit sur votre compte. Ces SMS seront supprimés de vos listes d’envois automatiquement tous les jours.</td>
</tr>
<tr>
<td style="text-align: center;"><strong>_format</strong></td>
<td>Format de la réponse. Vous pouvez choisir entre <code>JSON</code> ou <code>XML</code>. Par défaut, le format de réponse est <code>JSON</code></td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?php
// Prepare data for POST request
        $fields = array(
            'apiKey'=&gt; 'YOUR API KEY',
            'sender' =&gt; 'mycompany',
            'scheduledDeliveryDate'=&gt; '21/10/2014',
            'time'=&gt; 9,
            'minute'=&gt; 0,
            'SMSList'=&gt; array(
                array(
                    'phoneNumber'=&gt; '06xxxxxxx1',
                    'message'=&gt; 'msg 0'
                ),
                array(
                    'phoneNumber'=&gt; '06xxxxxxx2',
                    'message'=&gt; 'msg 1'
                )

            )
        );

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/bulk-send');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 10);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields));

        $result = curl_exec($curl);
        curl_close($curl);

        // Process your response here
        echo $result;
?&gt;
    </code></pre>
  </div>
  <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #send sms
    url = base_url &amp; "bulk-send"
    #note : utiliser une librairie JSON en production, par exemple :
    #https//www.nuget.org/packages/Newtonsoft.Json/
    Dim parameters As String = String.Format(
        "{{""apiKey"":""{0}"",""sender"":""{1}"",""SMSList"":""{2}""}}",
        apiKey,
        "mycompany",
        {{ ""phoneNumber"":"06xxxxxxx1",""message"":"msg1"},{ ""phoneNumber"":"06xxxxxxx2",""message"":"msg2"}}
        )
    Console.Write(parameters)
    apiRequest("POST", url, parameters)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def send_sms(self,phone_numbers, msg, sender = "SMSPartner"):
        #sender = "DEMOSMS"
        print(phone_numbers)

        data = {"apiKey":APIKEY,"sender":sender,"SMSList":[{"phoneNumber":"06xxxxxxx1","message":"msg1"},{"phoneNumber":"06xxxxxxx2","message":"msg2"}]}

        url = URL + "/bulk-send"
        r = requests.post(url, data=json.dumps(data), verify=False)

        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print("SMS msg {} not delivered to {}".format(msg, phone_numbers))
            status = False
        return status
   </code></pre>
  </div>

    <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-bash">
    curl -H  "Content-Type: application/json" -X POST -d '{"apiKey":"xxxxx","to":"xxxx","from":"xxx","message":"test"}' https://api.smspartner.fr/v1/vn/send
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require('https');

// Remplacez par votre clé API
const apiKey = 'VOTRE_CLÉ_API';

// Objet JSON qui contient les informations nécessaires pour envoyer les SMS en lots
const data = JSON.stringify({
    apiKey: apiKey,
    sender: 'mycompany',
    scheduledDeliveryDate: '21/10/2014',
    time: 9,
    minute: 0,
    SMSList: [
        {
            phoneNumber: '06xxxxxxx1',
            message: 'msg 0',
        },
        {
            phoneNumber: '06xxxxxxx2',
            message: 'msg 1',
        },
    ],
});

// Définir les options pour la requête HTTP POST vers l'API SMS Partner
const options = {
  hostname: 'api.smspartner.fr',
  port: 443,
  path: '/v1/send',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': data.length,
    'cache-control': 'no-cache',
  },
};

// Demande HTTP POST avec les options et les données définies précédemment
const req = https.request(options, (res) =&gt; {
  console.log(`statusCode: ${res.statusCode}`);

  // Afficher les données de réponse de l'API sur la sortie standard
  res.on('data', (d) =&gt; {
    process.stdout.write(d);
  });
});

// Affichage en cas d'erreur lors de l'exécution de la requête HTTP POST
req.on('error', (error) =&gt; {
  console.error(error);
});

// Envoyer les données de l'objet 'data' à la demande
req.write(data);
// Terminer la demande HTTP POST
req.end();
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.OutputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.stream.Collectors;
import org.json.JSONArray;
import org.json.JSONObject;

public class SMSRequest {
    public static void main(String[] args) {
        try {
        // Création de l'objet URL avec l'adresse de l'API SMS
               URL url = new URL("https://api.smspartner.fr/v1/bulk-send"
        // Ouverture de la connexion HTTP avec l'API
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Content-Type", "application/json");
            conn.setRequestProperty("cache-control", "no-cache");
            conn.setDoOutput(true);

            // Création de l'objet JSON contenant les paramètres des SMS à envoyer en lot
            JSONObject json = new JSONObject();
            json.put("apiKey", "VOTRE_API_KEY"); // Remplacez par votre clé API
            json.put("sender", "mycompany");
            json.put("scheduledDeliveryDate", "21/10/2014");
            json.put("time", 9);
            json.put("minute", 0);

            JSONArray SMSList = new JSONArray();
            JSONObject sms1 = new JSONObject();
            sms1.put("phoneNumber", "06xxxxxxx1");
            sms1.put("message", "msg 0");
            SMSList.put(sms1);

            JSONObject sms2 = new JSONObject();
            sms2.put("phoneNumber", "06xxxxxxx2");
            sms2.put("message", "msg 1");
            SMSList.put(sms2);

            json.put("SMSList", SMSList);

        // Écriture des données JSON dans le corps de la requête HTTP
            OutputStream os = conn.getOutputStream(); 
            os.write(json.toString().getBytes());
            os.flush();

        // Lecture de la réponse de l'API
            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String response = br.lines().collect(Collectors.joining());
            System.out.println(response);

        // Fermeture de la connexion HTTP
            conn.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

// Cette requête est utilisée pour envoyer des SMS par lot de 500 en temps réel ou en différé
struct SMSParLotsView: View {
    var body: some View {
        // Un bouton qui appelle la fonction sendSMSParLots() lorsqu'il est pressé
        Button(action: {
            sendSMSParLots()
        }) {
            Text("Send Bulk SMS")
                .font(.system(size: 20))
                .foregroundColor(.white)
                .frame(minWidth: 0, maxWidth: .infinity)
                .padding()
                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity(0.8)]), startPoint: .top, endPoint: .bottom))
                .cornerRadius(10)
                .padding(.horizontal)
        }
    }

    func sendSMSParLots() {
        // Liste des SMS à envoyer
        let smsList: [[String: String]] = [
            [
                "phoneNumber": "06XXXXXXXX", // Numéro de téléphone du destinataire
                "message": "msg 0 en temps réel" // Message à envoyer
            ],
            [
                "phoneNumber": "06XXXXXXXX", // Un autre numéro de téléphone
                "message": "msg 1 en temps réel" // Un autre message
            ]
        ]

        // Données à envoyer à l'API
        let data: [String: Any] = [
            "apiKey": "XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX", // Votre clé API
            "sender": "mycompany", // L'expéditeur du SMS
            // Ces 3 lignes permettent de programmer un envoi différé.
            //"scheduledDeliveryDate": "12/05/2023", // Date de livraison prévue
            //"time": 9, // Heure de livraison
            //"minute": 0, // Minute de livraison
            "SMSList": smsList // La liste des SMS à envoyer
        ]

        // Conversion des données en JSON
        guard let jsonData = try? JSONSerialization.data(withJSONObject: data, options: []) else {
            fatalError("Error converting data to JSON.")
        }

        // Création de la requête HTTP
        let url = URL(string: "https://api.smspartner.fr/v1/bulk-send")! // URL de l'API
        var request = URLRequest(url: url)
        request.httpMethod = "POST" // Méthode HTTP
        request.httpBody = jsonData // Corps de la requête
        request.addValue("application/json", forHTTPHeaderField: "Content-Type") // Type de contenu
        request.addValue("(jsonData.count)", forHTTPHeaderField: "Content-Length") // Longueur du contenu
        request.addValue("no-cache", forHTTPHeaderField: "cache-control") // Contrôle du cache

        // Envoi de la requête HTTP
        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
            // Vérification de la réponse HTTP
            guard let httpResponse = response as? HTTPURLResponse else {
                fatalError("Error: Invalid HTTP response.")
            }
            print("statusCode: (httpResponse.statusCode)") // Impression du code d'état HTTP

            // Gestion des erreurs éventuelles
            if let error = error {
                print("Error: (error.localizedDescription)")
            }

            // Impression de la réponse de l'API
            if let data = data {
                if let responseString = String(data: data, encoding: .utf8) {
                    print("Response: (responseString)")
                }
            }
        }
        task.resume()
    }
}
// Un aperçu de la vue
struct BulkSMSView_Previews: PreviewProvider {
    static var previews: some View {
        SMSParLotsView()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code class="language-go">
package main

import (
    "bytes"
    "encoding/json"
    "fmt"
    "net/http"
)

func main() {
    apiKey := "VOTRE CLE API"
    sender := "monentreprise"
    scheduledDeliveryDate := "21/10/2014"
    time := 9
    minute := 0

    // Construire les données JSON pour la requête POST
    data := map[string]interface{}{
        "apiKey":               apiKey,
        "sender":               sender,
        "scheduledDeliveryDate": scheduledDeliveryDate,
        "time":                 time,
        "minute":               minute,
        "SMSList": []map[string]string{
            {"phoneNumber": "06xxxxxxx1", "message": "msg 0"},
            {"phoneNumber": "06xxxxxxx2", "message": "msg 1"},
        },
    }

    // Convertir les données en JSON
    jsonData, err := json.Marshal(data)
    if err != nil {
        fmt.Println("Erreur lors de la conversion en JSON:", err)
        return
    }

    // Effectuer la requête POST
    url := "https://api.smspartner.fr/v1/bulk-send"
    resp, err := http.Post(url, "application/json", bytes.NewBuffer(jsonData))
    if err != nil {
        fmt.Println("Erreur lors de l'envoi de la requête:", err)
        return
    }
    defer resp.Body.Close()

    // Traiter la réponse
    if resp.StatusCode == http.StatusOK {
        body := new(bytes.Buffer)
        _, err := body.ReadFrom(resp.Body)
        if err != nil {
            fmt.Println("Erreur lors de la lecture de la réponse:", err)
            return
        }
        fmt.Println(body.String())
    } else {
        fmt.Println("La requête POST a échoué. Code de réponse:", resp.StatusCode)
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var request = new
        {
            apiKey = "YOUR_API_KEY",
            sender = "mycompany",
            scheduledDeliveryDate = "21/10/2014",
            time = 9,
            minute = 0,
            SMSList = new[]
            {
                new
                {
                    phoneNumber = "06xxxxxxx1",
                    message = "msg 0"
                },
                new
                {
                    phoneNumber = "06xxxxxxx2",
                    message = "msg 1"
                }
            }
        };

        var content = new StringContent(
            JsonConvert.SerializeObject(request),
            Encoding.UTF8,
            "application/json");

        HttpResponseMessage response = await client.PostAsync("https://api.smspartner.fr/v1/bulk-send", content);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("POST request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
       <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
    <span class="hljs-attr">"message_id"</span>: xxxxxx,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>,
    <span class="hljs-attr">"cost"</span>: <span class="hljs-number">0.076</span>,
    <span class="hljs-attr">"nbSMS"</span>: <span class="hljs-number">2</span>,
    <span class="hljs-attr">"SMSResponse_List"</span>: [
        {
            <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
            <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
            <span class="hljs-attr">"nbSms"</span>: <span class="hljs-number">1</span>,
            <span class="hljs-attr">"cost"</span>: <span class="hljs-number">0.038</span>,
            <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+336xxxxxxx1"</span>
        },
        {
            <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
            <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
            <span class="hljs-attr">"nbSms"</span>: <span class="hljs-number">1</span>,
            <span class="hljs-attr">"cost"</span>: <span class="hljs-number">0.038</span>,
            <span class="hljs-attr">"phoneNumber"</span>: <span class="hljs-string">"+336xxxxxxx2"</span>
        }
    ]
}</code></pre>
<h3 id="xml">XML</h3>
<pre><code class="language-xml hljs xml">    <span class="hljs-meta">&lt;?xml version='1.0' encoding='UTF-8'?&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>200<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>xxxxxx<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
        &lt;![CDATA[EUR]]&gt;
    <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>0.076<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>200<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>0.038<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                &lt;![CDATA[+336xxxxxxx1]]&gt;
            <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>200<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>0.038<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                &lt;![CDATA[+336xxxxxxx2]]&gt;
            <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span></code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>:<span class="hljs-number">9</span>,
    <span class="hljs-attr">"error"</span>: [{
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[message].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Le message est requis"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[phoneNumber].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Ce numero de telephone n'est pas valide (922264)"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[sender].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"L'emetteur ne peut pas etre plus long que 11 caracteres"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[scheduledDeliveryDate].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"La date (21/11/2014 u00e0 :) est anterieure a la date actuelle."</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[minute].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"La minute est requise"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[time].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"L'heure est requise"</span>
    }]
}</code></pre>
<h3 id="xml-1">XML</h3>
<pre><code class="language-xml hljs xml"><span class="hljs-meta">&lt;?xml version='1.0' encoding='UTF-8'?&gt;</span>
 <span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>9<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                  <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[message].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                  <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>Le message est requis<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                   <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[phoneNumbers].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                   <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>Ce numéro de téléphone n'est pas valide (922264)<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[sender].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>L'émetteur ne peut pas être plus long que 11 caractères<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[scheduledDeliveryDate].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>La date (21/11/2014 à :) est anterieure à la date actuelle. Si vous
                     souhaitez l'envoyer maintenant vous devez sélectionner [Envoi immédiat]<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[minute].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>La minute est requise<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[time].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>L'heure est requise<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span></code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">Le numéro de téléphone est requis</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td style="text-align: left;">Au moins une contrainte n’a pas été respectée lors de l’envoi :<br> L’émetteur ne peut pas être plus long que 11 caractères.<br>Numéro de téléphone non valide.<br> Si <strong>scheduledDeliveryDate</strong> est défini:<ul><li>La date (dd/mm/yyyy) est antérieure à la date actuelle.</li><li>La minute est requise.</li><li>L’heure est requise..</li></ul></td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">11</td>
<td style="text-align: left;">Manque de crédits</td>
</tr>
</tbody>
</table>
<h2 id="liste-des-caracteres-remplaces">Liste des caractères remplacés</h2>
<p>Consulter la table des caractéres remplacés <a href="/docs/sms/envoyer-des-sms/envois_smsp4" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;"> 📒 Voir table</a> <br> <br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp2/" rel="alternate" type="text/html" />
    <published>2024-07-24T14:47:53+00:00</published>
    <updated>2024-07-24T14:47:53+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp4/</id>
    <title>Liste des caractères remplacés</title>
    <content type="html">
      <![CDATA[<p><br></p>
<h1 id="liste-des-caracteres-remplaces">Liste des caractères remplacés</h1>
<table>
<thead>
<tr>
<th style="text-align: center;">Caractères</th>
<th style="text-align: center;">Remplacé par</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">ą</td>
<td style="text-align: center;">à</td>
</tr>
<tr>
<td style="text-align: center;">’</td>
<td style="text-align: center;">‘</td>
</tr>
<tr>
<td style="text-align: center;">ÿ</td>
<td style="text-align: center;">y</td>
</tr>
<tr>
<td style="text-align: center;">ç</td>
<td style="text-align: center;">Ç</td>
</tr>
<tr>
<td style="text-align: center;">û</td>
<td style="text-align: center;">u</td>
</tr>
<tr>
<td style="text-align: center;">ü</td>
<td style="text-align: center;">u</td>
</tr>
<tr>
<td style="text-align: center;">ï</td>
<td style="text-align: center;">i</td>
</tr>
<tr>
<td style="text-align: center;">ô</td>
<td style="text-align: center;">o</td>
</tr>
<tr>
<td style="text-align: center;">ö</td>
<td style="text-align: center;">o</td>
</tr>
<tr>
<td style="text-align: center;">ó</td>
<td style="text-align: center;">o</td>
</tr>
<tr>
<td style="text-align: center;">î</td>
<td style="text-align: center;">i</td>
</tr>
<tr>
<td style="text-align: center;">ë</td>
<td style="text-align: center;">e</td>
</tr>
<tr>
<td style="text-align: center;">ê</td>
<td style="text-align: center;">e</td>
</tr>
<tr>
<td style="text-align: center;">[</td>
<td style="text-align: center;">(</td>
</tr>
<tr>
<td style="text-align: center;">]</td>
<td style="text-align: center;">)</td>
</tr>
<tr>
<td style="text-align: center;">{</td>
<td style="text-align: center;">(</td>
</tr>
<tr>
<td style="text-align: center;">}</td>
<td style="text-align: center;">)</td>
</tr>
<tr>
<td style="text-align: center;">`</td>
<td style="text-align: center;">‘</td>
</tr>
<tr>
<td style="text-align: center;">µ</td>
<td style="text-align: center;">u</td>
</tr>
<tr>
<td style="text-align: center;">Ä</td>
<td style="text-align: center;">A</td>
</tr>
<tr>
<td style="text-align: center;">À</td>
<td style="text-align: center;">A</td>
</tr>
<tr>
<td style="text-align: center;">Á</td>
<td style="text-align: center;">A</td>
</tr>
<tr>
<td style="text-align: center;">Â</td>
<td style="text-align: center;">A</td>
</tr>
<tr>
<td style="text-align: center;">Ã</td>
<td style="text-align: center;">A</td>
</tr>
<tr>
<td style="text-align: center;">È</td>
<td style="text-align: center;">E</td>
</tr>
<tr>
<td style="text-align: center;">Ê</td>
<td style="text-align: center;">E</td>
</tr>
<tr>
<td style="text-align: center;">Ë</td>
<td style="text-align: center;">E</td>
</tr>
<tr>
<td style="text-align: center;">Î</td>
<td style="text-align: center;">I</td>
</tr>
<tr>
<td style="text-align: center;">Ü</td>
<td style="text-align: center;">U</td>
</tr>
<tr>
<td style="text-align: center;">Ù</td>
<td style="text-align: center;">U</td>
</tr>
<tr>
<td style="text-align: center;">Ú</td>
<td style="text-align: center;">U</td>
</tr>
<tr>
<td style="text-align: center;">Û</td>
<td style="text-align: center;">U</td>
</tr>
<tr>
<td style="text-align: center;">Ý</td>
<td style="text-align: center;">Y</td>
</tr>
<tr>
<td style="text-align: center;">ä</td>
<td style="text-align: center;">a</td>
</tr>
<tr>
<td style="text-align: center;">á</td>
<td style="text-align: center;">a</td>
</tr>
<tr>
<td style="text-align: center;">â</td>
<td style="text-align: center;">a</td>
</tr>
<tr>
<td style="text-align: center;">ã</td>
<td style="text-align: center;">a</td>
</tr>
<tr>
<td style="text-align: center;">Ö</td>
<td style="text-align: center;">O</td>
</tr>
<tr>
<td style="text-align: center;">Ô</td>
<td style="text-align: center;">O</td>
</tr>
<tr>
<td style="text-align: center;">œ</td>
<td style="text-align: center;">oe</td>
</tr>
<tr>
<td style="text-align: center;">^</td>
<td style="text-align: center;">Supprimé</td>
</tr>
<tr>
<td style="text-align: center;">~</td>
<td style="text-align: center;">Supprimé</td>
</tr>
<tr>
<td style="text-align: center;">|</td>
<td style="text-align: center;">Supprimé</td>
</tr>
<tr>
<td style="text-align: center;">\</td>
<td style="text-align: center;">Supprimé</td>
</tr>
<tr>
<td style="text-align: center;">¨</td>
<td style="text-align: center;">Supprimé</td>
</tr>
<tr>
<td style="text-align: center;">°</td>
<td style="text-align: center;">.</td>
</tr>
<tr>
<td style="text-align: center;">‘</td>
<td style="text-align: center;">‘</td>
</tr>
<tr>
<td style="text-align: center;">“</td>
<td style="text-align: center;">‘</td>
</tr>
<tr>
<td style="text-align: center;">ñ</td>
<td style="text-align: center;">n</td>
</tr>
<tr>
<td style="text-align: center;">Ñ</td>
<td style="text-align: center;">N</td>
</tr>
<tr>
<td style="text-align: center;">§</td>
<td style="text-align: center;">Supprimé</td>
</tr>
<tr>
<td style="text-align: center;">«</td>
<td style="text-align: center;">“</td>
</tr>
<tr>
<td style="text-align: center;">»</td>
<td style="text-align: center;">“</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp4/" rel="alternate" type="text/html" />
    <published>2024-07-24T14:45:05+00:00</published>
    <updated>2024-07-24T14:45:05+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp1/</id>
    <title>Envoi unitaire</title>
    <content type="html">
      <![CDATA[<h1 id="envoyer-des-sms">Envoyer des SMS</h1>
<p>Cette requête est utilisée pour envoyer des SMS en temps réel ou en différé.</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #49CC90; color: white;  display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">POST</div> 
  <span style=" display: inline-block; vertical-align: middle; margin-left: 10px;"> https://api.smspartner.fr/v1/send</span>
</div>
<h2 id="parametres">Paramètres</h2>
<div class="alert alert-info">
        La plateforme n'envoie pas de SMS commerciaux entre <strong> 20h et 8h en semaine et les dimanches et jours fériés </strong>(restriction légale). Si un message SMS est envoyé, le message est <strong>en pause jusqu'au prochain jour ouvrable à 8h </strong>. Ne vous envoyez pas de SMS commerciaux? contactez-nous pour désactiver cette restriction : <a href="mailto:help@smspartner.fr">help@smspartner.fr</a>
    </div>
<table>
<thead>
<tr>
<th>Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>apiKey</strong></td>
<td>Clé API de votre compte. Vous l'obtiendrez dans votre <a href="https://my.smspartner.fr/connexion" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">compte SMS Partner</a>.</td>
</tr>
<tr>
<td><strong>phoneNumbers</strong></td>
<td>Numéros de téléphone des destinataires. Pour l'envoi de plusieurs SMS les numéros doivent être séparés par des virgules. <strong>La limite d'envoi sur une seule requête est de 500 numéros.</strong> <ul><li>Au format national (0600000000) et international (+33600000000) pour des numéros français.</li><li>Au format international (+496xxxxxxxx), pour des numéros hors France.</li></ul></td>
</tr>
<tr>
<td><strong>message</strong></td>
<td>Contenu du SMS. <strong>160 caractères</strong> maximum par SMS (au-delà, il vous sera décompté un SMS supplémentaire par tranche de 153 caractères). <br>Attention, certains caractères spéciaux et accents sont remplacés lors de l'envoi : <a href="#" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;">Voir la liste</a> <br>Le caractère ” doit obligatoirement être échappé (”) pour que le texte du SMS soit valide. Dans le cas contraire une erreur 400 sera retournée. <br>Le tag <code>:br:</code> permet de faire un saut de ligne. <strong>Attention le saut de ligne compte pour deux caractères.</strong> <br><strong>La mention STOP SMS est obligatoire pour les SMS à caractères commerciaux (voir le paramètre <code>isStopSms</code> ci-dessous).</strong> <br>Si c'est un compte marketing la mention STOP SMS est ajoutée automatiquement.</td>
</tr>
</tbody>
</table>
<h2 id="parametres-optionnels">Paramètres optionnels</h2>
<table>
<thead>
<tr>
<th>Paramètre</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>gamme</strong></td>
<td>Gamme du SMS, sa valeur doit être : <ul><li>1 pour les SMS Premium</li><li>2 pour les SMS Low Cost</li></ul> ⚠️ Si ce paramètre est omis, les SMS seront envoyés dans la gamme Premium</td>
</tr>
<tr>
<td><strong>sender</strong></td>
<td>Nom d’émetteur du message. Si l’émetteur est laissé vide, vos SMS seront acheminés avec un shortcode opérateur en guise d’expéditeur (exemple : 36xxx). <br>⚠️ Le nombre de caractères pour le nom de l'émetteur est compris <strong>entre 3 et 11 inclus</strong> et ne doit pas comporter de caractères spéciaux. <br>Certains modèles de téléphone n'interprètent pas les caractères spéciaux dans le nom d'émetteur.</td>
</tr>
<tr>
<td><strong>tag</strong></td>
<td>Chaîne de caractères de 20 caractères maximum sans espace(s) et vous permettant de tagger vos envois.</td>
</tr>
<tr>
<td><strong>scheduledDeliveryDate</strong></td>
<td>Date d'envoi du SMS, au format <code>dd/MM/yyyy</code>, à définir uniquement si vous souhaitez que les SMS soient envoyés en différé.</td>
</tr>
<tr>
<td><strong>time</strong></td>
<td>Heure d'envoi du SMS (format 0-24), obligatoire si <code>scheduledDeliveryDate</code> est définie.</td>
</tr>
<tr>
<td><strong>minute</strong></td>
<td>Minute d'envoi du SMS (format 0-55, par intervalle de cinq minutes), obligatoire si <code>scheduledDeliveryDate</code> est définie.</td>
</tr>
<tr>
<td><strong>urlResponse</strong></td>
<td>URL de retour des Réponses (ex: <a href="https://www.monurlderesponse">https://www.monurlderesponse</a>).</td>
</tr>
<tr>
<td><strong>urlDlr</strong></td>
<td>URL de retour des Accusé de réception (ex: <a href="https://www.monurldlr">https://www.monurldlr</a>).</td>
</tr>
<tr>
<td><strong>isStopSms</strong></td>
<td>Gamme Premium : 1 pour ajouter la mention STOP à la fin du SMS (obligatoire pour les SMS commerciaux).<br> ⚠️ Gamme ÉCO : Ce paramètre n’est pas applicable pour cette gamme, il est nécessaire d'ajouter manuellement la mention NoPub=STOP pour les SMS commerciaux.</td>
</tr>
<tr>
<td><strong>isUnicode</strong></td>
<td>Si 1 : Active le mode Unicode, le nombre de caractères maximum par SMS sera de 70. <br><strong>Important :</strong> le SMS unicode doit être activé sur votre compte par un administrateur pour que les envois soient disponibles. Merci de prendre contact avec le service technique pour l’activation de cette fonctionnalité.<br> <a href="https://www.smspartner.fr/blog/liste-complete-des-emoticones-a-copier-coller" rel="noopener noreferrer nofollow">Voir la liste</a>.</td>
</tr>
<tr>
<td><strong>sandbox</strong></td>
<td>Pour tester l’envoi de SMS, vous pouvez utiliser le paramètre <code>sandbox:</code> <strong>1</strong> pour activer le mode bac à sable. ⚠️ Aucun SMS ne sera envoyé, et il n’y aura aucun débit sur votre compte. Ces SMS seront supprimés de vos listes d’envois automatiquement tous les jours.</td>
</tr>
<tr>
<td><strong>_format</strong></td>
<td>Format de la réponse. Vous pouvez choisir entre <code>JSON</code> ou <code>XML</code>. Par défaut, le format de réponse est <code>JSON</code></td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?php
// Prepare data for POST request $fields = array( 'apiKey'=&gt; 'YOUR API KEY', 'phoneNumbers'=&gt; '
+336xxxxxxxx', 'message'=&gt; 'This is your message', 'sender' =&gt; 'mycompany',
 'scheduledDeliveryDate'=&gt; '21/10/2014', 'time'=&gt; 9, 'minute'=&gt; 0 );
 $curl = curl_init(); 
 curl_setopt($curl, CURLOPT_URL,'https://api.smspartner.fr/v1/send');
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); 
curl_setopt($curl, CURLOPT_TIMEOUT, 10);
curl_setopt($curl, CURLOPT_POST, 1); 
curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($fields)); 
$result = curl_exec($curl); 
curl_close($curl);
 // Process your response here echo $result;
?&gt;
    </code></pre>
  </div>
  <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #send sms
    url = base_url &amp; "send"
    #note : utiliser une librairie JSON en production, par exemple :
    #https//www.nuget.org/packages/Newtonsoft.Json/
    Dim parameters As String = String.Format(
        "{{""apiKey"":""{0}"",""phoneNumbers"":""{1}"",""message"":""{2}""}}",
        apiKey,
        "+33XXXXXXXXX",
        "message de test")
    Console.Write(parameters)
    apiRequest("POST", url, parameters)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
import http.client
import json
conn = http.client.HTTPSConnection("api.smspartner.fr")

payload = json.dumps({
"apiKey": "your api key smspartner", #remplacez par votre clé API SMSPartner
"phoneNumbers": "+336xxxxxxxx", #remplacez par votre numéro de téléphone
"sender": "Your sender name",
"gamme": 1,
"message": "Cest un message test PYTHON", #remplacez par votre message
 "webhookUrl": "https://webhook.site/TOKEN" #remplacez TOKEN par votre token webhook.site
})

headers = {
'Content-Type': 'application/json',
'Content-Length': str(len(payload)),
'cache-control': 'no-cache'
}

conn.request("POST", "/v1/send", payload, headers) #Une requête POST est envoyée au serveur
 SMSPartner avec le chemin d'URL "/v1/send"

res = conn.getresponse() #La réponse est ensuite stockée dans la variable res.

data = res.read() 

print(data.decode("utf-8")) #Cette ligne lit les données de la réponse HTTP.
   </code></pre>
  </div>
  <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-curl">
curl -H  "Content-Type: application/json" -X POST -d '{"apiKey":"xxxxx","phoneNumbers":"xxxx",
"message":"test","sender":"mycompany"}' https://api.smspartner.fr/v1/send
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
// Importer le module 'https' de Node.js
const https = require('https');

// Objet JSON qui contient les informations nécessaires pour envoyer le SMS
const data = JSON.stringify({
    apiKey: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', //remplacez par votre clé API
    phoneNumbers: '+336XXXXXXXX',  //remplacez par votre numéro de téléphone
    sender: 'NodeJS',
    gamme: 1,
    message: "Cest un message test NodeJS" //remplacez par votre message
});

// Définir les options pour la requête HTTP POST vers l'API SMS Partner
const options = {
  hostname: 'api.smspartner.fr',
  port: 443,
  path: '/v1/send',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': data.length,
    'cache-control': 'no-cache',
    'webhookUrl': 'https://webhook.site/TOKEN' // Webhook URL *cette ligne est optionnel*
  }
};

// Demande HTTP POST avec les options et les données définies précédemment
const req = https.request(options, (res) =&gt; {
  console.log(`statusCode: ${res.statusCode}`);

  // Afficher les données de réponse de l'API sur la sortie standard
  res.on('data', (d) =&gt; {
    process.stdout.write(d);
  });
});

// Affichage en cas d'erreur lors de l'exécution de la requête HTTP POST
req.on('error', (error) =&gt; {
  console.error(error);
});

// Envoyer les données de l'objet 'data' à la demande
req.write(data);
// Terminer la demande HTTP POST
req.end();
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.OutputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.stream.Collectors;
import org.json.JSONObject;

public class SMSRequest {
    public static void main(String[] args) {
        try {
        // Création de l'objet URL avec l'adresse de l'API SMS
            URL url = new URL("https://api.smspartner.fr/v1/send");
        // Ouverture de la connexion HTTP avec l'API
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Content-Type", "application/json");
            conn.setRequestProperty("cache-control", "no-cache");
            conn.setDoOutput(true);

        // Création de l'objet JSON contenant les paramètres du SMS à envoyer   
            JSONObject json = new JSONObject();
            json.put("apiKey", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"); //your api key smspartner
            json.put("phoneNumbers", "+336XXXXXXXX"); //your phone number
            json.put("virtualNumber", "+336XXXXXXXX");
            json.put("sender", "demo JAVA");
            json.put("gamme", 1);
            json.put("message", "C'est un message test en JAVA !");
            json.put("webhookUrl", "https://webhook.site/TOKEN"); //your webhook url

        // Écriture des données JSON dans le corps de la requête HTTP
            OutputStream os = conn.getOutputStream(); 
            os.write(json.toString().getBytes());
            os.flush();

        // Lecture de la réponse de l'API
            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String response = br.lines().collect(Collectors.joining());
            System.out.println(response);

        // Fermeture de la connexion HTTP
            conn.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

struct SMSUnitaire: View {
    var body: some View {
        // Un bouton qui appelle la fonction sendSMS() lorsqu'il est pressé
        Button(action: {
            sendSMS()
        }) {
            Text("Envoyer SMS unitaire")
                .font(.system(size: 20)) // Taille du texte
                .foregroundColor(.white) // Couleur du texte
                .frame(minWidth: 0, maxWidth: .infinity) // Taille du bouton, qui s'ajuste automatiquement
                .padding() // Padding autour du texte
                .background(LinearGradient(gradient: Gradient(colors: [Color.blue, Color.blue.opacity
                (0.8)]), startPoint: .top, endPoint: .bottom)) // Fond du bouton, un dégradé de bleu
                .cornerRadius(10) // Coins arrondis du bouton
                .padding(.horizontal) // Espacement horizontal autour du bouton
        }
    }

    func sendSMS() {
        // Objet JSON contenant les informations nécessaires pour envoyer le SMS
        let data = [
            "apiKey": "XXXXXXXXXXXX YOUR API KEY XXXXXXXXXXXXX", // remplacez par votre clé API
            "phoneNumbers": "+336XXXXXXXX", // remplacez par votre numéro de téléphone
            "sender": "Swift",
            "gamme": 1,
            "message": "C'est un message test Swift" // remplacez par votre message
        ] as [String : Any]

        // Conversion de l'objet JSON en données
        guard let jsonData = try? JSONSerialization.data(withJSONObject: data, options: []) else {
            fatalError("Erreur lors de la conversion des données en JSON.")
        }

        // Définition des options pour la requête HTTP POST à l'API SMS Partner
        let url = URL(string: "https://api.smspartner.fr/v1/send")!
        var request = URLRequest(url: url)
        request.httpMethod = "POST" // Méthode HTTP
        request.httpBody = jsonData // Corps de la requête
        request.addValue("application/json", forHTTPHeaderField: "Content-Type") // Type de contenu 
        request.addValue("(jsonData.count)", forHTTPHeaderField: "Content-Length") // Longueur du  contenu
        request.addValue("no-cache", forHTTPHeaderField: "cache-control") // Contrôle du cache 
        request.addValue("https://webhook.site/TOKEN", forHTTPHeaderField: "webhookUrl") // URL du
         webhook *cette ligne est facultative*

        // Exécution de la requête HTTP POST avec les options et données définies précédemment
        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
            guard let httpResponse = response as? HTTPURLResponse else {
                fatalError("Erreur : réponse HTTP non valide.")
            }
            print("statusCode: (httpResponse.statusCode)") // Impression du statut HTTP

            if let error = error {
                print("Error: (error.localizedDescription)") // Impression de l'erreur, si elle existe
            }

            if let data = data {
                if let responseString = String(data: data, encoding: .utf8) {
                    print("Réponse : (responseString)") // Impression de la réponse, si elle existe
                }
            }
        }
        task.resume() // Démarrage de la tâche
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code class="language-go">
package main

import (
    "bytes"
    "fmt"
    "net/http"
)

func main() {
    apiKey := "VOTRE CLE API"
    phoneNumbers := "+336xxxxxxxx"
    message := "Ceci est votre message"
    sender := "monentreprise"
    scheduledDeliveryDate := "21/10/2014"
    time := 9
    minute := 0

    // Construire le corps JSON pour la requête POST
    jsonData := fmt.Sprintf(`{
        "apiKey": "%s",
        "phoneNumbers": "%s",
        "message": "%s",
        "sender": "%s",
        "scheduledDeliveryDate": "%s",
        "time": %d,
        "minute": %d
    }`, apiKey, phoneNumbers, message, sender, scheduledDeliveryDate, time, minute)

    // Effectuer la requête POST
    url := "https://api.smspartner.fr/v1/send"
    req, err := http.NewRequest("POST", url, bytes.NewBuffer([]byte(jsonData)))
    if err != nil {
        fmt.Println("Erreur lors de la création de la requête:", err)
        return
    }
    req.Header.Set("Content-Type", "application/json")

    client := &amp;http.Client{}
    resp, err := client.Do(req)
    if err != nil {
        fmt.Println("Erreur lors de l'envoi de la requête:", err)
        return
    }
    defer resp.Body.Close()

    // Traiter la réponse
    if resp.StatusCode == http.StatusOK {
        body := new(bytes.Buffer)
        _, err := body.ReadFrom(resp.Body)
        if err != nil {
            fmt.Println("Erreur lors de la lecture de la réponse:", err)
            return
        }
        fmt.Println(body.String())
    } else {
        fmt.Println("La requête POST a échoué. Code de réponse:", resp.StatusCode)
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var request = new
        {
            apiKey = "YOUR_API_KEY",
            phoneNumbers = "+336xxxxxxxx",
            message = "This is your message",
            sender = "mycompany",
            scheduledDeliveryDate = "21/10/2014",
            time = 9,
            minute = 0
        };

        var content = new StringContent(
            JsonConvert.SerializeObject(request),
            Encoding.UTF8,
            "application/json");

        HttpResponseMessage response = await client.PostAsync("https://api.smspartner.fr/v1/send", content);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("POST request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
   <span class="hljs-attr">"success"</span>:<span class="hljs-literal">true</span>,
   <span class="hljs-attr">"code"</span>:<span class="hljs-number">200</span>,
   <span class="hljs-attr">"message_id"</span>:<span class="hljs-number">307</span>,
   <span class="hljs-attr">"nb_sms"</span>: <span class="hljs-number">1</span>,
   <span class="hljs-attr">"cost"</span>: <span class="hljs-number">0.038</span>,
   <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
}</code></pre>
<h3 id="xml">XML</h3>
<pre><code class="language-xml hljs xml">    <span class="hljs-meta">&lt;?xml version='1.0' encoding='UTF-8'?&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>200<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>306<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>0.038<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
        &lt;![CDATA[EUR]]&gt;
  <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span></code></pre>
<h2 id="erreurs">Erreurs</h2>
<p>Exemple de message d’erreur:</p>
<h3 id="json-1">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"code"</span>:<span class="hljs-number">9</span>,
    <span class="hljs-attr">"errors"</span>: [{
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[message].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Le message est requis"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[phoneNumbers].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Ce numero de telephone n'est pas valide (922264)"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[sender].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"L'emetteur ne peut pas etre plus long que 11 caracteres"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[scheduledDeliveryDate].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"La date (21/11/2014 u00e0 :) est anterieure a la date actuelle."</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[minute].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"La minute est requise"</span>
    }, {
        <span class="hljs-attr">"elementId"</span>: <span class="hljs-string">"children[time].data"</span>,
        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"L'heure est requise"</span>
    }]
}</code></pre>
<h3 id="xml-1">XML</h3>
<pre><code class="language-xml hljs xml"><span class="hljs-meta">&lt;?xml version='1.0' encoding='UTF-8'?&gt;</span>
 <span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>9<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                  <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[message].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                  <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>Le message est requis<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                   <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[phoneNumbers].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                   <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>Ce numéro de téléphone n'est pas valide (922264)<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[sender].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>L'émetteur ne peut pas être plus long que 11 caractères<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[scheduledDeliveryDate].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>La date (21/11/2014 à :) est anterieure à la date actuelle. Si vous
                     souhaitez l'envoyer maintenant vous devez sélectionner [Envoi immédiat]<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[minute].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>La minute est requise<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>children[time].data<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>L'heure est requise<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
                <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span></code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Code erreurs</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">1</td>
<td style="text-align: left;">La Clé API est requise</td>
</tr>
<tr>
<td style="text-align: center;">2</td>
<td style="text-align: left;">Le numéro de téléphone est requis</td>
</tr>
<tr>
<td style="text-align: center;">9</td>
<td style="text-align: left;">Au moins une contrainte n’a pas été respectée lors de l’envoi :<br> L’émetteur ne peut pas être plus long que 11 caractères.<br>Numéro de téléphone non valide.<br> Si <strong>scheduledDeliveryDate</strong> est défini:<ul><li>La date (dd/mm/yyyy) est antérieure à la date actuelle.</li><li>La minute est requise.</li><li>L’heure est requise..</li></ul></td>
</tr>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">11</td>
<td style="text-align: left;">Manque de crédits</td>
</tr>
</tbody>
</table>
<h2 id="liste-des-caracteres-remplaces">Liste des caractères remplacés</h2>
<p>Consulter la table des caractéres remplacés : <a href="/docs/sms/envoyer-des-sms/envois_smsp4" style="background-color: #47a947; color: white; padding: 5px 8px; text-decoration: none; border-radius: 4px;"> 📒 Voir table</a> <br> <br></p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/envoyer-des-sms/envois_smsp1/" rel="alternate" type="text/html" />
    <published>2024-07-24T14:40:47+00:00</published>
    <updated>2024-07-24T14:40:47+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/smsp2/</id>
    <title>Crédits</title>
    <content type="html">
      <![CDATA[<h1 id="introduction-a-l-api-sms-partner">Introduction à l'API SMS Partner</h1>
<p>Cette requête est utilisée pour récupérer votre crédit disponible de SMS, ainsi que le nombre de SMS en instance de départ.</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: red; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/me</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d'API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: left;">Paramètre</th>
<th style="text-align: left;">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><strong>apiKey</strong></td>
<td style="text-align: left;">Clé API de votre compte. Vous l'obtenez dans votre compte SMS Partner.</td>
</tr>
</tbody>
</table>
<h3 id="parametres-optionnels">Paramètres optionnels</h3>
<table>
<thead>
<tr>
<th style="text-align: left;">Paramètre</th>
<th style="text-align: left;">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><strong>_format</strong></td>
<td style="text-align: left;">Format de la réponse. Vous pouvez choisir entre JSON ou XML. Par défaut, le format de réponse est JSON.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?php
// Prepare data for GET request
$data = 'apiKey=YOUR_API_KEY';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, 'https://api.smspartner.fr/v1/me?' . $data);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_TIMEOUT, 10);

$result = curl_exec($curl);
curl_close($curl);

// Process your response here
echo $result;
?&gt;
    </code></pre>
  </div>
  <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code class="language-vbnet">
cURL
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #check credits
    Dim url As String
    url = base_url &amp; "me" &amp; "?apiKey=" &amp; apiKey

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code class="language-python">
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def get_balance(self):
        url = URL + "/me?apiKey=" + API_KEY
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
   </code></pre>
  </div>
  <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code class="language-curl">
    curl -H "Content-Type: application/json" -X GET  https://api.smspartner.fr/v1/me?apiKey=xxx
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code class="language-javascript">
const https = require('https');
// Préparer les données pour la requête GET
let data = 'apiKey=YOUR API KEY';
let url = 'https://api.smspartner.fr/v1/me?' + data;

https.get(url, (res) =&gt; {
  let data = ';

  // Un morceau de données a été reçu.
  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  // La totalité de la réponse a été reçue. Imprimer le résultat.
  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  // Un message d'erreur sera imprimé en cas d'erreur.
  console.log("Erreur: " + err.message);
});
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code class="language-java">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class CreditsSms {
    public static void main(String[] args) {
        try {
            String apiKey = "your_api_key";
            String url = "https://api.smspartner.fr/v1/me?apiKey=" + apiKey;

            URL obj = new URL(url);
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setRequestMethod("GET");

            int responseCode = con.getResponseCode();

            if (responseCode == HttpURLConnection.HTTP_OK) {
                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
                String inputLine;
                StringBuilder response = new StringBuilder();

                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                System.out.println(response.toString());
            } else {
                System.out.println("GET request failed. Response Code: " + responseCode);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code class="language-swift">
import SwiftUI

struct Credits: View {
    @State private var credit: String = "Loading..."

    var body: some View {
        VStack {
            Text("Mon crédit")
                .font(.title)
                .padding()

            Text(credit)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: getCredit)
    }

    func getCredit() {
        let apiKey = "Your-api-key"
        let urlString = "https://api.smspartner.fr/v1/me?apiKey=(apiKey)"

        guard let url = URL(string: urlString) else {
            print("URL inválida")
            return
        }

        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            if let error = error {
                print("Error: (error)")
            } else if let data = data {
                let result = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    credit = result ?? "Error"
                }
            }
        }

        task.resume()
    }
}

struct CreditView_Previews: PreviewProvider {
    static var previews: some View {
        Credits()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code class="language-go">
package main

import (
    "fmt"
    "io/ioutil"
    "net/http"
)

func main() {
    apiKey := "your_api_key"
    url := "https://api.smspartner.fr/v1/me?apiKey=" + apiKey

    response, err := http.Get(url)
    if err != nil {
        fmt.Println("GET request failed:", err)
        return
    }
    defer response.Body.Close()

    if response.StatusCode == http.StatusOK {
        bodyBytes, err := ioutil.ReadAll(response.Body)
        if err != nil {
            fmt.Println("Failed to read response body:", err)
            return
        }
        fmt.Println(string(bodyBytes))
    } else {
        fmt.Println("GET request failed. Response Code:", response.StatusCode)
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code class="language-csharp">
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "YOUR_API_KEY";
        var uri = new Uri($"https://api.smspartner.fr/v1/me?apiKey={apiKey}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("GET request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<h2 id="reponses">Réponses</h2>
<h3 id="json">JSON</h3>
<pre><code class="language-json hljs json">{
    <span class="hljs-attr">"success"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"code"</span>: <span class="hljs-number">200</span>,
    <span class="hljs-attr">"user"</span>: {
        <span class="hljs-attr">"username"</span>: <span class="hljs-string">"example@email.com"</span>,
        <span class="hljs-attr">"firstname"</span>: <span class="hljs-string">"John"</span>,
        <span class="hljs-attr">"lastname"</span>: <span class="hljs-string">"Doe"</span>
    },
    <span class="hljs-attr">"credits"</span>: {
        <span class="hljs-attr">"creditSms"</span>: <span class="hljs-number">269082</span>,
        <span class="hljs-attr">"creditSmsECO"</span>: <span class="hljs-number">444570</span>,
        <span class="hljs-attr">"creditHlr"</span>: <span class="hljs-number">2045023</span>,
        <span class="hljs-attr">"toSend"</span>: <span class="hljs-number">0</span>,
        <span class="hljs-attr">"balance"</span>: <span class="hljs-string">"10225.119"</span>,
        <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"EUR"</span>
    }
}</code></pre>
<h3 id="xml">XML</h3>
<pre><code class="language-xml hljs xml">    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">code</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"language-xml"</span>&gt;</span>
<span class="hljs-meta">&lt;?xml version='1.0' encoding='UTF-8'?&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>200<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>exemple@email.com<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">firstname</span>&gt;</span>John<span class="hljs-tag">&lt;/<span class="hljs-name">firstname</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">lastname</span>&gt;</span>Doe<span class="hljs-tag">&lt;/<span class="hljs-name">lastname</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>269070<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>444551<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>2044937<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
            &lt;![CDATA[10224.688]]&gt;
        <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
            &lt;![CDATA[EUR]]&gt;
        <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">entry</span>&gt;</span>
            &lt;![CDATA[10224.688]]&gt;
        <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span></code></pre>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Réponse</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/smsp2/" rel="alternate" type="text/html" />
    <published>2024-07-24T13:14:53+00:00</published>
    <updated>2024-07-24T13:14:53+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/sms/smsp1/</id>
    <title>Introduction</title>
    <content type="html">
      <![CDATA[<h1 id="introduction-a-l-api-sms-partner">Introduction à l'API SMS Partner</h1>
<p>Les envois de SMS sont effectués à partir de l'<a href="https://www.smspartner.fr/api-sms/" rel="noopener noreferrer nofollow">API SMS</a> de SMS Partner. Depuis le site, vous avez un accès immédiat à notre API gratuite : elle vous permet d’intégrer facilement nos services de SMS à votre site web, logiciel ou application CRM en PHP, ASP, .NET, Java ou tout autre langage.</p>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d'API prend en charge au minimum les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: left;">Paramètre</th>
<th style="text-align: left;">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><code>apiKey</code></td>
<td style="text-align: left;">Clé API de votre compte. Vous l'obtenez dans votre <a href="https://my.smspartner.fr/connexion" rel="noopener noreferrer nofollow">compte SMS Partner</a>.</td>
</tr>
</tbody>
</table>
<h3 id="parametres-optionnels">Paramètres optionnels</h3>
<table>
<thead>
<tr>
<th style="text-align: left;">Paramètre</th>
<th style="text-align: left;">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><code>_format</code></td>
<td style="text-align: left;">Format de la réponse. Vous avez le choix entre <code>json</code> et <code>xml</code>. Par défaut, le format de réponse est <code>json</code>. Exemple : <code>https://api.smspartner.fr/v1/me?apiKey=YOUR_API_KEY&amp;_format=json</code></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align: left;">_<em>format</em></th>
<th style="text-align: left;"><em>Content-Type</em></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;">json</td>
<td style="text-align: left;">application/json</td>
</tr>
<tr>
<td style="text-align: left;">xml</td>
<td style="text-align: left;">application/xml</td>
</tr>
</tbody>
</table>
<h4 id="json">JSON</h4>
<pre><code class="language-json hljs json">POST /v1/send HTTP/<span class="hljs-number">1.1</span>
Host: api.smspartner.fr
Content-Type: application/json

{
    <span class="hljs-attr">"apiKey"</span>: <span class="hljs-string">"API_KEY"</span>,
    <span class="hljs-attr">"phoneNumbers"</span>: <span class="hljs-string">"+33600000000"</span>,
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"Hello world"</span>
}</code></pre>
<h2 id="requetes">Requêtes</h2>
<p>Toutes les demandes de l’API doivent être envoyées à <a href="http://api.smspartner.fr/v1/commande">http://api.smspartner.fr/v1/commande</a>, commande est l’appel API que vous souhaitez exécuter, avec les paramètres inclus dans <strong>le body POST</strong>  ou <strong>l’URL (GET)</strong>.</p>
<h2 id="telecharger-un-exemple-en-php">Télécharger un exemple en PHP</h2>
<p><a href="https://github.com/smspartnerfr/SMS-API-PHP" class="btn btn-success btn-sm text-white">Exemple API</a></p>
<p>N’hésitez pas à consulter nos <a href="https://docpartner.dev/sdks" rel="noopener noreferrer nofollow">SDK</a>.disponible sur ce site.</p>]]>
    </content>
    <link href="http://localhost:8000/docs/sms/smsp1/" rel="alternate" type="text/html" />
    <published>2024-07-23T13:37:04+00:00</published>
    <updated>2024-07-23T13:37:04+00:00</updated>
  </entry>
  <entry xml:lang="fr">
    <id>http://localhost:8000/docs/verification-numeros/verification-page1/</id>
    <title>Introduction Mail</title>
    <content type="html">
      <![CDATA[<h1 id="introduction-mail">Introduction MAIL</h1>
<p>Cette requête est utilisée pour récupérer votre crédit disponible de SMS, ainsi que le nombre de SMS en instance de départ.</p>
<h2 id="url">URL</h2>
<div>
  <div style="background-color: #FF4C4C; color: white; display: inline-block; padding: 2px 6px; font-weight: bold; border-radius: 4px;">GET</div> 
  <span style="color: red; display: inline-block; vertical-align: middle; margin-left: 10px;">https://api.smspartner.fr/v1/me</span>
</div>
<h2 id="parametres">Paramètres</h2>
<p>Chaque demande d'API prend en charge les paramètres suivants :</p>
<table>
<thead>
<tr>
<th style="text-align: left;">Paramètre</th>
<th style="text-align: left;">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><strong>apiKey</strong></td>
<td style="text-align: left;">Clé API de votre compte. Vous l'obtenez dans votre compte SMS Partner.</td>
</tr>
</tbody>
</table>
<h3 id="parametres-optionnels">Paramètres optionnels</h3>
<table>
<thead>
<tr>
<th style="text-align: left;">Paramètre</th>
<th style="text-align: left;">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><strong>_format</strong></td>
<td style="text-align: left;">Format de la réponse. Vous pouvez choisir entre JSON ou XML. Par défaut, le format de réponse est JSON.</td>
</tr>
</tbody>
</table>
<h2 id="requete">Requête</h2>
<p>Exemple de requête :</p>
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="php-tab" data-toggle="tab" href="#php" role="tab" aria-controls="php" aria-selected="true">PHP</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="vbnet-tab" data-toggle="tab" href="#vbnet" role="tab" aria-controls="vbnet" aria-selected="false">VB.net</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab" aria-controls="python" aria-selected="false">Python</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="curl-tab" data-toggle="tab" href="#curl" role="tab" aria-controls="curl" aria-selected="false">cURL</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="nodejs-tab" data-toggle="tab" href="#nodejs" role="tab" aria-controls="nodejs" aria-selected="false">NodeJS</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="java-tab" data-toggle="tab" href="#java" role="tab" aria-controls="java" aria-selected="false">JAVA</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="swift-tab" data-toggle="tab" href="#swift" role="tab" aria-controls="swift" aria-selected="false">SWIFT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="go-tab" data-toggle="tab" href="#go" role="tab" aria-controls="go" aria-selected="false">GO</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="csharp-tab" data-toggle="tab" href="#csharp" role="tab" aria-controls="csharp" aria-selected="false">C#</a>
  </li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="php" role="tabpanel" aria-labelledby="php-tab">
    <pre><code class="language-php">
&lt;?php
// Prepare data for GET request
$data = 'apiKey=YOUR_API_KEY';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, 'https://api.smspartner.fr/v1/me?' . $data);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_TIMEOUT, 10);

$result = curl_exec($curl);
curl_close($curl);

// Process your response here
echo $result;
?&gt;
    </code></pre>
  </div>
  <div class="tab-pane fade" id="vbnet" role="tabpanel" aria-labelledby="vbnet-tab">
   <pre><code>
cURL
Imports System.IO
Imports System.Net

Module Module1

  Sub Main()

    Dim base_url As String = "http://api.smspartner.fr/v1/"
    Dim apiKey As String = "VOTRE_APIKEY"

    #check credits
    Dim url As String
    url = base_url &amp; "me" &amp; "?apiKey=" &amp; apiKey

    Dim credits As String
    credits = apiRequest("GET", url, Nothing)

  End Sub

  Function apiRequest(method As String, url As String, parameters As String) As String

    Dim request As HttpWebRequest
    request = WebRequest.Create(url)
    request.Method = method
    request.Timeout = 10000   # timeout in ms
    request.ContentType = "application/json; charset=utf-8"
    request.ContentLength = 0

    #set POST data
    If Not String.IsNullOrEmpty(parameters) Then
      request.ContentLength = parameters.Length
      Using reqStream As StreamWriter = New StreamWriter(request.GetRequestStream())
        reqStream.Write(parameters)
      End Using
    End If

    #get response
    Dim returnValue As String = Nothing
    Using response As HttpWebResponse = request.GetResponse()
      If response.StatusCode = HttpStatusCode.OK Then
        Using resStream = response.GetResponseStream()
          If resStream IsNot Nothing Then
            Using reader As New StreamReader(resStream)
              returnValue = reader.ReadToEnd()
            End Using
          End If
        End Using
      End If
    End Using
    apiRequest = returnValue

  End Function

End Module

   </code></pre>
  </div>
  <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
    <!-- Python code example goes here -->
    <pre><code>
# std
import logging
import json
from collections import OrderedDict

# 3p
import requests

API_KEY = "MY API KEY"
URL = "https://api.smspartner.fr/v1"

class SMSPartner():
    def get_balance(self):
        url = URL + "/me?apiKey=" + API_KEY
        r = requests.get(url)
        r_json = r.json()
        if r_json.get("success") == True:
            print(r_json)
            status = True
        else:
            print(r_json)
            status = False
        return status
   </code></pre>
  </div>
  <div class="tab-pane fade" id="curl" role="tabpanel" aria-labelledby="curl-tab">
    <!-- cURL code example goes here -->
    <pre><code>
    curl -H "Content-Type: application/json" -X GET  https://api.smspartner.fr/v1/me?apiKey=xxx
   </code></pre>
  </div>
  <div class="tab-pane fade" id="nodejs" role="tabpanel" aria-labelledby="nodejs-tab">
    <!-- NodeJS code example goes here -->
    <pre><code>
const https = require('https');
// Préparer les données pour la requête GET
let data = 'apiKey=YOUR API KEY';
let url = 'https://api.smspartner.fr/v1/me?' + data;

https.get(url, (res) =&gt; {
  let data = '';

  // Un morceau de données a été reçu.
  res.on('data', (chunk) =&gt; {
    data += chunk;
  });

  // La totalité de la réponse a été reçue. Imprimer le résultat.
  res.on('end', () =&gt; {
    console.log(JSON.parse(data));
  });

}).on("error", (err) =&gt; {
  // Un message d'erreur sera imprimé en cas d'erreur.
  console.log("Erreur: " + err.message);
});
   </code></pre>
  </div>
  <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
    <!-- JAVA code example goes here -->
   <pre><code>
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class CreditsSms {
    public static void main(String[] args) {
        try {
            String apiKey = "your_api_key";
            String url = "https://api.smspartner.fr/v1/me?apiKey=" + apiKey;

            URL obj = new URL(url);
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setRequestMethod("GET");

            int responseCode = con.getResponseCode();

            if (responseCode == HttpURLConnection.HTTP_OK) {
                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
                String inputLine;
                StringBuilder response = new StringBuilder();

                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                System.out.println(response.toString());
            } else {
                System.out.println("GET request failed. Response Code: " + responseCode);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="swift" role="tabpanel" aria-labelledby="swift-tab">
    <!-- SWIFT code example goes here -->
    <pre><code>
import SwiftUI

struct Credits: View {
    @State private var credit: String = "Loading..."

    var body: some View {
        VStack {
            Text("Mon crédit")
                .font(.title)
                .padding()

            Text(credit)
                .font(.system(size: 20))
                .padding()
        }
        .onAppear(perform: getCredit)
    }

    func getCredit() {
        let apiKey = "Your-api-key"
        let urlString = "https://api.smspartner.fr/v1/me?apiKey=\(apiKey)"

        guard let url = URL(string: urlString) else {
            print("URL inválida")
            return
        }

        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            if let error = error {
                print("Error: \(error)")
            } else if let data = data {
                let result = String(data: data, encoding: .utf8)
                DispatchQueue.main.async {
                    credit = result ?? "Error"
                }
            }
        }

        task.resume()
    }
}

struct CreditView_Previews: PreviewProvider {
    static var previews: some View {
        Credits()
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="go" role="tabpanel" aria-labelledby="go-tab">
    <!-- GO code example goes here -->
    <pre><code>
package main

import (
    "fmt"
    "io/ioutil"
    "net/http"
)

func main() {
    apiKey := "your_api_key"
    url := "https://api.smspartner.fr/v1/me?apiKey=" + apiKey

    response, err := http.Get(url)
    if err != nil {
        fmt.Println("GET request failed:", err)
        return
    }
    defer response.Body.Close()

    if response.StatusCode == http.StatusOK {
        bodyBytes, err := ioutil.ReadAll(response.Body)
        if err != nil {
            fmt.Println("Failed to read response body:", err)
            return
        }
        fmt.Println(string(bodyBytes))
    } else {
        fmt.Println("GET request failed. Response Code:", response.StatusCode)
    }
}
   </code></pre>
  </div>
  <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
    <!-- C# code example goes here -->
    <pre><code>
using System;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    private static readonly HttpClient client = new HttpClient();

    static async Task Main(string[] args)
    {
        var apiKey = "YOUR_API_KEY";
        var uri = new Uri($"https://api.smspartner.fr/v1/me?apiKey={apiKey}");

        HttpResponseMessage response = await client.GetAsync(uri);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine(result);
        }
        else
        {
            Console.WriteLine("GET request failed with status code: " + response.StatusCode);
        }
    }
}
   </code></pre>
  </div>
</div>
<!-- Nouvelle section de navigation tabs pour JSON et XML -->
<ul class="nav nav-tabs" id="formatTab" role="tablist" style="margin-top: 20px;">
  <li class="nav-item">
    <a class="nav-link active" id="json-tab" data-toggle="tab" href="#json" role="tab" aria-controls="json" aria-selected="true">JSON</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="xml-tab" data-toggle="tab" href="#xml" role="tab" aria-controls="xml" aria-selected="false">XML</a>
  </li>
</ul>
<!-- Tab panes pour JSON et XML -->
<div class="tab-content">
  <div class="tab-pane fade show active" id="json" role="tabpanel" aria-labelledby="json-tab">
    <pre><code class="language-json">
{
    "success": true,
    "code": 200,
    "user": {
        "username": "exemple@email.com",
        "firstname": "John",
        "lastname": "Doe"
    },
    "credits": {
        "creditSms": 269082,
        "creditSmsLowCost": 444570 (Ce paramètre sera prochainement supprimé, il est actuellement remplacé par creditSmsECO)
        "creditSmsECO": 444570,
        "creditHlr": 2045023,
        "toSend": 0,
        "solde": "10225.119",
        "currency": "EUR",
        "balance": "10225.119"
    }
}
    </code></pre>
  </div>
  <div class="tab-pane fade" id="xml" role="tabpanel" aria-labelledby="xml-tab">
    <pre><code class="language-xml">
<?xml version='1.0' encoding='UTF-8'?>
<result>
    <entry>true</entry>
    <entry>200</entry>
    <entry>
        <username>exemple@email.com</username>
        <firstname>John</firstname>
        <lastname>Doe</lastname>
    </entry>
    <entry>
        <entry>269070</entry>
        <entry>444551</entry>
        <entry>2044937</entry>
        <entry>0</entry>
        <entry>
            
        </entry>
        <entry>
            
        </entry>
        <entry>
            
        </entry>
    </entry>
</result>
    </code></pre>
  </div>
</div>
<h2 id="code-de-controle">Code de contrôle</h2>
<table>
<thead>
<tr>
<th style="text-align: center;">_</th>
<th style="text-align: left;">Réponse</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: center;">10</td>
<td style="text-align: left;">Clé API incorrecte</td>
</tr>
<tr>
<td style="text-align: center;">200</td>
<td style="text-align: left;">Tout s’est bien passé !</td>
</tr>
</tbody>
</table>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>]]>
    </content>
    <link href="http://localhost:8000/docs/verification-numeros/verification-page1/" rel="alternate" type="text/html" />
    <published>2024-07-15T12:49:06+00:00</published>
    <updated>2024-07-15T12:49:06+00:00</updated>
  </entry>
</feed>
